<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="566" onload="init(evt)" viewBox="0 0 1200 566" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="566" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="549.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="549.00"> </text><svg id="frames" x="10" width="1180" total_samples="471620279"><g><title>BN_clear_free (2,127,977 samples, 0.45%)</title><rect x="0.0000%" y="485" width="0.4512%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="2127977"/><text x="0.2500%" y="495.50"></text></g><g><title>cfree (2,127,977 samples, 0.45%)</title><rect x="0.0000%" y="469" width="0.4512%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="2127977"/><text x="0.2500%" y="479.50"></text></g><g><title>CRYPTO_malloc (1,878,604 samples, 0.40%)</title><rect x="0.4512%" y="485" width="0.3983%" height="15" fill="rgb(221,193,54)" fg:x="2127977" fg:w="1878604"/><text x="0.7012%" y="495.50"></text></g><g><title>malloc (1,878,604 samples, 0.40%)</title><rect x="0.4512%" y="469" width="0.3983%" height="15" fill="rgb(248,212,6)" fg:x="2127977" fg:w="1878604"/><text x="0.7012%" y="479.50"></text></g><g><title>[libc.so.6] (1,878,604 samples, 0.40%)</title><rect x="0.4512%" y="453" width="0.3983%" height="15" fill="rgb(208,68,35)" fg:x="2127977" fg:w="1878604"/><text x="0.7012%" y="463.50"></text></g><g><title>OPENSSL_LH_insert (1,821,991 samples, 0.39%)</title><rect x="0.8495%" y="485" width="0.3863%" height="15" fill="rgb(232,128,0)" fg:x="4006581" fg:w="1821991"/><text x="1.0995%" y="495.50"></text></g><g><title>[cargo] (2,969,497 samples, 0.63%)</title><rect x="1.2359%" y="485" width="0.6296%" height="15" fill="rgb(207,160,47)" fg:x="5828572" fg:w="2969497"/><text x="1.4859%" y="495.50"></text></g><g><title>ossl_asn1_template_free (2,969,497 samples, 0.63%)</title><rect x="1.2359%" y="469" width="0.6296%" height="15" fill="rgb(228,23,34)" fg:x="5828572" fg:w="2969497"/><text x="1.4859%" y="479.50"></text></g><g><title>[cargo] (2,969,497 samples, 0.63%)</title><rect x="1.2359%" y="453" width="0.6296%" height="15" fill="rgb(218,30,26)" fg:x="5828572" fg:w="2969497"/><text x="1.4859%" y="463.50"></text></g><g><title>OSSL_PARAM_construct_utf8_string (2,969,497 samples, 0.63%)</title><rect x="1.2359%" y="437" width="0.6296%" height="15" fill="rgb(220,122,19)" fg:x="5828572" fg:w="2969497"/><text x="1.4859%" y="447.50"></text></g><g><title>[libc.so.6] (2,969,497 samples, 0.63%)</title><rect x="1.2359%" y="421" width="0.6296%" height="15" fill="rgb(250,228,42)" fg:x="5828572" fg:w="2969497"/><text x="1.4859%" y="431.50"></text></g><g><title>[ld-linux-x86-64.so.2] (239,034 samples, 0.05%)</title><rect x="1.8725%" y="389" width="0.0507%" height="15" fill="rgb(240,193,28)" fg:x="8831088" fg:w="239034"/><text x="2.1225%" y="399.50"></text></g><g><title>[ld-linux-x86-64.so.2] (239,034 samples, 0.05%)</title><rect x="1.8725%" y="373" width="0.0507%" height="15" fill="rgb(216,20,37)" fg:x="8831088" fg:w="239034"/><text x="2.1225%" y="383.50"></text></g><g><title>[ld-linux-x86-64.so.2] (239,034 samples, 0.05%)</title><rect x="1.8725%" y="357" width="0.0507%" height="15" fill="rgb(206,188,39)" fg:x="8831088" fg:w="239034"/><text x="2.1225%" y="367.50"></text></g><g><title>[ld-linux-x86-64.so.2] (239,034 samples, 0.05%)</title><rect x="1.8725%" y="341" width="0.0507%" height="15" fill="rgb(217,207,13)" fg:x="8831088" fg:w="239034"/><text x="2.1225%" y="351.50"></text></g><g><title>[ld-linux-x86-64.so.2] (239,034 samples, 0.05%)</title><rect x="1.8725%" y="325" width="0.0507%" height="15" fill="rgb(231,73,38)" fg:x="8831088" fg:w="239034"/><text x="2.1225%" y="335.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1,903,570 samples, 0.40%)</title><rect x="1.8655%" y="453" width="0.4036%" height="15" fill="rgb(225,20,46)" fg:x="8798069" fg:w="1903570"/><text x="2.1155%" y="463.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1,903,570 samples, 0.40%)</title><rect x="1.8655%" y="437" width="0.4036%" height="15" fill="rgb(210,31,41)" fg:x="8798069" fg:w="1903570"/><text x="2.1155%" y="447.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1,870,551 samples, 0.40%)</title><rect x="1.8725%" y="421" width="0.3966%" height="15" fill="rgb(221,200,47)" fg:x="8831088" fg:w="1870551"/><text x="2.1225%" y="431.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1,870,551 samples, 0.40%)</title><rect x="1.8725%" y="405" width="0.3966%" height="15" fill="rgb(226,26,5)" fg:x="8831088" fg:w="1870551"/><text x="2.1225%" y="415.50"></text></g><g><title>[unknown] (1,631,517 samples, 0.35%)</title><rect x="1.9232%" y="389" width="0.3459%" height="15" fill="rgb(249,33,26)" fg:x="9070122" fg:w="1631517"/><text x="2.1732%" y="399.50"></text></g><g><title>[unknown] (1,631,517 samples, 0.35%)</title><rect x="1.9232%" y="373" width="0.3459%" height="15" fill="rgb(235,183,28)" fg:x="9070122" fg:w="1631517"/><text x="2.1732%" y="383.50"></text></g><g><title>[unknown] (1,631,517 samples, 0.35%)</title><rect x="1.9232%" y="357" width="0.3459%" height="15" fill="rgb(221,5,38)" fg:x="9070122" fg:w="1631517"/><text x="2.1732%" y="367.50"></text></g><g><title>[unknown] (1,631,517 samples, 0.35%)</title><rect x="1.9232%" y="341" width="0.3459%" height="15" fill="rgb(247,18,42)" fg:x="9070122" fg:w="1631517"/><text x="2.1732%" y="351.50"></text></g><g><title>[unknown] (1,631,517 samples, 0.35%)</title><rect x="1.9232%" y="325" width="0.3459%" height="15" fill="rgb(241,131,45)" fg:x="9070122" fg:w="1631517"/><text x="2.1732%" y="335.50"></text></g><g><title>[unknown] (1,631,517 samples, 0.35%)</title><rect x="1.9232%" y="309" width="0.3459%" height="15" fill="rgb(249,31,29)" fg:x="9070122" fg:w="1631517"/><text x="2.1732%" y="319.50"></text></g><g><title>[unknown] (1,631,517 samples, 0.35%)</title><rect x="1.9232%" y="293" width="0.3459%" height="15" fill="rgb(225,111,53)" fg:x="9070122" fg:w="1631517"/><text x="2.1732%" y="303.50"></text></g><g><title>[unknown] (1,631,517 samples, 0.35%)</title><rect x="1.9232%" y="277" width="0.3459%" height="15" fill="rgb(238,160,17)" fg:x="9070122" fg:w="1631517"/><text x="2.1732%" y="287.50"></text></g><g><title>[unknown] (1,631,517 samples, 0.35%)</title><rect x="1.9232%" y="261" width="0.3459%" height="15" fill="rgb(214,148,48)" fg:x="9070122" fg:w="1631517"/><text x="2.1732%" y="271.50"></text></g><g><title>[unknown] (1,631,517 samples, 0.35%)</title><rect x="1.9232%" y="245" width="0.3459%" height="15" fill="rgb(232,36,49)" fg:x="9070122" fg:w="1631517"/><text x="2.1732%" y="255.50"></text></g><g><title>[unknown] (1,631,517 samples, 0.35%)</title><rect x="1.9232%" y="229" width="0.3459%" height="15" fill="rgb(209,103,24)" fg:x="9070122" fg:w="1631517"/><text x="2.1732%" y="239.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1,920,776 samples, 0.41%)</title><rect x="1.8655%" y="485" width="0.4073%" height="15" fill="rgb(229,88,8)" fg:x="8798069" fg:w="1920776"/><text x="2.1155%" y="495.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1,920,776 samples, 0.41%)</title><rect x="1.8655%" y="469" width="0.4073%" height="15" fill="rgb(213,181,19)" fg:x="8798069" fg:w="1920776"/><text x="2.1155%" y="479.50"></text></g><g><title>_RINvXNtNtCslmjiST2XqAc_9toml_edit2de5tableNtB3_17TableDeserializerNtNtCseteJWu6BiOQ_5serde2de12Deserializer15deserialize_anyINtCs7kGYzRh8DWY_13serde_ignored4WrapINtNvXs3d_NtB14_5implsINtNtNtNtCsiFC1Riw8GUp_5alloc11collections5btree3map8BTreeMapppENtB14_11Deserialize11deserialize10MapVisitorNtNtCse9N2Mh4NCnl_18cargo_util_schemas8manifest11PackageNameNtB4H_21InheritableDependencyENCNvNtNtCsbvvXMm9yrGt_5cargo4util4toml16deserialize_toml0EEB6f_ (2,919,613 samples, 0.62%)</title><rect x="2.2728%" y="469" width="0.6191%" height="15" fill="rgb(254,191,54)" fg:x="10718845" fg:w="2919613"/><text x="2.5228%" y="479.50"></text></g><g><title>_RNvMsi_NtNtNtCsiFC1Riw8GUp_5alloc11collections5btree3mapINtB5_8BTreeMapNtNtCse9N2Mh4NCnl_18cargo_util_schemas8manifest11PackageNameNtB19_21InheritableDependencyE6insertCsbvvXMm9yrGt_5cargo (2,919,613 samples, 0.62%)</title><rect x="2.2728%" y="453" width="0.6191%" height="15" fill="rgb(241,83,37)" fg:x="10718845" fg:w="2919613"/><text x="2.5228%" y="463.50"></text></g><g><title>malloc (2,919,613 samples, 0.62%)</title><rect x="2.2728%" y="437" width="0.6191%" height="15" fill="rgb(233,36,39)" fg:x="10718845" fg:w="2919613"/><text x="2.5228%" y="447.50"></text></g><g><title>[libc.so.6] (2,919,613 samples, 0.62%)</title><rect x="2.2728%" y="421" width="0.6191%" height="15" fill="rgb(226,3,54)" fg:x="10718845" fg:w="2919613"/><text x="2.5228%" y="431.50"></text></g><g><title>_RINvXs6_NtCs68yqdWhFN9u_10serde_json3serINtB6_8CompoundQINtNtCsiFC1Riw8GUp_5alloc3vec3VechENtB6_16CompactFormatterENtNtCseteJWu6BiOQ_5serde3ser12SerializeMap13serialize_keyeECskZK871GfcoY_5cargo (3,246,965 samples, 0.69%)</title><rect x="2.8918%" y="469" width="0.6885%" height="15" fill="rgb(245,192,40)" fg:x="13638458" fg:w="3246965"/><text x="3.1418%" y="479.50"></text></g><g><title>_RINvXss_NtNtCseteJWu6BiOQ_5serde3ser5implsNtNtCslO3BPZ6DDYj_3std4path7PathBufNtB8_9Serialize9serializeQINtNtCs68yqdWhFN9u_10serde_json3ser10SerializerQINtNtCsiFC1Riw8GUp_5alloc3vec3VechEEECskZK871GfcoY_5cargo (3,246,965 samples, 0.69%)</title><rect x="2.8918%" y="453" width="0.6885%" height="15" fill="rgb(238,167,29)" fg:x="13638458" fg:w="3246965"/><text x="3.1418%" y="463.50"></text></g><g><title>_RNvMs0_NtNtNtCsbvvXMm9yrGt_5cargo7sources8registry5indexNtB5_13RegistryIndex23query_inner_with_online (2,718,669 samples, 0.58%)</title><rect x="3.5803%" y="469" width="0.5765%" height="15" fill="rgb(232,182,51)" fg:x="16885423" fg:w="2718669"/><text x="3.8303%" y="479.50"></text></g><g><title>_RNvMs3_NtCsillUmgM6iAQ_8indexmap3mapINtB5_8IndexMapNtNtCslmjiST2XqAc_9toml_edit3key3KeyNtNtBR_4item4ItemE5entryBR_ (2,928,379 samples, 0.62%)</title><rect x="4.1568%" y="469" width="0.6209%" height="15" fill="rgb(231,60,39)" fg:x="19604092" fg:w="2928379"/><text x="4.4068%" y="479.50"></text></g><g><title>_RNvMs5_NtNtCsbvvXMm9yrGt_5cargo4util9interningNtB5_14InternedString8from_cow (2,953,392 samples, 0.63%)</title><rect x="4.7777%" y="469" width="0.6262%" height="15" fill="rgb(208,69,12)" fg:x="22532471" fg:w="2953392"/><text x="5.0277%" y="479.50"></text></g><g><title>[libc.so.6] (2,953,392 samples, 0.63%)</title><rect x="4.7777%" y="453" width="0.6262%" height="15" fill="rgb(235,93,37)" fg:x="22532471" fg:w="2953392"/><text x="5.0277%" y="463.50"></text></g><g><title>_RNvNtCsbTFxFVJWws8_10cargo_util5paths10read_bytes (3,164,358 samples, 0.67%)</title><rect x="5.4039%" y="469" width="0.6710%" height="15" fill="rgb(213,116,39)" fg:x="25485863" fg:w="3164358"/><text x="5.6539%" y="479.50"></text></g><g><title>std::fs::read::inner (3,164,358 samples, 0.67%)</title><rect x="5.4039%" y="453" width="0.6710%" height="15" fill="rgb(222,207,29)" fg:x="25485863" fg:w="3164358"/><text x="5.6539%" y="463.50"></text></g><g><title>std::fs::File::open (3,164,358 samples, 0.67%)</title><rect x="5.4039%" y="437" width="0.6710%" height="15" fill="rgb(206,96,30)" fg:x="25485863" fg:w="3164358"/><text x="5.6539%" y="447.50"></text></g><g><title>std::fs::OpenOptions::open (3,164,358 samples, 0.67%)</title><rect x="5.4039%" y="421" width="0.6710%" height="15" fill="rgb(218,138,4)" fg:x="25485863" fg:w="3164358"/><text x="5.6539%" y="431.50"></text></g><g><title>std::fs::OpenOptions::_open (3,164,358 samples, 0.67%)</title><rect x="5.4039%" y="405" width="0.6710%" height="15" fill="rgb(250,191,14)" fg:x="25485863" fg:w="3164358"/><text x="5.6539%" y="415.50"></text></g><g><title>std::sys::pal::unix::fs::File::open (3,164,358 samples, 0.67%)</title><rect x="5.4039%" y="389" width="0.6710%" height="15" fill="rgb(239,60,40)" fg:x="25485863" fg:w="3164358"/><text x="5.6539%" y="399.50"></text></g><g><title>std::sys::pal::common::small_c_string::run_path_with_cstr (3,164,358 samples, 0.67%)</title><rect x="5.4039%" y="373" width="0.6710%" height="15" fill="rgb(206,27,48)" fg:x="25485863" fg:w="3164358"/><text x="5.6539%" y="383.50"></text></g><g><title>std::sys::pal::common::small_c_string::run_with_cstr (3,164,358 samples, 0.67%)</title><rect x="5.4039%" y="357" width="0.6710%" height="15" fill="rgb(225,35,8)" fg:x="25485863" fg:w="3164358"/><text x="5.6539%" y="367.50"></text></g><g><title>std::sys::pal::common::small_c_string::run_with_cstr_stack (3,164,358 samples, 0.67%)</title><rect x="5.4039%" y="341" width="0.6710%" height="15" fill="rgb(250,213,24)" fg:x="25485863" fg:w="3164358"/><text x="5.6539%" y="351.50"></text></g><g><title>std::sys::pal::unix::fs::File::open::_{{closure}} (3,164,358 samples, 0.67%)</title><rect x="5.4039%" y="325" width="0.6710%" height="15" fill="rgb(247,123,22)" fg:x="25485863" fg:w="3164358"/><text x="5.6539%" y="335.50"></text></g><g><title>std::sys::pal::unix::fs::File::open_c (3,164,358 samples, 0.67%)</title><rect x="5.4039%" y="309" width="0.6710%" height="15" fill="rgb(231,138,38)" fg:x="25485863" fg:w="3164358"/><text x="5.6539%" y="319.50"></text></g><g><title>std::sys::pal::unix::cvt_r (3,164,358 samples, 0.67%)</title><rect x="5.4039%" y="293" width="0.6710%" height="15" fill="rgb(231,145,46)" fg:x="25485863" fg:w="3164358"/><text x="5.6539%" y="303.50"></text></g><g><title>std::sys::pal::unix::fs::File::open_c::_{{closure}} (3,164,358 samples, 0.67%)</title><rect x="5.4039%" y="277" width="0.6710%" height="15" fill="rgb(251,118,11)" fg:x="25485863" fg:w="3164358"/><text x="5.6539%" y="287.50"></text></g><g><title>open64 (3,164,358 samples, 0.67%)</title><rect x="5.4039%" y="261" width="0.6710%" height="15" fill="rgb(217,147,25)" fg:x="25485863" fg:w="3164358"/><text x="5.6539%" y="271.50"></text></g><g><title>[libc.so.6] (3,164,358 samples, 0.67%)</title><rect x="5.4039%" y="245" width="0.6710%" height="15" fill="rgb(247,81,37)" fg:x="25485863" fg:w="3164358"/><text x="5.6539%" y="255.50"></text></g><g><title>[libc.so.6] (3,164,358 samples, 0.67%)</title><rect x="5.4039%" y="229" width="0.6710%" height="15" fill="rgb(209,12,38)" fg:x="25485863" fg:w="3164358"/><text x="5.6539%" y="239.50"></text></g><g><title>[unknown] (3,164,358 samples, 0.67%)</title><rect x="5.4039%" y="213" width="0.6710%" height="15" fill="rgb(227,1,9)" fg:x="25485863" fg:w="3164358"/><text x="5.6539%" y="223.50"></text></g><g><title>[unknown] (3,164,358 samples, 0.67%)</title><rect x="5.4039%" y="197" width="0.6710%" height="15" fill="rgb(248,47,43)" fg:x="25485863" fg:w="3164358"/><text x="5.6539%" y="207.50"></text></g><g><title>[unknown] (3,164,358 samples, 0.67%)</title><rect x="5.4039%" y="181" width="0.6710%" height="15" fill="rgb(221,10,30)" fg:x="25485863" fg:w="3164358"/><text x="5.6539%" y="191.50"></text></g><g><title>[unknown] (3,164,358 samples, 0.67%)</title><rect x="5.4039%" y="165" width="0.6710%" height="15" fill="rgb(210,229,1)" fg:x="25485863" fg:w="3164358"/><text x="5.6539%" y="175.50"></text></g><g><title>[unknown] (3,164,358 samples, 0.67%)</title><rect x="5.4039%" y="149" width="0.6710%" height="15" fill="rgb(222,148,37)" fg:x="25485863" fg:w="3164358"/><text x="5.6539%" y="159.50"></text></g><g><title>[unknown] (3,164,358 samples, 0.67%)</title><rect x="5.4039%" y="133" width="0.6710%" height="15" fill="rgb(234,67,33)" fg:x="25485863" fg:w="3164358"/><text x="5.6539%" y="143.50"></text></g><g><title>[unknown] (3,164,358 samples, 0.67%)</title><rect x="5.4039%" y="117" width="0.6710%" height="15" fill="rgb(247,98,35)" fg:x="25485863" fg:w="3164358"/><text x="5.6539%" y="127.50"></text></g><g><title>[unknown] (3,164,358 samples, 0.67%)</title><rect x="5.4039%" y="101" width="0.6710%" height="15" fill="rgb(247,138,52)" fg:x="25485863" fg:w="3164358"/><text x="5.6539%" y="111.50"></text></g><g><title>[unknown] (3,164,358 samples, 0.67%)</title><rect x="5.4039%" y="85" width="0.6710%" height="15" fill="rgb(213,79,30)" fg:x="25485863" fg:w="3164358"/><text x="5.6539%" y="95.50"></text></g><g><title>[unknown] (3,164,358 samples, 0.67%)</title><rect x="5.4039%" y="69" width="0.6710%" height="15" fill="rgb(246,177,23)" fg:x="25485863" fg:w="3164358"/><text x="5.6539%" y="79.50"></text></g><g><title>[unknown] (3,164,358 samples, 0.67%)</title><rect x="5.4039%" y="53" width="0.6710%" height="15" fill="rgb(230,62,27)" fg:x="25485863" fg:w="3164358"/><text x="5.6539%" y="63.50"></text></g><g><title>[unknown] (3,164,358 samples, 0.67%)</title><rect x="5.4039%" y="37" width="0.6710%" height="15" fill="rgb(216,154,8)" fg:x="25485863" fg:w="3164358"/><text x="5.6539%" y="47.50"></text></g><g><title>_RNvXNtNtCsillUmgM6iAQ_8indexmap3map4coreINtB2_12IndexMapCoreNtNtCslmjiST2XqAc_9toml_edit3key3KeyNtNtB10_4item4ItemENtNtCs88oo20fXAHo_4core5clone5Clone10clone_fromB10_ (5,717,755 samples, 1.21%)</title><rect x="6.0748%" y="469" width="1.2124%" height="15" fill="rgb(244,35,45)" fg:x="28650221" fg:w="5717755"/><text x="6.3248%" y="479.50"></text></g><g><title>[libc.so.6] (5,717,755 samples, 1.21%)</title><rect x="6.0748%" y="453" width="1.2124%" height="15" fill="rgb(251,115,12)" fg:x="28650221" fg:w="5717755"/><text x="6.3248%" y="463.50"></text></g><g><title>[unknown] (5,717,755 samples, 1.21%)</title><rect x="6.0748%" y="437" width="1.2124%" height="15" fill="rgb(240,54,50)" fg:x="28650221" fg:w="5717755"/><text x="6.3248%" y="447.50"></text></g><g><title>[unknown] (5,717,755 samples, 1.21%)</title><rect x="6.0748%" y="421" width="1.2124%" height="15" fill="rgb(233,84,52)" fg:x="28650221" fg:w="5717755"/><text x="6.3248%" y="431.50"></text></g><g><title>[unknown] (5,717,755 samples, 1.21%)</title><rect x="6.0748%" y="405" width="1.2124%" height="15" fill="rgb(207,117,47)" fg:x="28650221" fg:w="5717755"/><text x="6.3248%" y="415.50"></text></g><g><title>[unknown] (5,717,755 samples, 1.21%)</title><rect x="6.0748%" y="389" width="1.2124%" height="15" fill="rgb(249,43,39)" fg:x="28650221" fg:w="5717755"/><text x="6.3248%" y="399.50"></text></g><g><title>[unknown] (5,717,755 samples, 1.21%)</title><rect x="6.0748%" y="373" width="1.2124%" height="15" fill="rgb(209,38,44)" fg:x="28650221" fg:w="5717755"/><text x="6.3248%" y="383.50"></text></g><g><title>[unknown] (5,717,755 samples, 1.21%)</title><rect x="6.0748%" y="357" width="1.2124%" height="15" fill="rgb(236,212,23)" fg:x="28650221" fg:w="5717755"/><text x="6.3248%" y="367.50"></text></g><g><title>[unknown] (5,717,755 samples, 1.21%)</title><rect x="6.0748%" y="341" width="1.2124%" height="15" fill="rgb(242,79,21)" fg:x="28650221" fg:w="5717755"/><text x="6.3248%" y="351.50"></text></g><g><title>[unknown] (5,717,755 samples, 1.21%)</title><rect x="6.0748%" y="325" width="1.2124%" height="15" fill="rgb(211,96,35)" fg:x="28650221" fg:w="5717755"/><text x="6.3248%" y="335.50"></text></g><g><title>[unknown] (2,832,775 samples, 0.60%)</title><rect x="6.6866%" y="309" width="0.6006%" height="15" fill="rgb(253,215,40)" fg:x="31535201" fg:w="2832775"/><text x="6.9366%" y="319.50"></text></g><g><title>[unknown] (2,832,775 samples, 0.60%)</title><rect x="6.6866%" y="293" width="0.6006%" height="15" fill="rgb(211,81,21)" fg:x="31535201" fg:w="2832775"/><text x="6.9366%" y="303.50"></text></g><g><title>[unknown] (2,832,775 samples, 0.60%)</title><rect x="6.6866%" y="277" width="0.6006%" height="15" fill="rgb(208,190,38)" fg:x="31535201" fg:w="2832775"/><text x="6.9366%" y="287.50"></text></g><g><title>[unknown] (2,832,775 samples, 0.60%)</title><rect x="6.6866%" y="261" width="0.6006%" height="15" fill="rgb(235,213,38)" fg:x="31535201" fg:w="2832775"/><text x="6.9366%" y="271.50"></text></g><g><title>[unknown] (2,832,775 samples, 0.60%)</title><rect x="6.6866%" y="245" width="0.6006%" height="15" fill="rgb(237,122,38)" fg:x="31535201" fg:w="2832775"/><text x="6.9366%" y="255.50"></text></g><g><title>_RNvXs3_NtNtCs88oo20fXAHo_4core4hash3sipINtB5_6HasherNtB5_11Sip13RoundsENtB7_6Hasher5writeCsbvvXMm9yrGt_5cargo (2,601,205 samples, 0.55%)</title><rect x="7.2872%" y="469" width="0.5515%" height="15" fill="rgb(244,218,35)" fg:x="34367976" fg:w="2601205"/><text x="7.5372%" y="479.50"></text></g><g><title>__rust_alloc (3,023,112 samples, 0.64%)</title><rect x="7.8388%" y="469" width="0.6410%" height="15" fill="rgb(240,68,47)" fg:x="36969181" fg:w="3023112"/><text x="8.0888%" y="479.50"></text></g><g><title>[unknown] (32,211,747 samples, 6.83%)</title><rect x="2.2728%" y="485" width="6.8300%" height="15" fill="rgb(210,16,53)" fg:x="10718845" fg:w="32211747"/><text x="2.5228%" y="495.50">[unknown]</text></g><g><title>bindText (2,938,299 samples, 0.62%)</title><rect x="8.4798%" y="469" width="0.6230%" height="15" fill="rgb(235,124,12)" fg:x="39992293" fg:w="2938299"/><text x="8.7298%" y="479.50"></text></g><g><title>sqlite3VdbeMemSetStr (2,938,299 samples, 0.62%)</title><rect x="8.4798%" y="453" width="0.6230%" height="15" fill="rgb(224,169,11)" fg:x="39992293" fg:w="2938299"/><text x="8.7298%" y="463.50"></text></g><g><title>[libc.so.6] (2,938,299 samples, 0.62%)</title><rect x="8.4798%" y="437" width="0.6230%" height="15" fill="rgb(250,166,2)" fg:x="39992293" fg:w="2938299"/><text x="8.7298%" y="447.50"></text></g><g><title>_RINvMs6_NtCskvXbe0WQ0B1_9hashbrown3rawINtB6_8RawTableTNtNtNtNtCsbvvXMm9yrGt_5cargo4core8compiler12compile_kind13CompileTargetNtNtNtNtBY_4util7context6target12TargetConfigEE14reserve_rehashNCINvNtB8_3map11make_hasherBQ_B1Z_NtNtNtCslO3BPZ6DDYj_3std4hash6random11RandomStateE0EBY_ (3,752,549 samples, 0.80%)</title><rect x="9.1028%" y="485" width="0.7957%" height="15" fill="rgb(242,216,29)" fg:x="42930592" fg:w="3752549"/><text x="9.3528%" y="495.50"></text></g><g><title>_RINvMs6_NtCskvXbe0WQ0B1_9hashbrown3rawINtB6_8RawTableTReuEE14reserve_rehashNCINvNtB8_3map11make_hasherBQ_uNtNtNtCslO3BPZ6DDYj_3std4hash6random11RandomStateE0ECsbvvXMm9yrGt_5cargo (2,476,295 samples, 0.53%)</title><rect x="9.8985%" y="485" width="0.5251%" height="15" fill="rgb(230,116,27)" fg:x="46683141" fg:w="2476295"/><text x="10.1485%" y="495.50"></text></g><g><title>_RINvNtCs88oo20fXAHo_4core3ptr13drop_in_placeINtNtNtNtCsiFC1Riw8GUp_5alloc11collections5btree3map8BTreeMapNtNtCse9N2Mh4NCnl_18cargo_util_schemas8manifest11FeatureNameINtNtBP_3vec3VecNtNtBP_6string6StringEEECsbvvXMm9yrGt_5cargo (3,010,971 samples, 0.64%)</title><rect x="10.4235%" y="485" width="0.6384%" height="15" fill="rgb(228,99,48)" fg:x="49159436" fg:w="3010971"/><text x="10.6735%" y="495.50"></text></g><g><title>cfree (3,010,971 samples, 0.64%)</title><rect x="10.4235%" y="469" width="0.6384%" height="15" fill="rgb(253,11,6)" fg:x="49159436" fg:w="3010971"/><text x="10.6735%" y="479.50"></text></g><g><title>_RINvNtCs88oo20fXAHo_4core3ptr13drop_in_placeNtNtNtCsbvvXMm9yrGt_5cargo4core7package17SerializedPackageECskZK871GfcoY_5cargo (3,228,120 samples, 0.68%)</title><rect x="11.0620%" y="485" width="0.6845%" height="15" fill="rgb(247,143,39)" fg:x="52170407" fg:w="3228120"/><text x="11.3120%" y="495.50"></text></g><g><title>_RNvMsx_NtNtNtCsiFC1Riw8GUp_5alloc11collections5btree3mapINtB5_8IntoIterNtNtNtCsbvvXMm9yrGt_5cargo4util9interning14InternedStringINtNtBb_3vec3VecB17_EE10dying_nextCskZK871GfcoY_5cargo (3,228,120 samples, 0.68%)</title><rect x="11.0620%" y="469" width="0.6845%" height="15" fill="rgb(236,97,10)" fg:x="52170407" fg:w="3228120"/><text x="11.3120%" y="479.50"></text></g><g><title>cfree (3,228,120 samples, 0.68%)</title><rect x="11.0620%" y="453" width="0.6845%" height="15" fill="rgb(233,208,19)" fg:x="52170407" fg:w="3228120"/><text x="11.3120%" y="463.50"></text></g><g><title>[libc.so.6] (3,228,120 samples, 0.68%)</title><rect x="11.0620%" y="437" width="0.6845%" height="15" fill="rgb(216,164,2)" fg:x="52170407" fg:w="3228120"/><text x="11.3120%" y="447.50"></text></g><g><title>[libc.so.6] (3,228,120 samples, 0.68%)</title><rect x="11.0620%" y="421" width="0.6845%" height="15" fill="rgb(220,129,5)" fg:x="52170407" fg:w="3228120"/><text x="11.3120%" y="431.50"></text></g><g><title>_RINvNtNtCsillUmgM6iAQ_8indexmap3map4core15reserve_entriesNtNtCslmjiST2XqAc_9toml_edit3key3KeyNtNtBX_4item4ItemEBX_ (2,913,169 samples, 0.62%)</title><rect x="11.7464%" y="485" width="0.6177%" height="15" fill="rgb(242,17,10)" fg:x="55398527" fg:w="2913169"/><text x="11.9964%" y="495.50"></text></g><g><title>_RINvNtCsiFC1Riw8GUp_5alloc7raw_vec11finish_growNtNtB4_5alloc6GlobalECslmjiST2XqAc_9toml_edit (2,913,169 samples, 0.62%)</title><rect x="11.7464%" y="469" width="0.6177%" height="15" fill="rgb(242,107,0)" fg:x="55398527" fg:w="2913169"/><text x="11.9964%" y="479.50"></text></g><g><title>malloc (2,913,169 samples, 0.62%)</title><rect x="11.7464%" y="453" width="0.6177%" height="15" fill="rgb(251,28,31)" fg:x="55398527" fg:w="2913169"/><text x="11.9964%" y="463.50"></text></g><g><title>[libc.so.6] (2,913,169 samples, 0.62%)</title><rect x="11.7464%" y="437" width="0.6177%" height="15" fill="rgb(233,223,10)" fg:x="55398527" fg:w="2913169"/><text x="11.9964%" y="447.50"></text></g><g><title>[unknown] (2,913,169 samples, 0.62%)</title><rect x="11.7464%" y="421" width="0.6177%" height="15" fill="rgb(215,21,27)" fg:x="55398527" fg:w="2913169"/><text x="11.9964%" y="431.50"></text></g><g><title>[unknown] (2,913,169 samples, 0.62%)</title><rect x="11.7464%" y="405" width="0.6177%" height="15" fill="rgb(232,23,21)" fg:x="55398527" fg:w="2913169"/><text x="11.9964%" y="415.50"></text></g><g><title>[unknown] (2,913,169 samples, 0.62%)</title><rect x="11.7464%" y="389" width="0.6177%" height="15" fill="rgb(244,5,23)" fg:x="55398527" fg:w="2913169"/><text x="11.9964%" y="399.50"></text></g><g><title>[unknown] (2,913,169 samples, 0.62%)</title><rect x="11.7464%" y="373" width="0.6177%" height="15" fill="rgb(226,81,46)" fg:x="55398527" fg:w="2913169"/><text x="11.9964%" y="383.50"></text></g><g><title>[unknown] (2,913,169 samples, 0.62%)</title><rect x="11.7464%" y="357" width="0.6177%" height="15" fill="rgb(247,70,30)" fg:x="55398527" fg:w="2913169"/><text x="11.9964%" y="367.50"></text></g><g><title>_RINvNvXs0_NtNtNtCsiFC1Riw8GUp_5alloc11collections5btree3mapINtB8_8BTreeMappppENtNtCs88oo20fXAHo_4core5clone5Clone5clone13clone_subtreeNtNtBe_6string6StringIBW_B28_NtNtCse9N2Mh4NCnl_18cargo_util_schemas8manifest8TomlLintENtNtBe_5alloc6GlobalECsbvvXMm9yrGt_5cargo (3,087,014 samples, 0.65%)</title><rect x="12.3641%" y="485" width="0.6546%" height="15" fill="rgb(212,68,19)" fg:x="58311696" fg:w="3087014"/><text x="12.6141%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,087,014 samples, 0.65%)</title><rect x="12.3641%" y="469" width="0.6546%" height="15" fill="rgb(240,187,13)" fg:x="58311696" fg:w="3087014"/><text x="12.6141%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,087,014 samples, 0.65%)</title><rect x="12.3641%" y="453" width="0.6546%" height="15" fill="rgb(223,113,26)" fg:x="58311696" fg:w="3087014"/><text x="12.6141%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,087,014 samples, 0.65%)</title><rect x="12.3641%" y="437" width="0.6546%" height="15" fill="rgb(206,192,2)" fg:x="58311696" fg:w="3087014"/><text x="12.6141%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (3,087,014 samples, 0.65%)</title><rect x="12.3641%" y="421" width="0.6546%" height="15" fill="rgb(241,108,4)" fg:x="58311696" fg:w="3087014"/><text x="12.6141%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,087,014 samples, 0.65%)</title><rect x="12.3641%" y="405" width="0.6546%" height="15" fill="rgb(247,173,49)" fg:x="58311696" fg:w="3087014"/><text x="12.6141%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,087,014 samples, 0.65%)</title><rect x="12.3641%" y="389" width="0.6546%" height="15" fill="rgb(224,114,35)" fg:x="58311696" fg:w="3087014"/><text x="12.6141%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,087,014 samples, 0.65%)</title><rect x="12.3641%" y="373" width="0.6546%" height="15" fill="rgb(245,159,27)" fg:x="58311696" fg:w="3087014"/><text x="12.6141%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,087,014 samples, 0.65%)</title><rect x="12.3641%" y="357" width="0.6546%" height="15" fill="rgb(245,172,44)" fg:x="58311696" fg:w="3087014"/><text x="12.6141%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,087,014 samples, 0.65%)</title><rect x="12.3641%" y="341" width="0.6546%" height="15" fill="rgb(236,23,11)" fg:x="58311696" fg:w="3087014"/><text x="12.6141%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,087,014 samples, 0.65%)</title><rect x="12.3641%" y="325" width="0.6546%" height="15" fill="rgb(205,117,38)" fg:x="58311696" fg:w="3087014"/><text x="12.6141%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,087,014 samples, 0.65%)</title><rect x="12.3641%" y="309" width="0.6546%" height="15" fill="rgb(237,72,25)" fg:x="58311696" fg:w="3087014"/><text x="12.6141%" y="319.50"></text></g><g><title>alloc::alloc::alloc (3,087,014 samples, 0.65%)</title><rect x="12.3641%" y="293" width="0.6546%" height="15" fill="rgb(244,70,9)" fg:x="58311696" fg:w="3087014"/><text x="12.6141%" y="303.50"></text></g><g><title>malloc (3,087,014 samples, 0.65%)</title><rect x="12.3641%" y="277" width="0.6546%" height="15" fill="rgb(217,125,39)" fg:x="58311696" fg:w="3087014"/><text x="12.6141%" y="287.50"></text></g><g><title>[libc.so.6] (3,087,014 samples, 0.65%)</title><rect x="12.3641%" y="261" width="0.6546%" height="15" fill="rgb(235,36,10)" fg:x="58311696" fg:w="3087014"/><text x="12.6141%" y="271.50"></text></g><g><title>_RINvNvXs0_NtNtNtCsiFC1Riw8GUp_5alloc11collections5btree3mapINtB8_8BTreeMappppENtNtCs88oo20fXAHo_4core5clone5Clone5clone13clone_subtreeNtNtCse9N2Mh4NCnl_18cargo_util_schemas8manifest11FeatureNameINtNtBe_3vec3VecNtNtBe_6string6StringENtNtBe_5alloc6GlobalECsbvvXMm9yrGt_5cargo (2,842,785 samples, 0.60%)</title><rect x="13.0187%" y="485" width="0.6028%" height="15" fill="rgb(251,123,47)" fg:x="61398710" fg:w="2842785"/><text x="13.2687%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,842,785 samples, 0.60%)</title><rect x="13.0187%" y="469" width="0.6028%" height="15" fill="rgb(221,13,13)" fg:x="61398710" fg:w="2842785"/><text x="13.2687%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,842,785 samples, 0.60%)</title><rect x="13.0187%" y="453" width="0.6028%" height="15" fill="rgb(238,131,9)" fg:x="61398710" fg:w="2842785"/><text x="13.2687%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,842,785 samples, 0.60%)</title><rect x="13.0187%" y="437" width="0.6028%" height="15" fill="rgb(211,50,8)" fg:x="61398710" fg:w="2842785"/><text x="13.2687%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (2,842,785 samples, 0.60%)</title><rect x="13.0187%" y="421" width="0.6028%" height="15" fill="rgb(245,182,24)" fg:x="61398710" fg:w="2842785"/><text x="13.2687%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,842,785 samples, 0.60%)</title><rect x="13.0187%" y="405" width="0.6028%" height="15" fill="rgb(242,14,37)" fg:x="61398710" fg:w="2842785"/><text x="13.2687%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,842,785 samples, 0.60%)</title><rect x="13.0187%" y="389" width="0.6028%" height="15" fill="rgb(246,228,12)" fg:x="61398710" fg:w="2842785"/><text x="13.2687%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,842,785 samples, 0.60%)</title><rect x="13.0187%" y="373" width="0.6028%" height="15" fill="rgb(213,55,15)" fg:x="61398710" fg:w="2842785"/><text x="13.2687%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,842,785 samples, 0.60%)</title><rect x="13.0187%" y="357" width="0.6028%" height="15" fill="rgb(209,9,3)" fg:x="61398710" fg:w="2842785"/><text x="13.2687%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,842,785 samples, 0.60%)</title><rect x="13.0187%" y="341" width="0.6028%" height="15" fill="rgb(230,59,30)" fg:x="61398710" fg:w="2842785"/><text x="13.2687%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,842,785 samples, 0.60%)</title><rect x="13.0187%" y="325" width="0.6028%" height="15" fill="rgb(209,121,21)" fg:x="61398710" fg:w="2842785"/><text x="13.2687%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,842,785 samples, 0.60%)</title><rect x="13.0187%" y="309" width="0.6028%" height="15" fill="rgb(220,109,13)" fg:x="61398710" fg:w="2842785"/><text x="13.2687%" y="319.50"></text></g><g><title>alloc::alloc::alloc (2,842,785 samples, 0.60%)</title><rect x="13.0187%" y="293" width="0.6028%" height="15" fill="rgb(232,18,1)" fg:x="61398710" fg:w="2842785"/><text x="13.2687%" y="303.50"></text></g><g><title>malloc (2,842,785 samples, 0.60%)</title><rect x="13.0187%" y="277" width="0.6028%" height="15" fill="rgb(215,41,42)" fg:x="61398710" fg:w="2842785"/><text x="13.2687%" y="287.50"></text></g><g><title>[libc.so.6] (2,842,785 samples, 0.60%)</title><rect x="13.0187%" y="261" width="0.6028%" height="15" fill="rgb(224,123,36)" fg:x="61398710" fg:w="2842785"/><text x="13.2687%" y="271.50"></text></g><g><title>[unknown] (2,842,785 samples, 0.60%)</title><rect x="13.0187%" y="245" width="0.6028%" height="15" fill="rgb(240,125,3)" fg:x="61398710" fg:w="2842785"/><text x="13.2687%" y="255.50"></text></g><g><title>[unknown] (2,842,785 samples, 0.60%)</title><rect x="13.0187%" y="229" width="0.6028%" height="15" fill="rgb(205,98,50)" fg:x="61398710" fg:w="2842785"/><text x="13.2687%" y="239.50"></text></g><g><title>[unknown] (2,842,785 samples, 0.60%)</title><rect x="13.0187%" y="213" width="0.6028%" height="15" fill="rgb(205,185,37)" fg:x="61398710" fg:w="2842785"/><text x="13.2687%" y="223.50"></text></g><g><title>[unknown] (2,842,785 samples, 0.60%)</title><rect x="13.0187%" y="197" width="0.6028%" height="15" fill="rgb(238,207,15)" fg:x="61398710" fg:w="2842785"/><text x="13.2687%" y="207.50"></text></g><g><title>[unknown] (2,842,785 samples, 0.60%)</title><rect x="13.0187%" y="181" width="0.6028%" height="15" fill="rgb(213,199,42)" fg:x="61398710" fg:w="2842785"/><text x="13.2687%" y="191.50"></text></g><g><title>[unknown] (2,842,785 samples, 0.60%)</title><rect x="13.0187%" y="165" width="0.6028%" height="15" fill="rgb(235,201,11)" fg:x="61398710" fg:w="2842785"/><text x="13.2687%" y="175.50"></text></g><g><title>[unknown] (2,842,785 samples, 0.60%)</title><rect x="13.0187%" y="149" width="0.6028%" height="15" fill="rgb(207,46,11)" fg:x="61398710" fg:w="2842785"/><text x="13.2687%" y="159.50"></text></g><g><title>[unknown] (2,842,785 samples, 0.60%)</title><rect x="13.0187%" y="133" width="0.6028%" height="15" fill="rgb(241,35,35)" fg:x="61398710" fg:w="2842785"/><text x="13.2687%" y="143.50"></text></g><g><title>_RINvXNtNtCsiFC1Riw8GUp_5alloc5slice4hackNtNtCsl7RM9UDziOB_4toml5value5ValueNtB3_10ConvertVec6to_vecNtNtB7_5alloc6GlobalECsbvvXMm9yrGt_5cargo (3,084,898 samples, 0.65%)</title><rect x="13.6214%" y="485" width="0.6541%" height="15" fill="rgb(243,32,47)" fg:x="64241495" fg:w="3084898"/><text x="13.8714%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,084,898 samples, 0.65%)</title><rect x="13.6214%" y="469" width="0.6541%" height="15" fill="rgb(247,202,23)" fg:x="64241495" fg:w="3084898"/><text x="13.8714%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,084,898 samples, 0.65%)</title><rect x="13.6214%" y="453" width="0.6541%" height="15" fill="rgb(219,102,11)" fg:x="64241495" fg:w="3084898"/><text x="13.8714%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,084,898 samples, 0.65%)</title><rect x="13.6214%" y="437" width="0.6541%" height="15" fill="rgb(243,110,44)" fg:x="64241495" fg:w="3084898"/><text x="13.8714%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (3,084,898 samples, 0.65%)</title><rect x="13.6214%" y="421" width="0.6541%" height="15" fill="rgb(222,74,54)" fg:x="64241495" fg:w="3084898"/><text x="13.8714%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,084,898 samples, 0.65%)</title><rect x="13.6214%" y="405" width="0.6541%" height="15" fill="rgb(216,99,12)" fg:x="64241495" fg:w="3084898"/><text x="13.8714%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,084,898 samples, 0.65%)</title><rect x="13.6214%" y="389" width="0.6541%" height="15" fill="rgb(226,22,26)" fg:x="64241495" fg:w="3084898"/><text x="13.8714%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,084,898 samples, 0.65%)</title><rect x="13.6214%" y="373" width="0.6541%" height="15" fill="rgb(217,163,10)" fg:x="64241495" fg:w="3084898"/><text x="13.8714%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,084,898 samples, 0.65%)</title><rect x="13.6214%" y="357" width="0.6541%" height="15" fill="rgb(213,25,53)" fg:x="64241495" fg:w="3084898"/><text x="13.8714%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,084,898 samples, 0.65%)</title><rect x="13.6214%" y="341" width="0.6541%" height="15" fill="rgb(252,105,26)" fg:x="64241495" fg:w="3084898"/><text x="13.8714%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,084,898 samples, 0.65%)</title><rect x="13.6214%" y="325" width="0.6541%" height="15" fill="rgb(220,39,43)" fg:x="64241495" fg:w="3084898"/><text x="13.8714%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,084,898 samples, 0.65%)</title><rect x="13.6214%" y="309" width="0.6541%" height="15" fill="rgb(229,68,48)" fg:x="64241495" fg:w="3084898"/><text x="13.8714%" y="319.50"></text></g><g><title>alloc::alloc::alloc (3,084,898 samples, 0.65%)</title><rect x="13.6214%" y="293" width="0.6541%" height="15" fill="rgb(252,8,32)" fg:x="64241495" fg:w="3084898"/><text x="13.8714%" y="303.50"></text></g><g><title>malloc (3,084,898 samples, 0.65%)</title><rect x="13.6214%" y="277" width="0.6541%" height="15" fill="rgb(223,20,43)" fg:x="64241495" fg:w="3084898"/><text x="13.8714%" y="287.50"></text></g><g><title>[libc.so.6] (3,084,898 samples, 0.65%)</title><rect x="13.6214%" y="261" width="0.6541%" height="15" fill="rgb(229,81,49)" fg:x="64241495" fg:w="3084898"/><text x="13.8714%" y="271.50"></text></g><g><title>_RNvMs0_NtCsiFC1Riw8GUp_5alloc7raw_vecINtB5_6RawVecNtNtCsbCJYFPGZ4yK_6winnow5error10StrContextE8grow_oneCslmjiST2XqAc_9toml_edit (2,882,431 samples, 0.61%)</title><rect x="14.2756%" y="485" width="0.6112%" height="15" fill="rgb(236,28,36)" fg:x="67326393" fg:w="2882431"/><text x="14.5256%" y="495.50"></text></g><g><title>_RINvNtCsiFC1Riw8GUp_5alloc7raw_vec11finish_growNtNtB4_5alloc6GlobalECslmjiST2XqAc_9toml_edit (2,882,431 samples, 0.61%)</title><rect x="14.2756%" y="469" width="0.6112%" height="15" fill="rgb(249,185,26)" fg:x="67326393" fg:w="2882431"/><text x="14.5256%" y="479.50"></text></g><g><title>malloc (2,882,431 samples, 0.61%)</title><rect x="14.2756%" y="453" width="0.6112%" height="15" fill="rgb(249,174,33)" fg:x="67326393" fg:w="2882431"/><text x="14.5256%" y="463.50"></text></g><g><title>_RNvMs1_NtCskvXbe0WQ0B1_9hashbrown3mapINtB5_7HashMapNtNtNtCsbvvXMm9yrGt_5cargo4core10package_id9PackageIduNtNtNtCslO3BPZ6DDYj_3std4hash6random11RandomStateE6insertBT_ (2,489,327 samples, 0.53%)</title><rect x="14.8867%" y="485" width="0.5278%" height="15" fill="rgb(233,201,37)" fg:x="70208824" fg:w="2489327"/><text x="15.1367%" y="495.50"></text></g><g><title>_RNvXs3_NtNtCs88oo20fXAHo_4core4hash3sipINtB5_6HasherNtB5_11Sip13RoundsENtB7_6Hasher5writeCsbvvXMm9yrGt_5cargo (2,489,327 samples, 0.53%)</title><rect x="14.8867%" y="469" width="0.5278%" height="15" fill="rgb(221,78,26)" fg:x="70208824" fg:w="2489327"/><text x="15.1367%" y="479.50"></text></g><g><title>_RNvMs1_NtNtNtCsbvvXMm9yrGt_5cargo7sources8registry5indexNtB5_9Summaries5parse (3,549,358 samples, 0.75%)</title><rect x="15.4146%" y="485" width="0.7526%" height="15" fill="rgb(250,127,30)" fg:x="72698151" fg:w="3549358"/><text x="15.6646%" y="495.50"></text></g><g><title>std::fs::read::inner (3,549,358 samples, 0.75%)</title><rect x="15.4146%" y="469" width="0.7526%" height="15" fill="rgb(230,49,44)" fg:x="72698151" fg:w="3549358"/><text x="15.6646%" y="479.50"></text></g><g><title>std::fs::File::open (3,549,358 samples, 0.75%)</title><rect x="15.4146%" y="453" width="0.7526%" height="15" fill="rgb(229,67,23)" fg:x="72698151" fg:w="3549358"/><text x="15.6646%" y="463.50"></text></g><g><title>std::fs::OpenOptions::open (3,549,358 samples, 0.75%)</title><rect x="15.4146%" y="437" width="0.7526%" height="15" fill="rgb(249,83,47)" fg:x="72698151" fg:w="3549358"/><text x="15.6646%" y="447.50"></text></g><g><title>std::fs::OpenOptions::_open (3,549,358 samples, 0.75%)</title><rect x="15.4146%" y="421" width="0.7526%" height="15" fill="rgb(215,43,3)" fg:x="72698151" fg:w="3549358"/><text x="15.6646%" y="431.50"></text></g><g><title>std::sys::pal::unix::fs::File::open (3,549,358 samples, 0.75%)</title><rect x="15.4146%" y="405" width="0.7526%" height="15" fill="rgb(238,154,13)" fg:x="72698151" fg:w="3549358"/><text x="15.6646%" y="415.50"></text></g><g><title>std::sys::pal::common::small_c_string::run_path_with_cstr (3,549,358 samples, 0.75%)</title><rect x="15.4146%" y="389" width="0.7526%" height="15" fill="rgb(219,56,2)" fg:x="72698151" fg:w="3549358"/><text x="15.6646%" y="399.50"></text></g><g><title>std::sys::pal::common::small_c_string::run_with_cstr (3,549,358 samples, 0.75%)</title><rect x="15.4146%" y="373" width="0.7526%" height="15" fill="rgb(233,0,4)" fg:x="72698151" fg:w="3549358"/><text x="15.6646%" y="383.50"></text></g><g><title>std::sys::pal::common::small_c_string::run_with_cstr_stack (3,549,358 samples, 0.75%)</title><rect x="15.4146%" y="357" width="0.7526%" height="15" fill="rgb(235,30,7)" fg:x="72698151" fg:w="3549358"/><text x="15.6646%" y="367.50"></text></g><g><title>std::sys::pal::unix::fs::File::open::_{{closure}} (3,549,358 samples, 0.75%)</title><rect x="15.4146%" y="341" width="0.7526%" height="15" fill="rgb(250,79,13)" fg:x="72698151" fg:w="3549358"/><text x="15.6646%" y="351.50"></text></g><g><title>std::sys::pal::unix::fs::File::open_c (3,549,358 samples, 0.75%)</title><rect x="15.4146%" y="325" width="0.7526%" height="15" fill="rgb(211,146,34)" fg:x="72698151" fg:w="3549358"/><text x="15.6646%" y="335.50"></text></g><g><title>std::sys::pal::unix::cvt_r (3,549,358 samples, 0.75%)</title><rect x="15.4146%" y="309" width="0.7526%" height="15" fill="rgb(228,22,38)" fg:x="72698151" fg:w="3549358"/><text x="15.6646%" y="319.50"></text></g><g><title>std::sys::pal::unix::fs::File::open_c::_{{closure}} (3,549,358 samples, 0.75%)</title><rect x="15.4146%" y="293" width="0.7526%" height="15" fill="rgb(235,168,5)" fg:x="72698151" fg:w="3549358"/><text x="15.6646%" y="303.50"></text></g><g><title>open64 (3,549,358 samples, 0.75%)</title><rect x="15.4146%" y="277" width="0.7526%" height="15" fill="rgb(221,155,16)" fg:x="72698151" fg:w="3549358"/><text x="15.6646%" y="287.50"></text></g><g><title>[libc.so.6] (3,549,358 samples, 0.75%)</title><rect x="15.4146%" y="261" width="0.7526%" height="15" fill="rgb(215,215,53)" fg:x="72698151" fg:w="3549358"/><text x="15.6646%" y="271.50"></text></g><g><title>[libc.so.6] (3,549,358 samples, 0.75%)</title><rect x="15.4146%" y="245" width="0.7526%" height="15" fill="rgb(223,4,10)" fg:x="72698151" fg:w="3549358"/><text x="15.6646%" y="255.50"></text></g><g><title>[unknown] (3,549,358 samples, 0.75%)</title><rect x="15.4146%" y="229" width="0.7526%" height="15" fill="rgb(234,103,6)" fg:x="72698151" fg:w="3549358"/><text x="15.6646%" y="239.50"></text></g><g><title>[unknown] (3,549,358 samples, 0.75%)</title><rect x="15.4146%" y="213" width="0.7526%" height="15" fill="rgb(227,97,0)" fg:x="72698151" fg:w="3549358"/><text x="15.6646%" y="223.50"></text></g><g><title>[unknown] (3,549,358 samples, 0.75%)</title><rect x="15.4146%" y="197" width="0.7526%" height="15" fill="rgb(234,150,53)" fg:x="72698151" fg:w="3549358"/><text x="15.6646%" y="207.50"></text></g><g><title>[unknown] (3,549,358 samples, 0.75%)</title><rect x="15.4146%" y="181" width="0.7526%" height="15" fill="rgb(228,201,54)" fg:x="72698151" fg:w="3549358"/><text x="15.6646%" y="191.50"></text></g><g><title>[unknown] (3,549,358 samples, 0.75%)</title><rect x="15.4146%" y="165" width="0.7526%" height="15" fill="rgb(222,22,37)" fg:x="72698151" fg:w="3549358"/><text x="15.6646%" y="175.50"></text></g><g><title>[unknown] (3,549,358 samples, 0.75%)</title><rect x="15.4146%" y="149" width="0.7526%" height="15" fill="rgb(237,53,32)" fg:x="72698151" fg:w="3549358"/><text x="15.6646%" y="159.50"></text></g><g><title>[unknown] (3,549,358 samples, 0.75%)</title><rect x="15.4146%" y="133" width="0.7526%" height="15" fill="rgb(233,25,53)" fg:x="72698151" fg:w="3549358"/><text x="15.6646%" y="143.50"></text></g><g><title>[unknown] (3,549,358 samples, 0.75%)</title><rect x="15.4146%" y="117" width="0.7526%" height="15" fill="rgb(210,40,34)" fg:x="72698151" fg:w="3549358"/><text x="15.6646%" y="127.50"></text></g><g><title>_RNvNtCslmjiST2XqAc_9toml_edit6encode14to_string_repr (2,577,566 samples, 0.55%)</title><rect x="16.1671%" y="485" width="0.5465%" height="15" fill="rgb(241,220,44)" fg:x="76247509" fg:w="2577566"/><text x="16.4171%" y="495.50"></text></g><g><title>_RNvNtNtCsbvvXMm9yrGt_5cargo4core8resolver8activate (2,578,434 samples, 0.55%)</title><rect x="16.7137%" y="485" width="0.5467%" height="15" fill="rgb(235,28,35)" fg:x="78825075" fg:w="2578434"/><text x="16.9637%" y="495.50"></text></g><g><title>malloc (2,578,434 samples, 0.55%)</title><rect x="16.7137%" y="469" width="0.5467%" height="15" fill="rgb(210,56,17)" fg:x="78825075" fg:w="2578434"/><text x="16.9637%" y="479.50"></text></g><g><title>[libc.so.6] (2,578,434 samples, 0.55%)</title><rect x="16.7137%" y="453" width="0.5467%" height="15" fill="rgb(224,130,29)" fg:x="78825075" fg:w="2578434"/><text x="16.9637%" y="463.50"></text></g><g><title>[unknown] (2,578,434 samples, 0.55%)</title><rect x="16.7137%" y="437" width="0.5467%" height="15" fill="rgb(235,212,8)" fg:x="78825075" fg:w="2578434"/><text x="16.9637%" y="447.50"></text></g><g><title>[unknown] (2,578,434 samples, 0.55%)</title><rect x="16.7137%" y="421" width="0.5467%" height="15" fill="rgb(223,33,50)" fg:x="78825075" fg:w="2578434"/><text x="16.9637%" y="431.50"></text></g><g><title>[unknown] (2,578,434 samples, 0.55%)</title><rect x="16.7137%" y="405" width="0.5467%" height="15" fill="rgb(219,149,13)" fg:x="78825075" fg:w="2578434"/><text x="16.9637%" y="415.50"></text></g><g><title>[unknown] (2,578,434 samples, 0.55%)</title><rect x="16.7137%" y="389" width="0.5467%" height="15" fill="rgb(250,156,29)" fg:x="78825075" fg:w="2578434"/><text x="16.9637%" y="399.50"></text></g><g><title>[unknown] (2,578,434 samples, 0.55%)</title><rect x="16.7137%" y="373" width="0.5467%" height="15" fill="rgb(216,193,19)" fg:x="78825075" fg:w="2578434"/><text x="16.9637%" y="383.50"></text></g><g><title>[unknown] (2,578,434 samples, 0.55%)</title><rect x="16.7137%" y="357" width="0.5467%" height="15" fill="rgb(216,135,14)" fg:x="78825075" fg:w="2578434"/><text x="16.9637%" y="367.50"></text></g><g><title>[unknown] (2,578,434 samples, 0.55%)</title><rect x="16.7137%" y="341" width="0.5467%" height="15" fill="rgb(241,47,5)" fg:x="78825075" fg:w="2578434"/><text x="16.9637%" y="351.50"></text></g><g><title>[unknown] (2,578,434 samples, 0.55%)</title><rect x="16.7137%" y="325" width="0.5467%" height="15" fill="rgb(233,42,35)" fg:x="78825075" fg:w="2578434"/><text x="16.9637%" y="335.50"></text></g><g><title>[unknown] (2,578,434 samples, 0.55%)</title><rect x="16.7137%" y="309" width="0.5467%" height="15" fill="rgb(231,13,6)" fg:x="78825075" fg:w="2578434"/><text x="16.9637%" y="319.50"></text></g><g><title>[unknown] (2,578,434 samples, 0.55%)</title><rect x="16.7137%" y="293" width="0.5467%" height="15" fill="rgb(207,181,40)" fg:x="78825075" fg:w="2578434"/><text x="16.9637%" y="303.50"></text></g><g><title>[unknown] (2,578,434 samples, 0.55%)</title><rect x="16.7137%" y="277" width="0.5467%" height="15" fill="rgb(254,173,49)" fg:x="78825075" fg:w="2578434"/><text x="16.9637%" y="287.50"></text></g><g><title>[unknown] (2,578,434 samples, 0.55%)</title><rect x="16.7137%" y="261" width="0.5467%" height="15" fill="rgb(221,1,38)" fg:x="78825075" fg:w="2578434"/><text x="16.9637%" y="271.50"></text></g><g><title>[unknown] (2,578,434 samples, 0.55%)</title><rect x="16.7137%" y="245" width="0.5467%" height="15" fill="rgb(206,124,46)" fg:x="78825075" fg:w="2578434"/><text x="16.9637%" y="255.50"></text></g><g><title>_RNvNtNtCsbvvXMm9yrGt_5cargo4util4toml13read_manifest (3,043,935 samples, 0.65%)</title><rect x="17.2604%" y="485" width="0.6454%" height="15" fill="rgb(249,21,11)" fg:x="81403509" fg:w="3043935"/><text x="17.5104%" y="495.50"></text></g><g><title>_RNvNtNtCsbvvXMm9yrGt_5cargo4util4toml16to_real_manifest (3,043,935 samples, 0.65%)</title><rect x="17.2604%" y="469" width="0.6454%" height="15" fill="rgb(222,201,40)" fg:x="81403509" fg:w="3043935"/><text x="17.5104%" y="479.50"></text></g><g><title>std::path::Path::_join (3,043,935 samples, 0.65%)</title><rect x="17.2604%" y="453" width="0.6454%" height="15" fill="rgb(235,61,29)" fg:x="81403509" fg:w="3043935"/><text x="17.5104%" y="463.50"></text></g><g><title>std::path::PathBuf::push (3,043,935 samples, 0.65%)</title><rect x="17.2604%" y="437" width="0.6454%" height="15" fill="rgb(219,207,3)" fg:x="81403509" fg:w="3043935"/><text x="17.5104%" y="447.50"></text></g><g><title>std::path::PathBuf::_push (3,043,935 samples, 0.65%)</title><rect x="17.2604%" y="421" width="0.6454%" height="15" fill="rgb(222,56,46)" fg:x="81403509" fg:w="3043935"/><text x="17.5104%" y="431.50"></text></g><g><title>std::ffi::os_str::OsString::push (3,043,935 samples, 0.65%)</title><rect x="17.2604%" y="405" width="0.6454%" height="15" fill="rgb(239,76,54)" fg:x="81403509" fg:w="3043935"/><text x="17.5104%" y="415.50"></text></g><g><title>std::sys::os_str::bytes::Buf::push_slice (3,043,935 samples, 0.65%)</title><rect x="17.2604%" y="389" width="0.6454%" height="15" fill="rgb(231,124,27)" fg:x="81403509" fg:w="3043935"/><text x="17.5104%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3,043,935 samples, 0.65%)</title><rect x="17.2604%" y="373" width="0.6454%" height="15" fill="rgb(249,195,6)" fg:x="81403509" fg:w="3043935"/><text x="17.5104%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3,043,935 samples, 0.65%)</title><rect x="17.2604%" y="357" width="0.6454%" height="15" fill="rgb(237,174,47)" fg:x="81403509" fg:w="3043935"/><text x="17.5104%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3,043,935 samples, 0.65%)</title><rect x="17.2604%" y="341" width="0.6454%" height="15" fill="rgb(206,201,31)" fg:x="81403509" fg:w="3043935"/><text x="17.5104%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3,043,935 samples, 0.65%)</title><rect x="17.2604%" y="325" width="0.6454%" height="15" fill="rgb(231,57,52)" fg:x="81403509" fg:w="3043935"/><text x="17.5104%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3,043,935 samples, 0.65%)</title><rect x="17.2604%" y="309" width="0.6454%" height="15" fill="rgb(248,177,22)" fg:x="81403509" fg:w="3043935"/><text x="17.5104%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (3,043,935 samples, 0.65%)</title><rect x="17.2604%" y="293" width="0.6454%" height="15" fill="rgb(215,211,37)" fg:x="81403509" fg:w="3043935"/><text x="17.5104%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (3,043,935 samples, 0.65%)</title><rect x="17.2604%" y="277" width="0.6454%" height="15" fill="rgb(241,128,51)" fg:x="81403509" fg:w="3043935"/><text x="17.5104%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (3,043,935 samples, 0.65%)</title><rect x="17.2604%" y="261" width="0.6454%" height="15" fill="rgb(227,165,31)" fg:x="81403509" fg:w="3043935"/><text x="17.5104%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (3,043,935 samples, 0.65%)</title><rect x="17.2604%" y="245" width="0.6454%" height="15" fill="rgb(228,167,24)" fg:x="81403509" fg:w="3043935"/><text x="17.5104%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3,043,935 samples, 0.65%)</title><rect x="17.2604%" y="229" width="0.6454%" height="15" fill="rgb(228,143,12)" fg:x="81403509" fg:w="3043935"/><text x="17.5104%" y="239.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3,043,935 samples, 0.65%)</title><rect x="17.2604%" y="213" width="0.6454%" height="15" fill="rgb(249,149,8)" fg:x="81403509" fg:w="3043935"/><text x="17.5104%" y="223.50"></text></g><g><title>alloc::alloc::realloc (3,043,935 samples, 0.65%)</title><rect x="17.2604%" y="197" width="0.6454%" height="15" fill="rgb(243,35,44)" fg:x="81403509" fg:w="3043935"/><text x="17.5104%" y="207.50"></text></g><g><title>realloc (3,043,935 samples, 0.65%)</title><rect x="17.2604%" y="181" width="0.6454%" height="15" fill="rgb(246,89,9)" fg:x="81403509" fg:w="3043935"/><text x="17.5104%" y="191.50"></text></g><g><title>_RNvXs5_NtCs68yqdWhFN9u_10serde_json4readNtB5_9SliceReadNtB5_4Read9parse_str (2,891,981 samples, 0.61%)</title><rect x="17.9058%" y="485" width="0.6132%" height="15" fill="rgb(233,213,13)" fg:x="84447444" fg:w="2891981"/><text x="18.1558%" y="495.50"></text></g><g><title>_RNvXs_NtNtCsbCJYFPGZ4yK_6winnow10combinator5implsINtB4_3MapINtB4_6TryMapNCINvNtB8_5token10take_whileTThhEhINtNtNtCs88oo20fXAHo_4core3ops5range14RangeInclusivehEB1G_B1G_EINtNtNtB8_6stream8stateful8StatefulINtNtB2M_8locating13LocatingSliceRNtNtB2M_4bstr4BStrENtNtNtCslmjiST2XqAc_9toml_edit6parser7prelude14RecursionCheckEINtNtB8_5error7ErrModeNtB5a_12ContextErrorEINtB1J_9RangeFromjEE0NvNtNtB1N_3str8converts9from_utf8B2H_RShReB57_NtNtB6d_5error9Utf8ErrorENcNtINtNtCsiFC1Riw8GUp_5alloc6borrow3CoweE8Borrowed0B2H_B6N_B7m_B57_EINtNtB8_6parser6ParserB2H_B8g_B57_E10parse_nextB4d_ (2,960,577 samples, 0.63%)</title><rect x="18.5190%" y="485" width="0.6277%" height="15" fill="rgb(233,141,41)" fg:x="87339425" fg:w="2960577"/><text x="18.7690%" y="495.50"></text></g><g><title>core::str::converts::from_utf8 (2,960,577 samples, 0.63%)</title><rect x="18.5190%" y="469" width="0.6277%" height="15" fill="rgb(239,167,4)" fg:x="87339425" fg:w="2960577"/><text x="18.7690%" y="479.50"></text></g><g><title>asn1_template_noexp_d2i (3,556,697 samples, 0.75%)</title><rect x="19.1468%" y="485" width="0.7541%" height="15" fill="rgb(209,217,16)" fg:x="90300002" fg:w="3556697"/><text x="19.3968%" y="495.50"></text></g><g><title>fnv1a_hash (1,870,456 samples, 0.40%)</title><rect x="19.9009%" y="485" width="0.3966%" height="15" fill="rgb(219,88,35)" fg:x="93856699" fg:w="1870456"/><text x="20.1509%" y="495.50"></text></g><g><title>ossl_asn1_template_free (2,654,318 samples, 0.56%)</title><rect x="20.2975%" y="485" width="0.5628%" height="15" fill="rgb(220,193,23)" fg:x="95727155" fg:w="2654318"/><text x="20.5475%" y="495.50"></text></g><g><title>ossl_asn1_string_embed_free (2,654,318 samples, 0.56%)</title><rect x="20.2975%" y="469" width="0.5628%" height="15" fill="rgb(230,90,52)" fg:x="95727155" fg:w="2654318"/><text x="20.5475%" y="479.50"></text></g><g><title>cfree (2,654,318 samples, 0.56%)</title><rect x="20.2975%" y="453" width="0.5628%" height="15" fill="rgb(252,106,19)" fg:x="95727155" fg:w="2654318"/><text x="20.5475%" y="463.50"></text></g><g><title>ossl_ec_pt_format_id2name (3,669,530 samples, 0.78%)</title><rect x="20.8603%" y="485" width="0.7781%" height="15" fill="rgb(206,74,20)" fg:x="98381473" fg:w="3669530"/><text x="21.1103%" y="495.50"></text></g><g><title>cargo (105,370,536 samples, 22.34%)</title><rect x="0.0000%" y="501" width="22.3422%" height="15" fill="rgb(230,138,44)" fg:x="0" fg:w="105370536"/><text x="0.2500%" y="511.50">cargo</text></g><g><title>ossl_err_get_state_int (3,319,533 samples, 0.70%)</title><rect x="21.6384%" y="485" width="0.7039%" height="15" fill="rgb(235,182,43)" fg:x="102051003" fg:w="3319533"/><text x="21.8884%" y="495.50"></text></g><g><title>[ld-linux-x86-64.so.2] (96,930,765 samples, 20.55%)</title><rect x="23.2079%" y="373" width="20.5527%" height="15" fill="rgb(242,16,51)" fg:x="109453224" fg:w="96930765"/><text x="23.4579%" y="383.50">[ld-linux-x86-64.so.2]</text></g><g><title>[ld-linux-x86-64.so.2] (6,207,719 samples, 1.32%)</title><rect x="42.4444%" y="357" width="1.3163%" height="15" fill="rgb(248,9,4)" fg:x="200176270" fg:w="6207719"/><text x="42.6944%" y="367.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2,492,071 samples, 0.53%)</title><rect x="43.2322%" y="341" width="0.5284%" height="15" fill="rgb(210,31,22)" fg:x="203891918" fg:w="2492071"/><text x="43.4822%" y="351.50"></text></g><g><title>[ld-linux-x86-64.so.2] (99,040,038 samples, 21.00%)</title><rect x="23.2030%" y="389" width="21.0000%" height="15" fill="rgb(239,54,39)" fg:x="109430107" fg:w="99040038"/><text x="23.4530%" y="399.50">[ld-linux-x86-64.so.2]</text></g><g><title>[unknown] (2,086,156 samples, 0.44%)</title><rect x="43.7606%" y="373" width="0.4423%" height="15" fill="rgb(230,99,41)" fg:x="206383989" fg:w="2086156"/><text x="44.0106%" y="383.50"></text></g><g><title>[unknown] (2,086,156 samples, 0.44%)</title><rect x="43.7606%" y="357" width="0.4423%" height="15" fill="rgb(253,106,12)" fg:x="206383989" fg:w="2086156"/><text x="44.0106%" y="367.50"></text></g><g><title>[unknown] (2,086,156 samples, 0.44%)</title><rect x="43.7606%" y="341" width="0.4423%" height="15" fill="rgb(213,46,41)" fg:x="206383989" fg:w="2086156"/><text x="44.0106%" y="351.50"></text></g><g><title>[unknown] (2,086,156 samples, 0.44%)</title><rect x="43.7606%" y="325" width="0.4423%" height="15" fill="rgb(215,133,35)" fg:x="206383989" fg:w="2086156"/><text x="44.0106%" y="335.50"></text></g><g><title>[unknown] (2,086,156 samples, 0.44%)</title><rect x="43.7606%" y="309" width="0.4423%" height="15" fill="rgb(213,28,5)" fg:x="206383989" fg:w="2086156"/><text x="44.0106%" y="319.50"></text></g><g><title>[unknown] (2,086,156 samples, 0.44%)</title><rect x="43.7606%" y="293" width="0.4423%" height="15" fill="rgb(215,77,49)" fg:x="206383989" fg:w="2086156"/><text x="44.0106%" y="303.50"></text></g><g><title>[unknown] (2,086,156 samples, 0.44%)</title><rect x="43.7606%" y="277" width="0.4423%" height="15" fill="rgb(248,100,22)" fg:x="206383989" fg:w="2086156"/><text x="44.0106%" y="287.50"></text></g><g><title>[unknown] (2,086,156 samples, 0.44%)</title><rect x="43.7606%" y="261" width="0.4423%" height="15" fill="rgb(208,67,9)" fg:x="206383989" fg:w="2086156"/><text x="44.0106%" y="271.50"></text></g><g><title>[unknown] (2,086,156 samples, 0.44%)</title><rect x="43.7606%" y="245" width="0.4423%" height="15" fill="rgb(219,133,21)" fg:x="206383989" fg:w="2086156"/><text x="44.0106%" y="255.50"></text></g><g><title>[unknown] (2,086,156 samples, 0.44%)</title><rect x="43.7606%" y="229" width="0.4423%" height="15" fill="rgb(246,46,29)" fg:x="206383989" fg:w="2086156"/><text x="44.0106%" y="239.50"></text></g><g><title>[ld-linux-x86-64.so.2] (103,016,998 samples, 21.84%)</title><rect x="22.3850%" y="405" width="21.8432%" height="15" fill="rgb(246,185,52)" fg:x="105572048" fg:w="103016998"/><text x="22.6350%" y="415.50">[ld-linux-x86-64.so.2]</text></g><g><title>[unknown] (118,901 samples, 0.03%)</title><rect x="44.2030%" y="389" width="0.0252%" height="15" fill="rgb(252,136,11)" fg:x="208470145" fg:w="118901"/><text x="44.4530%" y="399.50"></text></g><g><title>[unknown] (118,901 samples, 0.03%)</title><rect x="44.2030%" y="373" width="0.0252%" height="15" fill="rgb(219,138,53)" fg:x="208470145" fg:w="118901"/><text x="44.4530%" y="383.50"></text></g><g><title>[unknown] (118,901 samples, 0.03%)</title><rect x="44.2030%" y="357" width="0.0252%" height="15" fill="rgb(211,51,23)" fg:x="208470145" fg:w="118901"/><text x="44.4530%" y="367.50"></text></g><g><title>[unknown] (118,901 samples, 0.03%)</title><rect x="44.2030%" y="341" width="0.0252%" height="15" fill="rgb(247,221,28)" fg:x="208470145" fg:w="118901"/><text x="44.4530%" y="351.50"></text></g><g><title>[unknown] (118,900 samples, 0.03%)</title><rect x="44.2030%" y="325" width="0.0252%" height="15" fill="rgb(251,222,45)" fg:x="208470146" fg:w="118900"/><text x="44.4530%" y="335.50"></text></g><g><title>[unknown] (118,631 samples, 0.03%)</title><rect x="44.2030%" y="309" width="0.0252%" height="15" fill="rgb(217,162,53)" fg:x="208470415" fg:w="118631"/><text x="44.4530%" y="319.50"></text></g><g><title>[unknown] (118,631 samples, 0.03%)</title><rect x="44.2030%" y="293" width="0.0252%" height="15" fill="rgb(229,93,14)" fg:x="208470415" fg:w="118631"/><text x="44.4530%" y="303.50"></text></g><g><title>[unknown] (118,631 samples, 0.03%)</title><rect x="44.2030%" y="277" width="0.0252%" height="15" fill="rgb(209,67,49)" fg:x="208470415" fg:w="118631"/><text x="44.4530%" y="287.50"></text></g><g><title>[unknown] (113,414 samples, 0.02%)</title><rect x="44.2041%" y="261" width="0.0240%" height="15" fill="rgb(213,87,29)" fg:x="208475632" fg:w="113414"/><text x="44.4541%" y="271.50"></text></g><g><title>[unknown] (113,413 samples, 0.02%)</title><rect x="44.2041%" y="245" width="0.0240%" height="15" fill="rgb(205,151,52)" fg:x="208475633" fg:w="113413"/><text x="44.4541%" y="255.50"></text></g><g><title>[unknown] (113,413 samples, 0.02%)</title><rect x="44.2041%" y="229" width="0.0240%" height="15" fill="rgb(253,215,39)" fg:x="208475633" fg:w="113413"/><text x="44.4541%" y="239.50"></text></g><g><title>[unknown] (113,413 samples, 0.02%)</title><rect x="44.2041%" y="213" width="0.0240%" height="15" fill="rgb(221,220,41)" fg:x="208475633" fg:w="113413"/><text x="44.4541%" y="223.50"></text></g><g><title>[unknown] (113,398 samples, 0.02%)</title><rect x="44.2041%" y="197" width="0.0240%" height="15" fill="rgb(218,133,21)" fg:x="208475648" fg:w="113398"/><text x="44.4541%" y="207.50"></text></g><g><title>[ld-linux-x86-64.so.2] (366,142 samples, 0.08%)</title><rect x="45.0210%" y="325" width="0.0776%" height="15" fill="rgb(221,193,43)" fg:x="212328251" fg:w="366142"/><text x="45.2710%" y="335.50"></text></g><g><title>[unknown] (366,142 samples, 0.08%)</title><rect x="45.0210%" y="309" width="0.0776%" height="15" fill="rgb(240,128,52)" fg:x="212328251" fg:w="366142"/><text x="45.2710%" y="319.50"></text></g><g><title>[unknown] (366,142 samples, 0.08%)</title><rect x="45.0210%" y="293" width="0.0776%" height="15" fill="rgb(253,114,12)" fg:x="212328251" fg:w="366142"/><text x="45.2710%" y="303.50"></text></g><g><title>[unknown] (366,142 samples, 0.08%)</title><rect x="45.0210%" y="277" width="0.0776%" height="15" fill="rgb(215,223,47)" fg:x="212328251" fg:w="366142"/><text x="45.2710%" y="287.50"></text></g><g><title>[unknown] (366,142 samples, 0.08%)</title><rect x="45.0210%" y="261" width="0.0776%" height="15" fill="rgb(248,225,23)" fg:x="212328251" fg:w="366142"/><text x="45.2710%" y="271.50"></text></g><g><title>[unknown] (366,142 samples, 0.08%)</title><rect x="45.0210%" y="245" width="0.0776%" height="15" fill="rgb(250,108,0)" fg:x="212328251" fg:w="366142"/><text x="45.2710%" y="255.50"></text></g><g><title>[ld-linux-x86-64.so.2] (107,754,554 samples, 22.85%)</title><rect x="22.3422%" y="437" width="22.8477%" height="15" fill="rgb(228,208,7)" fg:x="105370536" fg:w="107754554"/><text x="22.5922%" y="447.50">[ld-linux-x86-64.so.2]</text></g><g><title>[ld-linux-x86-64.so.2] (107,553,042 samples, 22.81%)</title><rect x="22.3850%" y="421" width="22.8050%" height="15" fill="rgb(244,45,10)" fg:x="105572048" fg:w="107553042"/><text x="22.6350%" y="431.50">[ld-linux-x86-64.so.2]</text></g><g><title>_dl_catch_exception (4,536,044 samples, 0.96%)</title><rect x="44.2282%" y="405" width="0.9618%" height="15" fill="rgb(207,125,25)" fg:x="208589046" fg:w="4536044"/><text x="44.4782%" y="415.50"></text></g><g><title>[ld-linux-x86-64.so.2] (4,536,044 samples, 0.96%)</title><rect x="44.2282%" y="389" width="0.9618%" height="15" fill="rgb(210,195,18)" fg:x="208589046" fg:w="4536044"/><text x="44.4782%" y="399.50"></text></g><g><title>[ld-linux-x86-64.so.2] (4,536,044 samples, 0.96%)</title><rect x="44.2282%" y="373" width="0.9618%" height="15" fill="rgb(249,80,12)" fg:x="208589046" fg:w="4536044"/><text x="44.4782%" y="383.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2,919,044 samples, 0.62%)</title><rect x="44.5710%" y="357" width="0.6189%" height="15" fill="rgb(221,65,9)" fg:x="210206046" fg:w="2919044"/><text x="44.8210%" y="367.50"></text></g><g><title>[ld-linux-x86-64.so.2] (796,839 samples, 0.17%)</title><rect x="45.0210%" y="341" width="0.1690%" height="15" fill="rgb(235,49,36)" fg:x="212328251" fg:w="796839"/><text x="45.2710%" y="351.50"></text></g><g><title>[unknown] (430,697 samples, 0.09%)</title><rect x="45.0987%" y="325" width="0.0913%" height="15" fill="rgb(225,32,20)" fg:x="212694393" fg:w="430697"/><text x="45.3487%" y="335.50"></text></g><g><title>[unknown] (430,697 samples, 0.09%)</title><rect x="45.0987%" y="309" width="0.0913%" height="15" fill="rgb(215,141,46)" fg:x="212694393" fg:w="430697"/><text x="45.3487%" y="319.50"></text></g><g><title>[unknown] (430,697 samples, 0.09%)</title><rect x="45.0987%" y="293" width="0.0913%" height="15" fill="rgb(250,160,47)" fg:x="212694393" fg:w="430697"/><text x="45.3487%" y="303.50"></text></g><g><title>[unknown] (430,697 samples, 0.09%)</title><rect x="45.0987%" y="277" width="0.0913%" height="15" fill="rgb(216,222,40)" fg:x="212694393" fg:w="430697"/><text x="45.3487%" y="287.50"></text></g><g><title>[unknown] (430,697 samples, 0.09%)</title><rect x="45.0987%" y="261" width="0.0913%" height="15" fill="rgb(234,217,39)" fg:x="212694393" fg:w="430697"/><text x="45.3487%" y="271.50"></text></g><g><title>[unknown] (430,697 samples, 0.09%)</title><rect x="45.0987%" y="245" width="0.0913%" height="15" fill="rgb(207,178,40)" fg:x="212694393" fg:w="430697"/><text x="45.3487%" y="255.50"></text></g><g><title>[unknown] (430,697 samples, 0.09%)</title><rect x="45.0987%" y="229" width="0.0913%" height="15" fill="rgb(221,136,13)" fg:x="212694393" fg:w="430697"/><text x="45.3487%" y="239.50"></text></g><g><title>[unknown] (430,697 samples, 0.09%)</title><rect x="45.0987%" y="213" width="0.0913%" height="15" fill="rgb(249,199,10)" fg:x="212694393" fg:w="430697"/><text x="45.3487%" y="223.50"></text></g><g><title>[unknown] (430,697 samples, 0.09%)</title><rect x="45.0987%" y="197" width="0.0913%" height="15" fill="rgb(249,222,13)" fg:x="212694393" fg:w="430697"/><text x="45.3487%" y="207.50"></text></g><g><title>gnuplot (114,922,348 samples, 24.37%)</title><rect x="22.3422%" y="501" width="24.3676%" height="15" fill="rgb(244,185,38)" fg:x="105370536" fg:w="114922348"/><text x="22.5922%" y="511.50">gnuplot</text></g><g><title>[ld-linux-x86-64.so.2] (114,922,348 samples, 24.37%)</title><rect x="22.3422%" y="485" width="24.3676%" height="15" fill="rgb(236,202,9)" fg:x="105370536" fg:w="114922348"/><text x="22.5922%" y="495.50">[ld-linux-x86-64.so.2]</text></g><g><title>[ld-linux-x86-64.so.2] (114,922,348 samples, 24.37%)</title><rect x="22.3422%" y="469" width="24.3676%" height="15" fill="rgb(250,229,37)" fg:x="105370536" fg:w="114922348"/><text x="22.5922%" y="479.50">[ld-linux-x86-64.so.2]</text></g><g><title>[ld-linux-x86-64.so.2] (114,922,348 samples, 24.37%)</title><rect x="22.3422%" y="453" width="24.3676%" height="15" fill="rgb(206,174,23)" fg:x="105370536" fg:w="114922348"/><text x="22.5922%" y="463.50">[ld-linux-x86-64.so.2]</text></g><g><title>[libheif.so.1.19.7] (7,167,794 samples, 1.52%)</title><rect x="45.1900%" y="437" width="1.5198%" height="15" fill="rgb(211,33,43)" fg:x="213125090" fg:w="7167794"/><text x="45.4400%" y="447.50"></text></g><g><title>[libheif.so.1.19.7] (7,167,794 samples, 1.52%)</title><rect x="45.1900%" y="421" width="1.5198%" height="15" fill="rgb(245,58,50)" fg:x="213125090" fg:w="7167794"/><text x="45.4400%" y="431.50"></text></g><g><title>de265_init (7,167,794 samples, 1.52%)</title><rect x="45.1900%" y="405" width="1.5198%" height="15" fill="rgb(244,68,36)" fg:x="213125090" fg:w="7167794"/><text x="45.4400%" y="415.50"></text></g><g><title>init_scan_orders (7,167,794 samples, 1.52%)</title><rect x="45.1900%" y="389" width="1.5198%" height="15" fill="rgb(232,229,15)" fg:x="213125090" fg:w="7167794"/><text x="45.4400%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11,678,332 samples, 2.48%)</title><rect x="46.7098%" y="485" width="2.4762%" height="15" fill="rgb(254,30,23)" fg:x="220292884" fg:w="11678332"/><text x="46.9598%" y="495.50">&lt;a..</text></g><g><title>cfree (4,164,679 samples, 0.88%)</title><rect x="48.3030%" y="469" width="0.8831%" height="15" fill="rgb(235,160,14)" fg:x="227806537" fg:w="4164679"/><text x="48.5530%" y="479.50"></text></g><g><title>[libc.so.6] (4,164,679 samples, 0.88%)</title><rect x="48.3030%" y="453" width="0.8831%" height="15" fill="rgb(212,155,44)" fg:x="227806537" fg:w="4164679"/><text x="48.5530%" y="463.50"></text></g><g><title>[libc.so.6] (4,164,679 samples, 0.88%)</title><rect x="48.3030%" y="437" width="0.8831%" height="15" fill="rgb(226,2,50)" fg:x="227806537" fg:w="4164679"/><text x="48.5530%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2,414,902 samples, 0.51%)</title><rect x="49.1860%" y="485" width="0.5120%" height="15" fill="rgb(234,177,6)" fg:x="231971216" fg:w="2414902"/><text x="49.4360%" y="495.50"></text></g><g><title>&lt;criterion::measurement::WallTime as criterion::measurement::Measurement&gt;::start (11,148,019 samples, 2.36%)</title><rect x="49.6981%" y="485" width="2.3638%" height="15" fill="rgb(217,24,9)" fg:x="234386118" fg:w="11148019"/><text x="49.9481%" y="495.50">&lt;c..</text></g><g><title>[unknown] (11,148,019 samples, 2.36%)</title><rect x="49.6981%" y="469" width="2.3638%" height="15" fill="rgb(220,13,46)" fg:x="234386118" fg:w="11148019"/><text x="49.9481%" y="479.50">[u..</text></g><g><title>[unknown] (11,148,019 samples, 2.36%)</title><rect x="49.6981%" y="453" width="2.3638%" height="15" fill="rgb(239,221,27)" fg:x="234386118" fg:w="11148019"/><text x="49.9481%" y="463.50">[u..</text></g><g><title>[unknown] (11,148,019 samples, 2.36%)</title><rect x="49.6981%" y="437" width="2.3638%" height="15" fill="rgb(222,198,25)" fg:x="234386118" fg:w="11148019"/><text x="49.9481%" y="447.50">[u..</text></g><g><title>[unknown] (11,148,019 samples, 2.36%)</title><rect x="49.6981%" y="421" width="2.3638%" height="15" fill="rgb(211,99,13)" fg:x="234386118" fg:w="11148019"/><text x="49.9481%" y="431.50">[u..</text></g><g><title>[ld-linux-x86-64.so.2] (1,339,776 samples, 0.28%)</title><rect x="52.0618%" y="453" width="0.2841%" height="15" fill="rgb(232,111,31)" fg:x="245534137" fg:w="1339776"/><text x="52.3118%" y="463.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1,339,776 samples, 0.28%)</title><rect x="52.0618%" y="437" width="0.2841%" height="15" fill="rgb(245,82,37)" fg:x="245534137" fg:w="1339776"/><text x="52.3118%" y="447.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1,255,925 samples, 0.27%)</title><rect x="52.0796%" y="421" width="0.2663%" height="15" fill="rgb(227,149,46)" fg:x="245617988" fg:w="1255925"/><text x="52.3296%" y="431.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1,255,925 samples, 0.27%)</title><rect x="52.0796%" y="405" width="0.2663%" height="15" fill="rgb(218,36,50)" fg:x="245617988" fg:w="1255925"/><text x="52.3296%" y="415.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1,343,684 samples, 0.28%)</title><rect x="52.0618%" y="469" width="0.2849%" height="15" fill="rgb(226,80,48)" fg:x="245534137" fg:w="1343684"/><text x="52.3118%" y="479.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1,343,685 samples, 0.28%)</title><rect x="52.0618%" y="485" width="0.2849%" height="15" fill="rgb(238,224,15)" fg:x="245534137" fg:w="1343685"/><text x="52.3118%" y="495.50"></text></g><g><title>[libc.so.6] (4,796,499 samples, 1.02%)</title><rect x="52.3467%" y="485" width="1.0170%" height="15" fill="rgb(241,136,10)" fg:x="246877822" fg:w="4796499"/><text x="52.5967%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4,785,995 samples, 1.01%)</title><rect x="52.3490%" y="469" width="1.0148%" height="15" fill="rgb(208,32,45)" fg:x="246888326" fg:w="4785995"/><text x="52.5990%" y="479.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::ignore_str (1,898,213 samples, 0.40%)</title><rect x="53.3638%" y="469" width="0.4025%" height="15" fill="rgb(207,135,9)" fg:x="251674321" fg:w="1898213"/><text x="53.6138%" y="479.50"></text></g><g><title>malloc (19,675,154 samples, 4.17%)</title><rect x="53.7662%" y="453" width="4.1718%" height="15" fill="rgb(206,86,44)" fg:x="253572535" fg:w="19675154"/><text x="54.0162%" y="463.50">malloc</text></g><g><title>[libc.so.6] (19,675,154 samples, 4.17%)</title><rect x="53.7662%" y="437" width="4.1718%" height="15" fill="rgb(245,177,15)" fg:x="253572535" fg:w="19675154"/><text x="54.0162%" y="447.50">[libc..</text></g><g><title>[unknown] (19,675,154 samples, 4.17%)</title><rect x="53.7662%" y="421" width="4.1718%" height="15" fill="rgb(206,64,50)" fg:x="253572535" fg:w="19675154"/><text x="54.0162%" y="431.50">[unkn..</text></g><g><title>[unknown] (14,854,144 samples, 3.15%)</title><rect x="54.7885%" y="405" width="3.1496%" height="15" fill="rgb(234,36,40)" fg:x="258393545" fg:w="14854144"/><text x="55.0385%" y="415.50">[un..</text></g><g><title>[unknown] (14,854,144 samples, 3.15%)</title><rect x="54.7885%" y="389" width="3.1496%" height="15" fill="rgb(213,64,8)" fg:x="258393545" fg:w="14854144"/><text x="55.0385%" y="399.50">[un..</text></g><g><title>[unknown] (14,854,144 samples, 3.15%)</title><rect x="54.7885%" y="373" width="3.1496%" height="15" fill="rgb(210,75,36)" fg:x="258393545" fg:w="14854144"/><text x="55.0385%" y="383.50">[un..</text></g><g><title>[unknown] (14,854,144 samples, 3.15%)</title><rect x="54.7885%" y="357" width="3.1496%" height="15" fill="rgb(229,88,21)" fg:x="258393545" fg:w="14854144"/><text x="55.0385%" y="367.50">[un..</text></g><g><title>[unknown] (9,772,608 samples, 2.07%)</title><rect x="55.8659%" y="341" width="2.0721%" height="15" fill="rgb(252,204,47)" fg:x="263475081" fg:w="9772608"/><text x="56.1159%" y="351.50">[..</text></g><g><title>[unknown] (7,234,688 samples, 1.53%)</title><rect x="56.4041%" y="325" width="1.5340%" height="15" fill="rgb(208,77,27)" fg:x="266013001" fg:w="7234688"/><text x="56.6541%" y="335.50"></text></g><g><title>[unknown] (7,234,688 samples, 1.53%)</title><rect x="56.4041%" y="309" width="1.5340%" height="15" fill="rgb(221,76,26)" fg:x="266013001" fg:w="7234688"/><text x="56.6541%" y="319.50"></text></g><g><title>[unknown] (7,234,688 samples, 1.53%)</title><rect x="56.4041%" y="293" width="1.5340%" height="15" fill="rgb(225,139,18)" fg:x="266013001" fg:w="7234688"/><text x="56.6541%" y="303.50"></text></g><g><title>[unknown] (7,234,688 samples, 1.53%)</title><rect x="56.4041%" y="277" width="1.5340%" height="15" fill="rgb(230,137,11)" fg:x="266013001" fg:w="7234688"/><text x="56.6541%" y="287.50"></text></g><g><title>[unknown] (7,234,688 samples, 1.53%)</title><rect x="56.4041%" y="261" width="1.5340%" height="15" fill="rgb(212,28,1)" fg:x="266013001" fg:w="7234688"/><text x="56.6541%" y="271.50"></text></g><g><title>[unknown] (4,845,837 samples, 1.03%)</title><rect x="56.9106%" y="245" width="1.0275%" height="15" fill="rgb(248,164,17)" fg:x="268401852" fg:w="4845837"/><text x="57.1606%" y="255.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hde87ba1e6333e07aE.llvm.13094166541330840858 (22,089,986 samples, 4.68%)</title><rect x="53.7662%" y="469" width="4.6838%" height="15" fill="rgb(222,171,42)" fg:x="253572535" fg:w="22089986"/><text x="54.0162%" y="479.50">_ZN5a..</text></g><g><title>realloc (2,414,832 samples, 0.51%)</title><rect x="57.9381%" y="453" width="0.5120%" height="15" fill="rgb(243,84,45)" fg:x="273247689" fg:w="2414832"/><text x="58.1881%" y="463.50"></text></g><g><title>[libc.so.6] (2,414,832 samples, 0.51%)</title><rect x="57.9381%" y="437" width="0.5120%" height="15" fill="rgb(252,49,23)" fg:x="273247689" fg:w="2414832"/><text x="58.1881%" y="447.50"></text></g><g><title>[libc.so.6] (2,414,832 samples, 0.51%)</title><rect x="57.9381%" y="421" width="0.5120%" height="15" fill="rgb(215,19,7)" fg:x="273247689" fg:w="2414832"/><text x="58.1881%" y="431.50"></text></g><g><title>[unknown] (2,414,832 samples, 0.51%)</title><rect x="57.9381%" y="405" width="0.5120%" height="15" fill="rgb(238,81,41)" fg:x="273247689" fg:w="2414832"/><text x="58.1881%" y="415.50"></text></g><g><title>[unknown] (2,414,832 samples, 0.51%)</title><rect x="57.9381%" y="389" width="0.5120%" height="15" fill="rgb(210,199,37)" fg:x="273247689" fg:w="2414832"/><text x="58.1881%" y="399.50"></text></g><g><title>[unknown] (2,414,832 samples, 0.51%)</title><rect x="57.9381%" y="373" width="0.5120%" height="15" fill="rgb(244,192,49)" fg:x="273247689" fg:w="2414832"/><text x="58.1881%" y="383.50"></text></g><g><title>[unknown] (2,414,832 samples, 0.51%)</title><rect x="57.9381%" y="357" width="0.5120%" height="15" fill="rgb(226,211,11)" fg:x="273247689" fg:w="2414832"/><text x="58.1881%" y="367.50"></text></g><g><title>[unknown] (2,414,832 samples, 0.51%)</title><rect x="57.9381%" y="341" width="0.5120%" height="15" fill="rgb(236,162,54)" fg:x="273247689" fg:w="2414832"/><text x="58.1881%" y="351.50"></text></g><g><title>[unknown] (2,414,832 samples, 0.51%)</title><rect x="57.9381%" y="325" width="0.5120%" height="15" fill="rgb(220,229,9)" fg:x="273247689" fg:w="2414832"/><text x="58.1881%" y="335.50"></text></g><g><title>[unknown] (2,414,832 samples, 0.51%)</title><rect x="57.9381%" y="309" width="0.5120%" height="15" fill="rgb(250,87,22)" fg:x="273247689" fg:w="2414832"/><text x="58.1881%" y="319.50"></text></g><g><title>[unknown] (2,414,832 samples, 0.51%)</title><rect x="57.9381%" y="293" width="0.5120%" height="15" fill="rgb(239,43,17)" fg:x="273247689" fg:w="2414832"/><text x="58.1881%" y="303.50"></text></g><g><title>[unknown] (2,414,832 samples, 0.51%)</title><rect x="57.9381%" y="277" width="0.5120%" height="15" fill="rgb(231,177,25)" fg:x="273247689" fg:w="2414832"/><text x="58.1881%" y="287.50"></text></g><g><title>[unknown] (2,414,832 samples, 0.51%)</title><rect x="57.9381%" y="261" width="0.5120%" height="15" fill="rgb(219,179,1)" fg:x="273247689" fg:w="2414832"/><text x="58.1881%" y="271.50"></text></g><g><title>[unknown] (2,414,832 samples, 0.51%)</title><rect x="57.9381%" y="245" width="0.5120%" height="15" fill="rgb(238,219,53)" fg:x="273247689" fg:w="2414832"/><text x="58.1881%" y="255.50"></text></g><g><title>[unknown] (2,414,832 samples, 0.51%)</title><rect x="57.9381%" y="229" width="0.5120%" height="15" fill="rgb(232,167,36)" fg:x="273247689" fg:w="2414832"/><text x="58.1881%" y="239.50"></text></g><g><title>[unknown] (2,414,832 samples, 0.51%)</title><rect x="57.9381%" y="213" width="0.5120%" height="15" fill="rgb(244,19,51)" fg:x="273247689" fg:w="2414832"/><text x="58.1881%" y="223.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4,870,492 samples, 1.03%)</title><rect x="58.4501%" y="469" width="1.0327%" height="15" fill="rgb(224,6,22)" fg:x="275662521" fg:w="4870492"/><text x="58.7001%" y="479.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hde87ba1e6333e07aE.llvm.13094166541330840858 (2,440,815 samples, 0.52%)</title><rect x="58.9653%" y="453" width="0.5175%" height="15" fill="rgb(224,145,5)" fg:x="278092198" fg:w="2440815"/><text x="59.2153%" y="463.50"></text></g><g><title>realloc (2,440,815 samples, 0.52%)</title><rect x="58.9653%" y="437" width="0.5175%" height="15" fill="rgb(234,130,49)" fg:x="278092198" fg:w="2440815"/><text x="59.2153%" y="447.50"></text></g><g><title>[libc.so.6] (2,440,815 samples, 0.52%)</title><rect x="58.9653%" y="421" width="0.5175%" height="15" fill="rgb(254,6,2)" fg:x="278092198" fg:w="2440815"/><text x="59.2153%" y="431.50"></text></g><g><title>[libc.so.6] (2,440,815 samples, 0.52%)</title><rect x="58.9653%" y="405" width="0.5175%" height="15" fill="rgb(208,96,46)" fg:x="278092198" fg:w="2440815"/><text x="59.2153%" y="415.50"></text></g><g><title>[unknown] (2,440,815 samples, 0.52%)</title><rect x="58.9653%" y="389" width="0.5175%" height="15" fill="rgb(239,3,39)" fg:x="278092198" fg:w="2440815"/><text x="59.2153%" y="399.50"></text></g><g><title>[unknown] (2,440,815 samples, 0.52%)</title><rect x="58.9653%" y="373" width="0.5175%" height="15" fill="rgb(233,210,1)" fg:x="278092198" fg:w="2440815"/><text x="59.2153%" y="383.50"></text></g><g><title>[unknown] (2,440,815 samples, 0.52%)</title><rect x="58.9653%" y="357" width="0.5175%" height="15" fill="rgb(244,137,37)" fg:x="278092198" fg:w="2440815"/><text x="59.2153%" y="367.50"></text></g><g><title>[unknown] (2,440,815 samples, 0.52%)</title><rect x="58.9653%" y="341" width="0.5175%" height="15" fill="rgb(240,136,2)" fg:x="278092198" fg:w="2440815"/><text x="59.2153%" y="351.50"></text></g><g><title>[unknown] (2,440,815 samples, 0.52%)</title><rect x="58.9653%" y="325" width="0.5175%" height="15" fill="rgb(239,18,37)" fg:x="278092198" fg:w="2440815"/><text x="59.2153%" y="335.50"></text></g><g><title>[unknown] (2,440,815 samples, 0.52%)</title><rect x="58.9653%" y="309" width="0.5175%" height="15" fill="rgb(218,185,22)" fg:x="278092198" fg:w="2440815"/><text x="59.2153%" y="319.50"></text></g><g><title>[unknown] (2,440,815 samples, 0.52%)</title><rect x="58.9653%" y="293" width="0.5175%" height="15" fill="rgb(225,218,4)" fg:x="278092198" fg:w="2440815"/><text x="59.2153%" y="303.50"></text></g><g><title>[unknown] (2,440,815 samples, 0.52%)</title><rect x="58.9653%" y="277" width="0.5175%" height="15" fill="rgb(230,182,32)" fg:x="278092198" fg:w="2440815"/><text x="59.2153%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (7,178,739 samples, 1.52%)</title><rect x="59.4828%" y="469" width="1.5221%" height="15" fill="rgb(242,56,43)" fg:x="280533013" fg:w="7178739"/><text x="59.7328%" y="479.50"></text></g><g><title>malloc (4,739,317 samples, 1.00%)</title><rect x="60.0001%" y="453" width="1.0049%" height="15" fill="rgb(233,99,24)" fg:x="282972435" fg:w="4739317"/><text x="60.2501%" y="463.50"></text></g><g><title>[libc.so.6] (4,739,317 samples, 1.00%)</title><rect x="60.0001%" y="437" width="1.0049%" height="15" fill="rgb(234,209,42)" fg:x="282972435" fg:w="4739317"/><text x="60.2501%" y="447.50"></text></g><g><title>[unknown] (4,739,317 samples, 1.00%)</title><rect x="60.0001%" y="421" width="1.0049%" height="15" fill="rgb(227,7,12)" fg:x="282972435" fg:w="4739317"/><text x="60.2501%" y="431.50"></text></g><g><title>[unknown] (4,739,317 samples, 1.00%)</title><rect x="60.0001%" y="405" width="1.0049%" height="15" fill="rgb(245,203,43)" fg:x="282972435" fg:w="4739317"/><text x="60.2501%" y="415.50"></text></g><g><title>[unknown] (4,739,317 samples, 1.00%)</title><rect x="60.0001%" y="389" width="1.0049%" height="15" fill="rgb(238,205,33)" fg:x="282972435" fg:w="4739317"/><text x="60.2501%" y="399.50"></text></g><g><title>[unknown] (4,739,317 samples, 1.00%)</title><rect x="60.0001%" y="373" width="1.0049%" height="15" fill="rgb(231,56,7)" fg:x="282972435" fg:w="4739317"/><text x="60.2501%" y="383.50"></text></g><g><title>[unknown] (4,739,317 samples, 1.00%)</title><rect x="60.0001%" y="357" width="1.0049%" height="15" fill="rgb(244,186,29)" fg:x="282972435" fg:w="4739317"/><text x="60.2501%" y="367.50"></text></g><g><title>[unknown] (4,739,317 samples, 1.00%)</title><rect x="60.0001%" y="341" width="1.0049%" height="15" fill="rgb(234,111,31)" fg:x="282972435" fg:w="4739317"/><text x="60.2501%" y="351.50"></text></g><g><title>[unknown] (4,739,317 samples, 1.00%)</title><rect x="60.0001%" y="325" width="1.0049%" height="15" fill="rgb(241,149,10)" fg:x="282972435" fg:w="4739317"/><text x="60.2501%" y="335.50"></text></g><g><title>[unknown] (2,361,228 samples, 0.50%)</title><rect x="60.5043%" y="309" width="0.5007%" height="15" fill="rgb(249,206,44)" fg:x="285350524" fg:w="2361228"/><text x="60.7543%" y="319.50"></text></g><g><title>[unknown] (2,361,228 samples, 0.50%)</title><rect x="60.5043%" y="293" width="0.5007%" height="15" fill="rgb(251,153,30)" fg:x="285350524" fg:w="2361228"/><text x="60.7543%" y="303.50"></text></g><g><title>[unknown] (2,361,228 samples, 0.50%)</title><rect x="60.5043%" y="277" width="0.5007%" height="15" fill="rgb(239,152,38)" fg:x="285350524" fg:w="2361228"/><text x="60.7543%" y="287.50"></text></g><g><title>[unknown] (2,361,228 samples, 0.50%)</title><rect x="60.5043%" y="261" width="0.5007%" height="15" fill="rgb(249,139,47)" fg:x="285350524" fg:w="2361228"/><text x="60.7543%" y="271.50"></text></g><g><title>[unknown] (2,361,228 samples, 0.50%)</title><rect x="60.5043%" y="245" width="0.5007%" height="15" fill="rgb(244,64,35)" fg:x="285350524" fg:w="2361228"/><text x="60.7543%" y="255.50"></text></g><g><title>[unknown] (2,361,228 samples, 0.50%)</title><rect x="60.5043%" y="229" width="0.5007%" height="15" fill="rgb(216,46,15)" fg:x="285350524" fg:w="2361228"/><text x="60.7543%" y="239.50"></text></g><g><title>json_parser::Parser::parse (22,554,919 samples, 4.78%)</title><rect x="61.0050%" y="469" width="4.7824%" height="15" fill="rgb(250,74,19)" fg:x="287711752" fg:w="22554919"/><text x="61.2550%" y="479.50">json_p..</text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (7,269,565 samples, 1.54%)</title><rect x="64.2460%" y="453" width="1.5414%" height="15" fill="rgb(249,42,33)" fg:x="302997106" fg:w="7269565"/><text x="64.4960%" y="463.50"></text></g><g><title>malloc (7,269,565 samples, 1.54%)</title><rect x="64.2460%" y="437" width="1.5414%" height="15" fill="rgb(242,149,17)" fg:x="302997106" fg:w="7269565"/><text x="64.4960%" y="447.50"></text></g><g><title>[libc.so.6] (4,841,633 samples, 1.03%)</title><rect x="64.7608%" y="421" width="1.0266%" height="15" fill="rgb(244,29,21)" fg:x="305425038" fg:w="4841633"/><text x="65.0108%" y="431.50"></text></g><g><title>[unknown] (4,841,633 samples, 1.03%)</title><rect x="64.7608%" y="405" width="1.0266%" height="15" fill="rgb(220,130,37)" fg:x="305425038" fg:w="4841633"/><text x="65.0108%" y="415.50"></text></g><g><title>[unknown] (4,841,633 samples, 1.03%)</title><rect x="64.7608%" y="389" width="1.0266%" height="15" fill="rgb(211,67,2)" fg:x="305425038" fg:w="4841633"/><text x="65.0108%" y="399.50"></text></g><g><title>[unknown] (4,841,633 samples, 1.03%)</title><rect x="64.7608%" y="373" width="1.0266%" height="15" fill="rgb(235,68,52)" fg:x="305425038" fg:w="4841633"/><text x="65.0108%" y="383.50"></text></g><g><title>[unknown] (4,841,633 samples, 1.03%)</title><rect x="64.7608%" y="357" width="1.0266%" height="15" fill="rgb(246,142,3)" fg:x="305425038" fg:w="4841633"/><text x="65.0108%" y="367.50"></text></g><g><title>[unknown] (4,841,633 samples, 1.03%)</title><rect x="64.7608%" y="341" width="1.0266%" height="15" fill="rgb(241,25,7)" fg:x="305425038" fg:w="4841633"/><text x="65.0108%" y="351.50"></text></g><g><title>[unknown] (6,721,652 samples, 1.43%)</title><rect x="70.6502%" y="453" width="1.4252%" height="15" fill="rgb(242,119,39)" fg:x="333200630" fg:w="6721652"/><text x="70.9002%" y="463.50"></text></g><g><title>[unknown] (6,721,652 samples, 1.43%)</title><rect x="70.6502%" y="437" width="1.4252%" height="15" fill="rgb(241,98,45)" fg:x="333200630" fg:w="6721652"/><text x="70.9002%" y="447.50"></text></g><g><title>[unknown] (6,721,652 samples, 1.43%)</title><rect x="70.6502%" y="421" width="1.4252%" height="15" fill="rgb(254,28,30)" fg:x="333200630" fg:w="6721652"/><text x="70.9002%" y="431.50"></text></g><g><title>[unknown] (6,721,652 samples, 1.43%)</title><rect x="70.6502%" y="405" width="1.4252%" height="15" fill="rgb(241,142,54)" fg:x="333200630" fg:w="6721652"/><text x="70.9002%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (13,963,004 samples, 2.96%)</title><rect x="72.0754%" y="453" width="2.9606%" height="15" fill="rgb(222,85,15)" fg:x="339922282" fg:w="13963004"/><text x="72.3254%" y="463.50">all..</text></g><g><title>alloc::raw_vec::finish_grow (13,963,004 samples, 2.96%)</title><rect x="72.0754%" y="437" width="2.9606%" height="15" fill="rgb(210,85,47)" fg:x="339922282" fg:w="13963004"/><text x="72.3254%" y="447.50">all..</text></g><g><title>malloc (13,963,004 samples, 2.96%)</title><rect x="72.0754%" y="421" width="2.9606%" height="15" fill="rgb(224,206,25)" fg:x="339922282" fg:w="13963004"/><text x="72.3254%" y="431.50">mal..</text></g><g><title>[libc.so.6] (13,963,004 samples, 2.96%)</title><rect x="72.0754%" y="405" width="2.9606%" height="15" fill="rgb(243,201,19)" fg:x="339922282" fg:w="13963004"/><text x="72.3254%" y="415.50">[li..</text></g><g><title>[unknown] (9,227,148 samples, 1.96%)</title><rect x="73.0796%" y="389" width="1.9565%" height="15" fill="rgb(236,59,4)" fg:x="344658138" fg:w="9227148"/><text x="73.3296%" y="399.50">[..</text></g><g><title>[unknown] (9,227,148 samples, 1.96%)</title><rect x="73.0796%" y="373" width="1.9565%" height="15" fill="rgb(254,179,45)" fg:x="344658138" fg:w="9227148"/><text x="73.3296%" y="383.50">[..</text></g><g><title>[unknown] (9,227,148 samples, 1.96%)</title><rect x="73.0796%" y="357" width="1.9565%" height="15" fill="rgb(226,14,10)" fg:x="344658138" fg:w="9227148"/><text x="73.3296%" y="367.50">[..</text></g><g><title>[unknown] (5,195,261 samples, 1.10%)</title><rect x="73.9345%" y="341" width="1.1016%" height="15" fill="rgb(244,27,41)" fg:x="348690025" fg:w="5195261"/><text x="74.1845%" y="351.50"></text></g><g><title>[unknown] (5,195,261 samples, 1.10%)</title><rect x="73.9345%" y="325" width="1.1016%" height="15" fill="rgb(235,35,32)" fg:x="348690025" fg:w="5195261"/><text x="74.1845%" y="335.50"></text></g><g><title>cfree (5,771,342 samples, 1.22%)</title><rect x="75.0361%" y="453" width="1.2237%" height="15" fill="rgb(218,68,31)" fg:x="353885286" fg:w="5771342"/><text x="75.2861%" y="463.50"></text></g><g><title>json_parser::parse_json_impl (57,713,523 samples, 12.24%)</title><rect x="65.7874%" y="469" width="12.2373%" height="15" fill="rgb(207,120,37)" fg:x="310266671" fg:w="57713523"/><text x="66.0374%" y="479.50">json_parser::parse..</text></g><g><title>core::str::converts::from_utf8 (8,323,566 samples, 1.76%)</title><rect x="76.2598%" y="453" width="1.7649%" height="15" fill="rgb(227,98,0)" fg:x="359656628" fg:w="8323566"/><text x="76.5098%" y="463.50"></text></g><g><title>core::str::converts::from_utf8 (632,056 samples, 0.13%)</title><rect x="78.0247%" y="437" width="0.1340%" height="15" fill="rgb(207,7,3)" fg:x="367980194" fg:w="632056"/><text x="78.2747%" y="447.50"></text></g><g><title>[unknown] (116,937,930 samples, 24.79%)</title><rect x="53.3638%" y="485" width="24.7949%" height="15" fill="rgb(206,98,19)" fg:x="251674321" fg:w="116937930"/><text x="53.6138%" y="495.50">[unknown]</text></g><g><title>my_benchmark::main (632,057 samples, 0.13%)</title><rect x="78.0247%" y="469" width="0.1340%" height="15" fill="rgb(217,5,26)" fg:x="367980194" fg:w="632057"/><text x="78.2747%" y="479.50"></text></g><g><title>std::fs::read_to_string::inner (632,057 samples, 0.13%)</title><rect x="78.0247%" y="453" width="0.1340%" height="15" fill="rgb(235,190,38)" fg:x="367980194" fg:w="632057"/><text x="78.2747%" y="463.50"></text></g><g><title>[libc.so.6] (42,776,982 samples, 9.07%)</title><rect x="79.5231%" y="469" width="9.0702%" height="15" fill="rgb(247,86,24)" fg:x="375047158" fg:w="42776982"/><text x="79.7731%" y="479.50">[libc.so.6]</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (42,776,982 samples, 9.07%)</title><rect x="79.5231%" y="453" width="9.0702%" height="15" fill="rgb(205,101,16)" fg:x="375047158" fg:w="42776982"/><text x="79.7731%" y="463.50">&lt;alloc::vec::..</text></g><g><title>cfree (42,776,982 samples, 9.07%)</title><rect x="79.5231%" y="437" width="9.0702%" height="15" fill="rgb(246,168,33)" fg:x="375047158" fg:w="42776982"/><text x="79.7731%" y="447.50">cfree</text></g><g><title>[libc.so.6] (42,776,982 samples, 9.07%)</title><rect x="79.5231%" y="421" width="9.0702%" height="15" fill="rgb(231,114,1)" fg:x="375047158" fg:w="42776982"/><text x="79.7731%" y="431.50">[libc.so.6]</text></g><g><title>[libc.so.6] (42,776,982 samples, 9.07%)</title><rect x="79.5231%" y="405" width="9.0702%" height="15" fill="rgb(207,184,53)" fg:x="375047158" fg:w="42776982"/><text x="79.7731%" y="415.50">[libc.so.6]</text></g><g><title>[libc.so.6] (17,267,022 samples, 3.66%)</title><rect x="84.9321%" y="389" width="3.6612%" height="15" fill="rgb(224,95,51)" fg:x="400557118" fg:w="17267022"/><text x="85.1821%" y="399.50">[lib..</text></g><g><title>_ZN4core3ptr43drop_in_place$LT$json_parser..JsonValue$GT$17hb1830608d037b095E.llvm.12133047757575692015 (60,960,786 samples, 12.93%)</title><rect x="78.1587%" y="485" width="12.9258%" height="15" fill="rgb(212,188,45)" fg:x="368612251" fg:w="60960786"/><text x="78.4087%" y="495.50">_ZN4core3ptr43drop_..</text></g><g><title>cfree (11,748,897 samples, 2.49%)</title><rect x="88.5933%" y="469" width="2.4912%" height="15" fill="rgb(223,154,38)" fg:x="417824140" fg:w="11748897"/><text x="88.8433%" y="479.50">cf..</text></g><g><title>[libc.so.6] (7,886,080 samples, 1.67%)</title><rect x="89.4124%" y="453" width="1.6721%" height="15" fill="rgb(251,22,52)" fg:x="421686957" fg:w="7886080"/><text x="89.6624%" y="463.50"></text></g><g><title>[libc.so.6] (4,215,036 samples, 0.89%)</title><rect x="90.1908%" y="437" width="0.8937%" height="15" fill="rgb(229,209,22)" fg:x="425358001" fg:w="4215036"/><text x="90.4408%" y="447.50"></text></g><g><title>__rdl_dealloc (2,360,177 samples, 0.50%)</title><rect x="91.0845%" y="485" width="0.5004%" height="15" fill="rgb(234,138,34)" fg:x="429573037" fg:w="2360177"/><text x="91.3345%" y="495.50"></text></g><g><title>__rust_alloc (2,448,334 samples, 0.52%)</title><rect x="91.5850%" y="485" width="0.5191%" height="15" fill="rgb(212,95,11)" fg:x="431933214" fg:w="2448334"/><text x="91.8350%" y="495.50"></text></g><g><title>core::num::dec2flt::&lt;impl core::str::traits::FromStr for f64&gt;::from_str (3,880,703 samples, 0.82%)</title><rect x="92.1041%" y="485" width="0.8228%" height="15" fill="rgb(240,179,47)" fg:x="434381548" fg:w="3880703"/><text x="92.3541%" y="495.50"></text></g><g><title>core::str::converts::from_utf8 (5,708,056 samples, 1.21%)</title><rect x="92.9269%" y="485" width="1.2103%" height="15" fill="rgb(240,163,11)" fg:x="438262251" fg:w="5708056"/><text x="93.1769%" y="495.50"></text></g><g><title>all (471,620,279 samples, 100%)</title><rect x="0.0000%" y="517" width="100.0000%" height="15" fill="rgb(236,37,12)" fg:x="0" fg:w="471620279"/><text x="0.2500%" y="527.50"></text></g><g><title>my_benchmark-78 (251,327,395 samples, 53.29%)</title><rect x="46.7098%" y="501" width="53.2902%" height="15" fill="rgb(232,164,16)" fg:x="220292884" fg:w="251327395"/><text x="46.9598%" y="511.50">my_benchmark-78</text></g><g><title>json_parser::Parser::parse (27,649,972 samples, 5.86%)</title><rect x="94.1372%" y="485" width="5.8628%" height="15" fill="rgb(244,205,15)" fg:x="443970307" fg:w="27649972"/><text x="94.3872%" y="495.50">json_pa..</text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (9,995,864 samples, 2.12%)</title><rect x="97.8805%" y="469" width="2.1195%" height="15" fill="rgb(223,117,47)" fg:x="461624415" fg:w="9995864"/><text x="98.1305%" y="479.50">&lt;..</text></g><g><title>malloc (7,583,287 samples, 1.61%)</title><rect x="98.3921%" y="453" width="1.6079%" height="15" fill="rgb(244,107,35)" fg:x="464036992" fg:w="7583287"/><text x="98.6421%" y="463.50"></text></g><g><title>[libc.so.6] (7,583,287 samples, 1.61%)</title><rect x="98.3921%" y="437" width="1.6079%" height="15" fill="rgb(205,140,8)" fg:x="464036992" fg:w="7583287"/><text x="98.6421%" y="447.50"></text></g><g><title>[unknown] (7,583,287 samples, 1.61%)</title><rect x="98.3921%" y="421" width="1.6079%" height="15" fill="rgb(228,84,46)" fg:x="464036992" fg:w="7583287"/><text x="98.6421%" y="431.50"></text></g><g><title>[unknown] (7,583,287 samples, 1.61%)</title><rect x="98.3921%" y="405" width="1.6079%" height="15" fill="rgb(254,188,9)" fg:x="464036992" fg:w="7583287"/><text x="98.6421%" y="415.50"></text></g><g><title>[unknown] (7,583,287 samples, 1.61%)</title><rect x="98.3921%" y="389" width="1.6079%" height="15" fill="rgb(206,112,54)" fg:x="464036992" fg:w="7583287"/><text x="98.6421%" y="399.50"></text></g><g><title>[unknown] (7,583,287 samples, 1.61%)</title><rect x="98.3921%" y="373" width="1.6079%" height="15" fill="rgb(216,84,49)" fg:x="464036992" fg:w="7583287"/><text x="98.6421%" y="383.50"></text></g><g><title>[unknown] (2,414,499 samples, 0.51%)</title><rect x="99.4880%" y="357" width="0.5120%" height="15" fill="rgb(214,194,35)" fg:x="469205780" fg:w="2414499"/><text x="99.7380%" y="367.50"></text></g><g><title>[unknown] (2,414,499 samples, 0.51%)</title><rect x="99.4880%" y="341" width="0.5120%" height="15" fill="rgb(249,28,3)" fg:x="469205780" fg:w="2414499"/><text x="99.7380%" y="351.50"></text></g><g><title>[unknown] (2,414,499 samples, 0.51%)</title><rect x="99.4880%" y="325" width="0.5120%" height="15" fill="rgb(222,56,52)" fg:x="469205780" fg:w="2414499"/><text x="99.7380%" y="335.50"></text></g><g><title>[unknown] (2,414,499 samples, 0.51%)</title><rect x="99.4880%" y="309" width="0.5120%" height="15" fill="rgb(245,217,50)" fg:x="469205780" fg:w="2414499"/><text x="99.7380%" y="319.50"></text></g><g><title>[unknown] (2,414,499 samples, 0.51%)</title><rect x="99.4880%" y="293" width="0.5120%" height="15" fill="rgb(213,201,24)" fg:x="469205780" fg:w="2414499"/><text x="99.7380%" y="303.50"></text></g><g><title>[unknown] (2,414,499 samples, 0.51%)</title><rect x="99.4880%" y="277" width="0.5120%" height="15" fill="rgb(248,116,28)" fg:x="469205780" fg:w="2414499"/><text x="99.7380%" y="287.50"></text></g><g><title>[unknown] (2,414,499 samples, 0.51%)</title><rect x="99.4880%" y="261" width="0.5120%" height="15" fill="rgb(219,72,43)" fg:x="469205780" fg:w="2414499"/><text x="99.7380%" y="271.50"></text></g></svg></svg>