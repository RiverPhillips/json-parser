<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="774" onload="init(evt)" viewBox="0 0 1200 774" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="774" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="757.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="757.00"> </text><svg id="frames" x="10" width="1180" total_samples="64675697449"><g><title>CRYPTO_zalloc (13,830,183 samples, 0.02%)</title><rect x="0.0747%" y="661" width="0.0214%" height="15" fill="rgb(227,0,7)" fg:x="48333758" fg:w="13830183"/><text x="0.3247%" y="671.50"></text></g><g><title>asn1_template_noexp_d2i (27,768,697 samples, 0.04%)</title><rect x="0.0747%" y="677" width="0.0429%" height="15" fill="rgb(217,0,24)" fg:x="48333758" fg:w="27768697"/><text x="0.3247%" y="687.50"></text></g><g><title>asn1_item_embed_d2i (13,938,514 samples, 0.02%)</title><rect x="0.0961%" y="661" width="0.0216%" height="15" fill="rgb(221,193,54)" fg:x="62163941" fg:w="13938514"/><text x="0.3461%" y="671.50"></text></g><g><title>[unknown] (66,521,896 samples, 0.10%)</title><rect x="0.0149%" y="693" width="0.1029%" height="15" fill="rgb(248,212,6)" fg:x="9612744" fg:w="66521896"/><text x="0.2649%" y="703.50"></text></g><g><title>_RINvXs3d_NtNtCseteJWu6BiOQ_5serde2de5implsINtNtNtNtCsiFC1Riw8GUp_5alloc11collections5btree3map8BTreeMapNtNtNtCsbvvXMm9yrGt_5cargo4util9interning14InternedStringINtNtBN_3vec3VecB1D_EENtB9_11Deserialize11deserializeQINtNtCs68yqdWhFN9u_10serde_json2de12DeserializerNtNtB3v_4read9SliceReadEEB1J_ (6,584,490 samples, 0.01%)</title><rect x="0.1270%" y="693" width="0.0102%" height="15" fill="rgb(208,68,35)" fg:x="82146085" fg:w="6584490"/><text x="0.3770%" y="703.50"></text></g><g><title>cargo (106,913,955 samples, 0.17%)</title><rect x="0.0000%" y="709" width="0.1653%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="106913955"/><text x="0.2500%" y="719.50"></text></g><g><title>[libc.so.6] (6,995,749 samples, 0.01%)</title><rect x="0.1804%" y="629" width="0.0108%" height="15" fill="rgb(207,160,47)" fg:x="116643910" fg:w="6995749"/><text x="0.4304%" y="639.50"></text></g><g><title>__fprintf_chk (47,631,627 samples, 0.07%)</title><rect x="0.1912%" y="629" width="0.0736%" height="15" fill="rgb(228,23,34)" fg:x="123639659" fg:w="47631627"/><text x="0.4412%" y="639.50"></text></g><g><title>[libc.so.6] (44,527,537 samples, 0.07%)</title><rect x="0.1960%" y="613" width="0.0688%" height="15" fill="rgb(218,30,26)" fg:x="126743749" fg:w="44527537"/><text x="0.4460%" y="623.50"></text></g><g><title>__fread_chk (6,961,541 samples, 0.01%)</title><rect x="0.2648%" y="629" width="0.0108%" height="15" fill="rgb(220,122,19)" fg:x="171271286" fg:w="6961541"/><text x="0.5148%" y="639.50"></text></g><g><title>[libc.so.6] (6,961,541 samples, 0.01%)</title><rect x="0.2648%" y="613" width="0.0108%" height="15" fill="rgb(250,228,42)" fg:x="171271286" fg:w="6961541"/><text x="0.5148%" y="623.50"></text></g><g><title>read (6,961,541 samples, 0.01%)</title><rect x="0.2648%" y="597" width="0.0108%" height="15" fill="rgb(240,193,28)" fg:x="171271286" fg:w="6961541"/><text x="0.5148%" y="607.50"></text></g><g><title>[libc.so.6] (6,961,541 samples, 0.01%)</title><rect x="0.2648%" y="581" width="0.0108%" height="15" fill="rgb(216,20,37)" fg:x="171271286" fg:w="6961541"/><text x="0.5148%" y="591.50"></text></g><g><title>[unknown] (6,961,541 samples, 0.01%)</title><rect x="0.2648%" y="565" width="0.0108%" height="15" fill="rgb(206,188,39)" fg:x="171271286" fg:w="6961541"/><text x="0.5148%" y="575.50"></text></g><g><title>[gnuplot] (75,121,944 samples, 0.12%)</title><rect x="0.1707%" y="645" width="0.1162%" height="15" fill="rgb(217,207,13)" fg:x="110421604" fg:w="75121944"/><text x="0.4207%" y="655.50"></text></g><g><title>[gnuplot] (87,576,872 samples, 0.14%)</title><rect x="0.1653%" y="693" width="0.1354%" height="15" fill="rgb(231,73,38)" fg:x="106913955" fg:w="87576872"/><text x="0.4153%" y="703.50"></text></g><g><title>__libc_start_main (87,576,872 samples, 0.14%)</title><rect x="0.1653%" y="677" width="0.1354%" height="15" fill="rgb(225,20,46)" fg:x="106913955" fg:w="87576872"/><text x="0.4153%" y="687.50"></text></g><g><title>[libc.so.6] (84,069,223 samples, 0.13%)</title><rect x="0.1707%" y="661" width="0.1300%" height="15" fill="rgb(210,31,41)" fg:x="110421604" fg:w="84069223"/><text x="0.4207%" y="671.50"></text></g><g><title>exit (8,947,279 samples, 0.01%)</title><rect x="0.2869%" y="645" width="0.0138%" height="15" fill="rgb(221,200,47)" fg:x="185543548" fg:w="8947279"/><text x="0.5369%" y="655.50"></text></g><g><title>[libc.so.6] (8,947,279 samples, 0.01%)</title><rect x="0.2869%" y="629" width="0.0138%" height="15" fill="rgb(226,26,5)" fg:x="185543548" fg:w="8947279"/><text x="0.5369%" y="639.50"></text></g><g><title>dlopen (7,522,167 samples, 0.01%)</title><rect x="3.3981%" y="661" width="0.0116%" height="15" fill="rgb(249,33,26)" fg:x="2197715878" fg:w="7522167"/><text x="3.6481%" y="671.50"></text></g><g><title>[libc.so.6] (7,522,167 samples, 0.01%)</title><rect x="3.3981%" y="645" width="0.0116%" height="15" fill="rgb(235,183,28)" fg:x="2197715878" fg:w="7522167"/><text x="3.6481%" y="655.50"></text></g><g><title>[ld-linux-x86-64.so.2] (7,522,167 samples, 0.01%)</title><rect x="3.3981%" y="629" width="0.0116%" height="15" fill="rgb(221,5,38)" fg:x="2197715878" fg:w="7522167"/><text x="3.6481%" y="639.50"></text></g><g><title>_dl_catch_exception (7,522,167 samples, 0.01%)</title><rect x="3.3981%" y="613" width="0.0116%" height="15" fill="rgb(247,18,42)" fg:x="2197715878" fg:w="7522167"/><text x="3.6481%" y="623.50"></text></g><g><title>[libc.so.6] (7,522,167 samples, 0.01%)</title><rect x="3.3981%" y="597" width="0.0116%" height="15" fill="rgb(241,131,45)" fg:x="2197715878" fg:w="7522167"/><text x="3.6481%" y="607.50"></text></g><g><title>[ld-linux-x86-64.so.2] (7,522,167 samples, 0.01%)</title><rect x="3.3981%" y="581" width="0.0116%" height="15" fill="rgb(249,31,29)" fg:x="2197715878" fg:w="7522167"/><text x="3.6481%" y="591.50"></text></g><g><title>_dl_catch_exception (7,522,167 samples, 0.01%)</title><rect x="3.3981%" y="565" width="0.0116%" height="15" fill="rgb(225,111,53)" fg:x="2197715878" fg:w="7522167"/><text x="3.6481%" y="575.50"></text></g><g><title>[ld-linux-x86-64.so.2] (7,522,167 samples, 0.01%)</title><rect x="3.3981%" y="549" width="0.0116%" height="15" fill="rgb(238,160,17)" fg:x="2197715878" fg:w="7522167"/><text x="3.6481%" y="559.50"></text></g><g><title>_dl_catch_exception (7,522,167 samples, 0.01%)</title><rect x="3.3981%" y="533" width="0.0116%" height="15" fill="rgb(214,148,48)" fg:x="2197715878" fg:w="7522167"/><text x="3.6481%" y="543.50"></text></g><g><title>[ld-linux-x86-64.so.2] (7,522,167 samples, 0.01%)</title><rect x="3.3981%" y="517" width="0.0116%" height="15" fill="rgb(232,36,49)" fg:x="2197715878" fg:w="7522167"/><text x="3.6481%" y="527.50"></text></g><g><title>[libSDL2-2.0.so.0.3200.52] (14,870,598 samples, 0.02%)</title><rect x="3.3981%" y="677" width="0.0230%" height="15" fill="rgb(209,103,24)" fg:x="2197715878" fg:w="14870598"/><text x="3.6481%" y="687.50"></text></g><g><title>dlsym (7,348,431 samples, 0.01%)</title><rect x="3.4097%" y="661" width="0.0114%" height="15" fill="rgb(229,88,8)" fg:x="2205238045" fg:w="7348431"/><text x="3.6597%" y="671.50"></text></g><g><title>[libheif.so.1.19.7] (123,755,100 samples, 0.19%)</title><rect x="3.4270%" y="677" width="0.1913%" height="15" fill="rgb(213,181,19)" fg:x="2216404158" fg:w="123755100"/><text x="3.6770%" y="687.50"></text></g><g><title>de265_init (123,755,100 samples, 0.19%)</title><rect x="3.4270%" y="661" width="0.1913%" height="15" fill="rgb(254,191,54)" fg:x="2216404158" fg:w="123755100"/><text x="3.6770%" y="671.50"></text></g><g><title>init_scan_orders (120,246,131 samples, 0.19%)</title><rect x="3.4324%" y="645" width="0.1859%" height="15" fill="rgb(241,83,37)" fg:x="2219913127" fg:w="120246131"/><text x="3.6824%" y="655.50"></text></g><g><title>[libwx_baseu-3.2.so.0.3.0] (7,258,476 samples, 0.01%)</title><rect x="3.6244%" y="677" width="0.0112%" height="15" fill="rgb(233,36,39)" fg:x="2344094043" fg:w="7258476"/><text x="3.8744%" y="687.50"></text></g><g><title>wxGet_wxConvLocalPtr (7,258,476 samples, 0.01%)</title><rect x="3.6244%" y="661" width="0.0112%" height="15" fill="rgb(226,3,54)" fg:x="2344094043" fg:w="7258476"/><text x="3.8744%" y="671.50"></text></g><g><title>wxCSConv::wxCSConv (7,258,476 samples, 0.01%)</title><rect x="3.6244%" y="645" width="0.0112%" height="15" fill="rgb(245,192,40)" fg:x="2344094043" fg:w="7258476"/><text x="3.8744%" y="655.50"></text></g><g><title>wxCSConv::DoCreate (7,258,476 samples, 0.01%)</title><rect x="3.6244%" y="629" width="0.0112%" height="15" fill="rgb(238,167,29)" fg:x="2344094043" fg:w="7258476"/><text x="3.8744%" y="639.50"></text></g><g><title>[libc.so.6] (6,926,803 samples, 0.01%)</title><rect x="3.6461%" y="645" width="0.0107%" height="15" fill="rgb(232,182,51)" fg:x="2358115970" fg:w="6926803"/><text x="3.8961%" y="655.50"></text></g><g><title>wxClassInfo::Register (14,091,605 samples, 0.02%)</title><rect x="3.6461%" y="661" width="0.0218%" height="15" fill="rgb(231,60,39)" fg:x="2358115970" fg:w="14091605"/><text x="3.8961%" y="671.50"></text></g><g><title>[libwx_gtk3u_core-3.2.so.0.3.0] (24,277,171 samples, 0.04%)</title><rect x="3.6356%" y="677" width="0.0375%" height="15" fill="rgb(208,69,12)" fg:x="2351352519" fg:w="24277171"/><text x="3.8856%" y="687.50"></text></g><g><title>[unknown] (46,547,848 samples, 0.07%)</title><rect x="3.6731%" y="677" width="0.0720%" height="15" fill="rgb(235,93,37)" fg:x="2375629690" fg:w="46547848"/><text x="3.9231%" y="687.50"></text></g><g><title>_dl_catch_exception (59,005,796 samples, 0.09%)</title><rect x="3.7507%" y="677" width="0.0912%" height="15" fill="rgb(213,116,39)" fg:x="2425789460" fg:w="59005796"/><text x="4.0007%" y="687.50"></text></g><g><title>[ld-linux-x86-64.so.2] (59,005,796 samples, 0.09%)</title><rect x="3.7507%" y="661" width="0.0912%" height="15" fill="rgb(222,207,29)" fg:x="2425789460" fg:w="59005796"/><text x="4.0007%" y="671.50"></text></g><g><title>[unknown] (15,184,348 samples, 0.02%)</title><rect x="3.8185%" y="645" width="0.0235%" height="15" fill="rgb(206,96,30)" fg:x="2469610908" fg:w="15184348"/><text x="4.0685%" y="655.50"></text></g><g><title>gnuplot (2,381,725,487 samples, 3.68%)</title><rect x="0.1653%" y="709" width="3.6826%" height="15" fill="rgb(218,138,4)" fg:x="106913955" fg:w="2381725487"/><text x="0.4153%" y="719.50">gnup..</text></g><g><title>[ld-linux-x86-64.so.2] (2,294,148,615 samples, 3.55%)</title><rect x="0.3007%" y="693" width="3.5472%" height="15" fill="rgb(250,191,14)" fg:x="194490827" fg:w="2294148615"/><text x="0.5507%" y="703.50">[ld-..</text></g><g><title>[libc.so.6] (1,157,097,701 samples, 1.79%)</title><rect x="6.6090%" y="629" width="1.7891%" height="15" fill="rgb(239,60,40)" fg:x="4274388034" fg:w="1157097701"/><text x="6.8590%" y="639.50">[..</text></g><g><title>cfree (1,318,932,901 samples, 2.04%)</title><rect x="6.3587%" y="645" width="2.0393%" height="15" fill="rgb(206,27,48)" fg:x="4112552835" fg:w="1318932901"/><text x="6.6087%" y="655.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,004,122,953 samples, 4.64%)</title><rect x="3.8491%" y="693" width="4.6449%" height="15" fill="rgb(225,35,8)" fg:x="2489463323" fg:w="3004122953"/><text x="4.0991%" y="703.50">&lt;allo..</text></g><g><title>core::ptr::drop_in_place&lt;[json_parser::JsonValue]&gt; (2,964,148,963 samples, 4.58%)</title><rect x="3.9110%" y="677" width="4.5831%" height="15" fill="rgb(250,213,24)" fg:x="2529437313" fg:w="2964148963"/><text x="4.1610%" y="687.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;json_parser::JsonValue&gt; (2,843,672,820 samples, 4.40%)</title><rect x="4.0972%" y="661" width="4.3968%" height="15" fill="rgb(247,123,22)" fg:x="2649913456" fg:w="2843672820"/><text x="4.3472%" y="671.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,json_parser::JsonValue&gt;&gt; (62,100,540 samples, 0.10%)</title><rect x="8.3980%" y="645" width="0.0960%" height="15" fill="rgb(231,138,38)" fg:x="5431485736" fg:w="62100540"/><text x="8.6480%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,json_parser::JsonValue,std::hash::random::RandomState&gt;&gt; (62,100,540 samples, 0.10%)</title><rect x="8.3980%" y="629" width="0.0960%" height="15" fill="rgb(231,145,46)" fg:x="5431485736" fg:w="62100540"/><text x="8.6480%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,json_parser::JsonValue)&gt;&gt; (62,100,540 samples, 0.10%)</title><rect x="8.3980%" y="613" width="0.0960%" height="15" fill="rgb(251,118,11)" fg:x="5431485736" fg:w="62100540"/><text x="8.6480%" y="623.50"></text></g><g><title>cfree (62,100,540 samples, 0.10%)</title><rect x="8.3980%" y="597" width="0.0960%" height="15" fill="rgb(217,147,25)" fg:x="5431485736" fg:w="62100540"/><text x="8.6480%" y="607.50"></text></g><g><title>[libc.so.6] (42,060,969 samples, 0.07%)</title><rect x="8.4290%" y="581" width="0.0650%" height="15" fill="rgb(247,81,37)" fg:x="5451525307" fg:w="42060969"/><text x="8.6790%" y="591.50"></text></g><g><title>core::cmp::min (6,534,867 samples, 0.01%)</title><rect x="8.6075%" y="677" width="0.0101%" height="15" fill="rgb(209,12,38)" fg:x="5566930559" fg:w="6534867"/><text x="8.8575%" y="687.50"></text></g><g><title>core::cmp::Ord::min (6,534,867 samples, 0.01%)</title><rect x="8.6075%" y="661" width="0.0101%" height="15" fill="rgb(227,1,9)" fg:x="5566930559" fg:w="6534867"/><text x="8.8575%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (104,004,359 samples, 0.16%)</title><rect x="8.4941%" y="693" width="0.1608%" height="15" fill="rgb(248,47,43)" fg:x="5493586276" fg:w="104004359"/><text x="8.7441%" y="703.50"></text></g><g><title>core::hash::sip::u8to64_le (24,125,209 samples, 0.04%)</title><rect x="8.6176%" y="677" width="0.0373%" height="15" fill="rgb(221,10,30)" fg:x="5573465426" fg:w="24125209"/><text x="8.8676%" y="687.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (5,405,741,376 samples, 8.36%)</title><rect x="8.6549%" y="661" width="8.3582%" height="15" fill="rgb(210,229,1)" fg:x="5597590635" fg:w="5405741376"/><text x="8.9049%" y="671.50">hashbrown::r..</text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (5,405,741,376 samples, 8.36%)</title><rect x="8.6549%" y="645" width="8.3582%" height="15" fill="rgb(222,148,37)" fg:x="5597590635" fg:w="5405741376"/><text x="8.9049%" y="655.50">hashbrown::r..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (5,405,741,376 samples, 8.36%)</title><rect x="8.6549%" y="629" width="8.3582%" height="15" fill="rgb(234,67,33)" fg:x="5597590635" fg:w="5405741376"/><text x="8.9049%" y="639.50">core::ptr::m..</text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,json_parser::JsonValue)&gt; (5,405,741,376 samples, 8.36%)</title><rect x="8.6549%" y="613" width="8.3582%" height="15" fill="rgb(247,98,35)" fg:x="5597590635" fg:w="5405741376"/><text x="8.9049%" y="623.50">core::ptr::d..</text></g><g><title>core::ptr::drop_in_place&lt;json_parser::JsonValue&gt; (5,405,741,376 samples, 8.36%)</title><rect x="8.6549%" y="597" width="8.3582%" height="15" fill="rgb(247,138,52)" fg:x="5597590635" fg:w="5405741376"/><text x="8.9049%" y="607.50">core::ptr::d..</text></g><g><title>cfree (5,405,741,376 samples, 8.36%)</title><rect x="8.6549%" y="581" width="8.3582%" height="15" fill="rgb(213,79,30)" fg:x="5597590635" fg:w="5405741376"/><text x="8.9049%" y="591.50">cfree</text></g><g><title>[libc.so.6] (5,405,741,376 samples, 8.36%)</title><rect x="8.6549%" y="565" width="8.3582%" height="15" fill="rgb(246,177,23)" fg:x="5597590635" fg:w="5405741376"/><text x="8.9049%" y="575.50">[libc.so.6]</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,409,269,853 samples, 8.36%)</title><rect x="8.6549%" y="693" width="8.3637%" height="15" fill="rgb(230,62,27)" fg:x="5597590635" fg:w="5409269853"/><text x="8.9049%" y="703.50">&lt;hashbrown::..</text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (5,409,269,853 samples, 8.36%)</title><rect x="8.6549%" y="677" width="8.3637%" height="15" fill="rgb(216,154,8)" fg:x="5597590635" fg:w="5409269853"/><text x="8.9049%" y="687.50">hashbrown::r..</text></g><g><title>core::option::Option&lt;T&gt;::take (8,609,817 samples, 0.01%)</title><rect x="17.0185%" y="677" width="0.0133%" height="15" fill="rgb(244,35,45)" fg:x="11006860488" fg:w="8609817"/><text x="17.2685%" y="687.50"></text></g><g><title>core::mem::replace (8,609,817 samples, 0.01%)</title><rect x="17.0185%" y="661" width="0.0133%" height="15" fill="rgb(251,115,12)" fg:x="11006860488" fg:w="8609817"/><text x="17.2685%" y="671.50"></text></g><g><title>core::ptr::read (8,609,817 samples, 0.01%)</title><rect x="17.0185%" y="645" width="0.0133%" height="15" fill="rgb(240,54,50)" fg:x="11006860488" fg:w="8609817"/><text x="17.2685%" y="655.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (8,470,517 samples, 0.01%)</title><rect x="17.0319%" y="325" width="0.0131%" height="15" fill="rgb(233,84,52)" fg:x="11015470305" fg:w="8470517"/><text x="17.2819%" y="335.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (8,470,517 samples, 0.01%)</title><rect x="17.0319%" y="309" width="0.0131%" height="15" fill="rgb(207,117,47)" fg:x="11015470305" fg:w="8470517"/><text x="17.2819%" y="319.50"></text></g><g><title>exp (8,470,517 samples, 0.01%)</title><rect x="17.0319%" y="293" width="0.0131%" height="15" fill="rgb(249,43,39)" fg:x="11015470305" fg:w="8470517"/><text x="17.2819%" y="303.50"></text></g><g><title>[libm.so.6] (8,470,517 samples, 0.01%)</title><rect x="17.0319%" y="277" width="0.0131%" height="15" fill="rgb(209,38,44)" fg:x="11015470305" fg:w="8470517"/><text x="17.2819%" y="287.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (12,787,861 samples, 0.02%)</title><rect x="17.0319%" y="549" width="0.0198%" height="15" fill="rgb(236,212,23)" fg:x="11015470305" fg:w="12787861"/><text x="17.2819%" y="559.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (12,787,861 samples, 0.02%)</title><rect x="17.0319%" y="533" width="0.0198%" height="15" fill="rgb(242,79,21)" fg:x="11015470305" fg:w="12787861"/><text x="17.2819%" y="543.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (12,787,861 samples, 0.02%)</title><rect x="17.0319%" y="517" width="0.0198%" height="15" fill="rgb(211,96,35)" fg:x="11015470305" fg:w="12787861"/><text x="17.2819%" y="527.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (12,787,861 samples, 0.02%)</title><rect x="17.0319%" y="501" width="0.0198%" height="15" fill="rgb(253,215,40)" fg:x="11015470305" fg:w="12787861"/><text x="17.2819%" y="511.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (12,787,861 samples, 0.02%)</title><rect x="17.0319%" y="485" width="0.0198%" height="15" fill="rgb(211,81,21)" fg:x="11015470305" fg:w="12787861"/><text x="17.2819%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (12,787,861 samples, 0.02%)</title><rect x="17.0319%" y="469" width="0.0198%" height="15" fill="rgb(208,190,38)" fg:x="11015470305" fg:w="12787861"/><text x="17.2819%" y="479.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (12,787,861 samples, 0.02%)</title><rect x="17.0319%" y="453" width="0.0198%" height="15" fill="rgb(235,213,38)" fg:x="11015470305" fg:w="12787861"/><text x="17.2819%" y="463.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (12,787,861 samples, 0.02%)</title><rect x="17.0319%" y="437" width="0.0198%" height="15" fill="rgb(237,122,38)" fg:x="11015470305" fg:w="12787861"/><text x="17.2819%" y="447.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (12,787,861 samples, 0.02%)</title><rect x="17.0319%" y="421" width="0.0198%" height="15" fill="rgb(244,218,35)" fg:x="11015470305" fg:w="12787861"/><text x="17.2819%" y="431.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::_{{closure}} (12,787,861 samples, 0.02%)</title><rect x="17.0319%" y="405" width="0.0198%" height="15" fill="rgb(240,68,47)" fg:x="11015470305" fg:w="12787861"/><text x="17.2819%" y="415.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (12,787,861 samples, 0.02%)</title><rect x="17.0319%" y="389" width="0.0198%" height="15" fill="rgb(210,16,53)" fg:x="11015470305" fg:w="12787861"/><text x="17.2819%" y="399.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12,787,861 samples, 0.02%)</title><rect x="17.0319%" y="373" width="0.0198%" height="15" fill="rgb(235,124,12)" fg:x="11015470305" fg:w="12787861"/><text x="17.2819%" y="383.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::_{{closure}} (12,787,861 samples, 0.02%)</title><rect x="17.0319%" y="357" width="0.0198%" height="15" fill="rgb(224,169,11)" fg:x="11015470305" fg:w="12787861"/><text x="17.2819%" y="367.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (12,787,861 samples, 0.02%)</title><rect x="17.0319%" y="341" width="0.0198%" height="15" fill="rgb(250,166,2)" fg:x="11015470305" fg:w="12787861"/><text x="17.2819%" y="351.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (28,441,053 samples, 0.04%)</title><rect x="17.0185%" y="693" width="0.0440%" height="15" fill="rgb(242,216,29)" fg:x="11006860488" fg:w="28441053"/><text x="17.2685%" y="703.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (19,831,236 samples, 0.03%)</title><rect x="17.0319%" y="677" width="0.0307%" height="15" fill="rgb(230,116,27)" fg:x="11015470305" fg:w="19831236"/><text x="17.2819%" y="687.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (19,831,236 samples, 0.03%)</title><rect x="17.0319%" y="661" width="0.0307%" height="15" fill="rgb(228,99,48)" fg:x="11015470305" fg:w="19831236"/><text x="17.2819%" y="671.50"></text></g><g><title>std::panic::catch_unwind (19,831,236 samples, 0.03%)</title><rect x="17.0319%" y="645" width="0.0307%" height="15" fill="rgb(253,11,6)" fg:x="11015470305" fg:w="19831236"/><text x="17.2819%" y="655.50"></text></g><g><title>std::panicking::try (19,831,236 samples, 0.03%)</title><rect x="17.0319%" y="629" width="0.0307%" height="15" fill="rgb(247,143,39)" fg:x="11015470305" fg:w="19831236"/><text x="17.2819%" y="639.50"></text></g><g><title>std::panicking::try::do_call (19,831,236 samples, 0.03%)</title><rect x="17.0319%" y="613" width="0.0307%" height="15" fill="rgb(236,97,10)" fg:x="11015470305" fg:w="19831236"/><text x="17.2819%" y="623.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (19,831,236 samples, 0.03%)</title><rect x="17.0319%" y="597" width="0.0307%" height="15" fill="rgb(233,208,19)" fg:x="11015470305" fg:w="19831236"/><text x="17.2819%" y="607.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::_{{closure}} (19,831,236 samples, 0.03%)</title><rect x="17.0319%" y="581" width="0.0307%" height="15" fill="rgb(216,164,2)" fg:x="11015470305" fg:w="19831236"/><text x="17.2819%" y="591.50"></text></g><g><title>rayon_core::join::join_context::call_b::_{{closure}} (19,831,236 samples, 0.03%)</title><rect x="17.0319%" y="565" width="0.0307%" height="15" fill="rgb(220,129,5)" fg:x="11015470305" fg:w="19831236"/><text x="17.2819%" y="575.50"></text></g><g><title>rayon_core::join::join::call::_{{closure}} (7,043,375 samples, 0.01%)</title><rect x="17.0516%" y="549" width="0.0109%" height="15" fill="rgb(242,17,10)" fg:x="11028258166" fg:w="7043375"/><text x="17.3016%" y="559.50"></text></g><g><title>rayon::slice::quicksort::recurse::_{{closure}} (7,043,375 samples, 0.01%)</title><rect x="17.0516%" y="533" width="0.0109%" height="15" fill="rgb(242,107,0)" fg:x="11028258166" fg:w="7043375"/><text x="17.3016%" y="543.50"></text></g><g><title>rayon::slice::quicksort::recurse (7,043,375 samples, 0.01%)</title><rect x="17.0516%" y="517" width="0.0109%" height="15" fill="rgb(251,28,31)" fg:x="11028258166" fg:w="7043375"/><text x="17.3016%" y="527.50"></text></g><g><title>rayon::slice::quicksort::partition (7,043,375 samples, 0.01%)</title><rect x="17.0516%" y="501" width="0.0109%" height="15" fill="rgb(233,223,10)" fg:x="11028258166" fg:w="7043375"/><text x="17.3016%" y="511.50"></text></g><g><title>&lt;hashbrown::control::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (11,957,912 samples, 0.02%)</title><rect x="17.1414%" y="597" width="0.0185%" height="15" fill="rgb(215,21,27)" fg:x="11086322215" fg:w="11957912"/><text x="17.3914%" y="607.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (11,957,912 samples, 0.02%)</title><rect x="17.1414%" y="581" width="0.0185%" height="15" fill="rgb(232,23,21)" fg:x="11086322215" fg:w="11957912"/><text x="17.3914%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (53,462,239 samples, 0.08%)</title><rect x="17.1349%" y="629" width="0.0827%" height="15" fill="rgb(244,5,23)" fg:x="11082132267" fg:w="53462239"/><text x="17.3849%" y="639.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (49,272,291 samples, 0.08%)</title><rect x="17.1414%" y="613" width="0.0762%" height="15" fill="rgb(226,81,46)" fg:x="11086322215" fg:w="49272291"/><text x="17.3914%" y="623.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (37,314,379 samples, 0.06%)</title><rect x="17.1599%" y="597" width="0.0577%" height="15" fill="rgb(247,70,30)" fg:x="11098280127" fg:w="37314379"/><text x="17.4099%" y="607.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (37,314,379 samples, 0.06%)</title><rect x="17.1599%" y="581" width="0.0577%" height="15" fill="rgb(212,68,19)" fg:x="11098280127" fg:w="37314379"/><text x="17.4099%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (832,543,744 samples, 1.29%)</title><rect x="17.2576%" y="501" width="1.2873%" height="15" fill="rgb(240,187,13)" fg:x="11161473974" fg:w="832543744"/><text x="17.5076%" y="511.50"></text></g><g><title>alloc::alloc::dealloc (832,543,744 samples, 1.29%)</title><rect x="17.2576%" y="485" width="1.2873%" height="15" fill="rgb(223,113,26)" fg:x="11161473974" fg:w="832543744"/><text x="17.5076%" y="495.50"></text></g><g><title>__rdl_dealloc (832,543,744 samples, 1.29%)</title><rect x="17.2576%" y="469" width="1.2873%" height="15" fill="rgb(206,192,2)" fg:x="11161473974" fg:w="832543744"/><text x="17.5076%" y="479.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (832,543,744 samples, 1.29%)</title><rect x="17.2576%" y="453" width="1.2873%" height="15" fill="rgb(241,108,4)" fg:x="11161473974" fg:w="832543744"/><text x="17.5076%" y="463.50"></text></g><g><title>cfree (828,445,061 samples, 1.28%)</title><rect x="17.2639%" y="437" width="1.2809%" height="15" fill="rgb(247,173,49)" fg:x="11165572657" fg:w="828445061"/><text x="17.5139%" y="447.50"></text></g><g><title>[libc.so.6] (233,539,952 samples, 0.36%)</title><rect x="18.1838%" y="421" width="0.3611%" height="15" fill="rgb(224,114,35)" fg:x="11760477766" fg:w="233539952"/><text x="18.4338%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,725,212,660 samples, 2.67%)</title><rect x="17.2176%" y="581" width="2.6675%" height="15" fill="rgb(245,159,27)" fg:x="11135594506" fg:w="1725212660"/><text x="17.4676%" y="591.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,725,212,660 samples, 2.67%)</title><rect x="17.2176%" y="565" width="2.6675%" height="15" fill="rgb(245,172,44)" fg:x="11135594506" fg:w="1725212660"/><text x="17.4676%" y="575.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,725,212,660 samples, 2.67%)</title><rect x="17.2176%" y="549" width="2.6675%" height="15" fill="rgb(236,23,11)" fg:x="11135594506" fg:w="1725212660"/><text x="17.4676%" y="559.50">co..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,699,333,192 samples, 2.63%)</title><rect x="17.2576%" y="533" width="2.6275%" height="15" fill="rgb(205,117,38)" fg:x="11161473974" fg:w="1699333192"/><text x="17.5076%" y="543.50">&lt;a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,699,333,192 samples, 2.63%)</title><rect x="17.2576%" y="517" width="2.6275%" height="15" fill="rgb(237,72,25)" fg:x="11161473974" fg:w="1699333192"/><text x="17.5076%" y="527.50">al..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (866,789,448 samples, 1.34%)</title><rect x="18.5449%" y="501" width="1.3402%" height="15" fill="rgb(244,70,9)" fg:x="11994017718" fg:w="866789448"/><text x="18.7949%" y="511.50"></text></g><g><title>cfree (509,117,387 samples, 0.79%)</title><rect x="20.1704%" y="565" width="0.7872%" height="15" fill="rgb(217,125,39)" fg:x="13045357555" fg:w="509117387"/><text x="20.4204%" y="575.50"></text></g><g><title>[libc.so.6] (281,217,474 samples, 0.43%)</title><rect x="20.5228%" y="549" width="0.4348%" height="15" fill="rgb(235,36,10)" fg:x="13273257468" fg:w="281217474"/><text x="20.7728%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (26,272,486 samples, 0.04%)</title><rect x="20.9576%" y="565" width="0.0406%" height="15" fill="rgb(251,123,47)" fg:x="13554474942" fg:w="26272486"/><text x="21.2076%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (26,272,486 samples, 0.04%)</title><rect x="20.9576%" y="549" width="0.0406%" height="15" fill="rgb(221,13,13)" fg:x="13554474942" fg:w="26272486"/><text x="21.2076%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (26,272,486 samples, 0.04%)</title><rect x="20.9576%" y="533" width="0.0406%" height="15" fill="rgb(238,131,9)" fg:x="13554474942" fg:w="26272486"/><text x="21.2076%" y="543.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (26,272,486 samples, 0.04%)</title><rect x="20.9576%" y="517" width="0.0406%" height="15" fill="rgb(211,50,8)" fg:x="13554474942" fg:w="26272486"/><text x="21.2076%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (26,272,486 samples, 0.04%)</title><rect x="20.9576%" y="501" width="0.0406%" height="15" fill="rgb(245,182,24)" fg:x="13554474942" fg:w="26272486"/><text x="21.2076%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (26,272,486 samples, 0.04%)</title><rect x="20.9576%" y="485" width="0.0406%" height="15" fill="rgb(242,14,37)" fg:x="13554474942" fg:w="26272486"/><text x="21.2076%" y="495.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (2,453,405,764 samples, 3.79%)</title><rect x="17.2176%" y="629" width="3.7934%" height="15" fill="rgb(246,228,12)" fg:x="11135594506" fg:w="2453405764"/><text x="17.4676%" y="639.50">hash..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (2,453,405,764 samples, 3.79%)</title><rect x="17.2176%" y="613" width="3.7934%" height="15" fill="rgb(213,55,15)" fg:x="11135594506" fg:w="2453405764"/><text x="17.4676%" y="623.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,json_parser::JsonValue)&gt; (2,453,405,764 samples, 3.79%)</title><rect x="17.2176%" y="597" width="3.7934%" height="15" fill="rgb(209,9,3)" fg:x="11135594506" fg:w="2453405764"/><text x="17.4676%" y="607.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;json_parser::JsonValue&gt; (728,193,104 samples, 1.13%)</title><rect x="19.8851%" y="581" width="1.1259%" height="15" fill="rgb(230,59,30)" fg:x="12860807166" fg:w="728193104"/><text x="20.1351%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;json_parser::JsonValue&gt;&gt; (8,252,842 samples, 0.01%)</title><rect x="20.9982%" y="565" width="0.0128%" height="15" fill="rgb(209,121,21)" fg:x="13580747428" fg:w="8252842"/><text x="21.2482%" y="575.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (450,638,810 samples, 0.70%)</title><rect x="21.0110%" y="613" width="0.6968%" height="15" fill="rgb(220,109,13)" fg:x="13589000270" fg:w="450638810"/><text x="21.2610%" y="623.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_full (446,497,267 samples, 0.69%)</title><rect x="21.0174%" y="597" width="0.6904%" height="15" fill="rgb(232,18,1)" fg:x="13593141813" fg:w="446497267"/><text x="21.2674%" y="607.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_empty_or_deleted (442,303,939 samples, 0.68%)</title><rect x="21.0239%" y="581" width="0.6839%" height="15" fill="rgb(215,41,42)" fg:x="13597335141" fg:w="442303939"/><text x="21.2739%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (442,303,939 samples, 0.68%)</title><rect x="21.0239%" y="565" width="0.6839%" height="15" fill="rgb(224,123,36)" fg:x="13597335141" fg:w="442303939"/><text x="21.2739%" y="575.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (2,973,432,644 samples, 4.60%)</title><rect x="17.1235%" y="645" width="4.5974%" height="15" fill="rgb(240,125,3)" fg:x="11074716912" fg:w="2973432644"/><text x="17.3735%" y="655.50">hashb..</text></g><g><title>hashbrown::raw::RawTableInner::iter (459,149,286 samples, 0.71%)</title><rect x="21.0110%" y="629" width="0.7099%" height="15" fill="rgb(205,98,50)" fg:x="13589000270" fg:w="459149286"/><text x="21.2610%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner::data_end (8,510,476 samples, 0.01%)</title><rect x="21.7078%" y="613" width="0.0132%" height="15" fill="rgb(205,185,37)" fg:x="14039639080" fg:w="8510476"/><text x="21.9578%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (15,455,312 samples, 0.02%)</title><rect x="21.7209%" y="629" width="0.0239%" height="15" fill="rgb(238,207,15)" fg:x="14048149556" fg:w="15455312"/><text x="21.9709%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,992,226,265 samples, 4.63%)</title><rect x="17.1235%" y="677" width="4.6265%" height="15" fill="rgb(213,199,42)" fg:x="11074716912" fg:w="2992226265"/><text x="17.3735%" y="687.50">&lt;hash..</text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (2,992,226,265 samples, 4.63%)</title><rect x="17.1235%" y="661" width="4.6265%" height="15" fill="rgb(235,201,11)" fg:x="11074716912" fg:w="2992226265"/><text x="17.3735%" y="671.50">hashb..</text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (18,793,621 samples, 0.03%)</title><rect x="21.7209%" y="645" width="0.0291%" height="15" fill="rgb(207,46,11)" fg:x="14048149556" fg:w="18793621"/><text x="21.9709%" y="655.50"></text></g><g><title>[unknown] (30,832,611 samples, 0.05%)</title><rect x="21.7500%" y="677" width="0.0477%" height="15" fill="rgb(241,35,35)" fg:x="14066943177" fg:w="30832611"/><text x="22.0000%" y="687.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (938,012,926 samples, 1.45%)</title><rect x="22.8096%" y="645" width="1.4503%" height="15" fill="rgb(243,32,47)" fg:x="14752270431" fg:w="938012926"/><text x="23.0596%" y="655.50"></text></g><g><title>&lt;json_parser::Token as core::cmp::PartialEq&gt;::eq (13,355,319 samples, 0.02%)</title><rect x="24.2599%" y="645" width="0.0206%" height="15" fill="rgb(247,202,23)" fg:x="15690283357" fg:w="13355319"/><text x="24.5099%" y="655.50"></text></g><g><title>json_parser::Parser::parse (1,609,078,497 samples, 2.49%)</title><rect x="21.7980%" y="677" width="2.4879%" height="15" fill="rgb(219,102,11)" fg:x="14098002025" fg:w="1609078497"/><text x="22.0480%" y="687.50">js..</text></g><g><title>json_parser::Parser::parse_array (1,573,540,995 samples, 2.43%)</title><rect x="21.8529%" y="661" width="2.4330%" height="15" fill="rgb(243,110,44)" fg:x="14133539527" fg:w="1573540995"/><text x="22.1029%" y="671.50">js..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (24,918,407 samples, 0.04%)</title><rect x="24.2859%" y="677" width="0.0385%" height="15" fill="rgb(222,74,54)" fg:x="15707080522" fg:w="24918407"/><text x="24.5359%" y="687.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (24,918,407 samples, 0.04%)</title><rect x="24.2859%" y="661" width="0.0385%" height="15" fill="rgb(216,99,12)" fg:x="15707080522" fg:w="24918407"/><text x="24.5359%" y="671.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (24,918,407 samples, 0.04%)</title><rect x="24.2859%" y="645" width="0.0385%" height="15" fill="rgb(226,22,26)" fg:x="15707080522" fg:w="24918407"/><text x="24.5359%" y="655.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (24,918,407 samples, 0.04%)</title><rect x="24.2859%" y="629" width="0.0385%" height="15" fill="rgb(217,163,10)" fg:x="15707080522" fg:w="24918407"/><text x="24.5359%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (24,918,407 samples, 0.04%)</title><rect x="24.2859%" y="613" width="0.0385%" height="15" fill="rgb(213,25,53)" fg:x="15707080522" fg:w="24918407"/><text x="24.5359%" y="623.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (24,918,407 samples, 0.04%)</title><rect x="24.2859%" y="597" width="0.0385%" height="15" fill="rgb(252,105,26)" fg:x="15707080522" fg:w="24918407"/><text x="24.5359%" y="607.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (24,918,407 samples, 0.04%)</title><rect x="24.2859%" y="581" width="0.0385%" height="15" fill="rgb(220,39,43)" fg:x="15707080522" fg:w="24918407"/><text x="24.5359%" y="591.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (24,918,407 samples, 0.04%)</title><rect x="24.2859%" y="565" width="0.0385%" height="15" fill="rgb(229,68,48)" fg:x="15707080522" fg:w="24918407"/><text x="24.5359%" y="575.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::_{{closure}} (24,918,407 samples, 0.04%)</title><rect x="24.2859%" y="549" width="0.0385%" height="15" fill="rgb(252,8,32)" fg:x="15707080522" fg:w="24918407"/><text x="24.5359%" y="559.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (24,918,407 samples, 0.04%)</title><rect x="24.2859%" y="533" width="0.0385%" height="15" fill="rgb(223,20,43)" fg:x="15707080522" fg:w="24918407"/><text x="24.5359%" y="543.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (24,918,407 samples, 0.04%)</title><rect x="24.2859%" y="517" width="0.0385%" height="15" fill="rgb(229,81,49)" fg:x="15707080522" fg:w="24918407"/><text x="24.5359%" y="527.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::_{{closure}} (16,950,027 samples, 0.03%)</title><rect x="24.2982%" y="501" width="0.0262%" height="15" fill="rgb(236,28,36)" fg:x="15715048902" fg:w="16950027"/><text x="24.5482%" y="511.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (16,950,027 samples, 0.03%)</title><rect x="24.2982%" y="485" width="0.0262%" height="15" fill="rgb(249,185,26)" fg:x="15715048902" fg:w="16950027"/><text x="24.5482%" y="495.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (16,950,027 samples, 0.03%)</title><rect x="24.2982%" y="469" width="0.0262%" height="15" fill="rgb(249,174,33)" fg:x="15715048902" fg:w="16950027"/><text x="24.5482%" y="479.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (16,950,027 samples, 0.03%)</title><rect x="24.2982%" y="453" width="0.0262%" height="15" fill="rgb(233,201,37)" fg:x="15715048902" fg:w="16950027"/><text x="24.5482%" y="463.50"></text></g><g><title>exp (16,950,027 samples, 0.03%)</title><rect x="24.2982%" y="437" width="0.0262%" height="15" fill="rgb(221,78,26)" fg:x="15715048902" fg:w="16950027"/><text x="24.5482%" y="447.50"></text></g><g><title>[libm.so.6] (12,875,462 samples, 0.02%)</title><rect x="24.3045%" y="421" width="0.0199%" height="15" fill="rgb(250,127,30)" fg:x="15719123467" fg:w="12875462"/><text x="24.5545%" y="431.50"></text></g><g><title>[libc.so.6] (4,694,929,948 samples, 7.26%)</title><rect x="17.0654%" y="693" width="7.2592%" height="15" fill="rgb(230,49,44)" fg:x="11037137497" fg:w="4694929948"/><text x="17.3154%" y="703.50">[libc.so.6]</text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (109,670,408 samples, 0.17%)</title><rect x="24.3380%" y="469" width="0.1696%" height="15" fill="rgb(229,67,23)" fg:x="15740746474" fg:w="109670408"/><text x="24.5880%" y="479.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (109,670,408 samples, 0.17%)</title><rect x="24.3380%" y="453" width="0.1696%" height="15" fill="rgb(249,83,47)" fg:x="15740746474" fg:w="109670408"/><text x="24.5880%" y="463.50"></text></g><g><title>exp (109,670,408 samples, 0.17%)</title><rect x="24.3380%" y="437" width="0.1696%" height="15" fill="rgb(215,43,3)" fg:x="15740746474" fg:w="109670408"/><text x="24.5880%" y="447.50"></text></g><g><title>[libm.so.6] (83,942,013 samples, 0.13%)</title><rect x="24.3777%" y="421" width="0.1298%" height="15" fill="rgb(238,154,13)" fg:x="15766474869" fg:w="83942013"/><text x="24.6277%" y="431.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (164,763,700 samples, 0.25%)</title><rect x="24.3380%" y="485" width="0.2548%" height="15" fill="rgb(219,56,2)" fg:x="15740746474" fg:w="164763700"/><text x="24.5880%" y="495.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::sqrt (55,093,292 samples, 0.09%)</title><rect x="24.5075%" y="469" width="0.0852%" height="15" fill="rgb(233,0,4)" fg:x="15850416882" fg:w="55093292"/><text x="24.7575%" y="479.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::sqrt (55,093,292 samples, 0.09%)</title><rect x="24.5075%" y="453" width="0.0852%" height="15" fill="rgb(235,30,7)" fg:x="15850416882" fg:w="55093292"/><text x="24.7575%" y="463.50"></text></g><g><title>[my_benchmark-3737c2aed686ac35] (199,300,787 samples, 0.31%)</title><rect x="24.3245%" y="693" width="0.3082%" height="15" fill="rgb(250,79,13)" fg:x="15732067445" fg:w="199300787"/><text x="24.5745%" y="703.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (199,300,787 samples, 0.31%)</title><rect x="24.3245%" y="677" width="0.3082%" height="15" fill="rgb(211,146,34)" fg:x="15732067445" fg:w="199300787"/><text x="24.5745%" y="687.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (199,300,787 samples, 0.31%)</title><rect x="24.3245%" y="661" width="0.3082%" height="15" fill="rgb(228,22,38)" fg:x="15732067445" fg:w="199300787"/><text x="24.5745%" y="671.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (199,300,787 samples, 0.31%)</title><rect x="24.3245%" y="645" width="0.3082%" height="15" fill="rgb(235,168,5)" fg:x="15732067445" fg:w="199300787"/><text x="24.5745%" y="655.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (199,300,787 samples, 0.31%)</title><rect x="24.3245%" y="629" width="0.3082%" height="15" fill="rgb(221,155,16)" fg:x="15732067445" fg:w="199300787"/><text x="24.5745%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (199,300,787 samples, 0.31%)</title><rect x="24.3245%" y="613" width="0.3082%" height="15" fill="rgb(215,215,53)" fg:x="15732067445" fg:w="199300787"/><text x="24.5745%" y="623.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (199,300,787 samples, 0.31%)</title><rect x="24.3245%" y="597" width="0.3082%" height="15" fill="rgb(223,4,10)" fg:x="15732067445" fg:w="199300787"/><text x="24.5745%" y="607.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (199,300,787 samples, 0.31%)</title><rect x="24.3245%" y="581" width="0.3082%" height="15" fill="rgb(234,103,6)" fg:x="15732067445" fg:w="199300787"/><text x="24.5745%" y="591.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (199,300,787 samples, 0.31%)</title><rect x="24.3245%" y="565" width="0.3082%" height="15" fill="rgb(227,97,0)" fg:x="15732067445" fg:w="199300787"/><text x="24.5745%" y="575.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::_{{closure}} (199,300,787 samples, 0.31%)</title><rect x="24.3245%" y="549" width="0.3082%" height="15" fill="rgb(234,150,53)" fg:x="15732067445" fg:w="199300787"/><text x="24.5745%" y="559.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (199,300,787 samples, 0.31%)</title><rect x="24.3245%" y="533" width="0.3082%" height="15" fill="rgb(228,201,54)" fg:x="15732067445" fg:w="199300787"/><text x="24.5745%" y="543.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (199,300,787 samples, 0.31%)</title><rect x="24.3245%" y="517" width="0.3082%" height="15" fill="rgb(222,22,37)" fg:x="15732067445" fg:w="199300787"/><text x="24.5745%" y="527.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::_{{closure}} (190,621,758 samples, 0.29%)</title><rect x="24.3380%" y="501" width="0.2947%" height="15" fill="rgb(237,53,32)" fg:x="15740746474" fg:w="190621758"/><text x="24.5880%" y="511.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (25,858,058 samples, 0.04%)</title><rect x="24.5927%" y="485" width="0.0400%" height="15" fill="rgb(233,25,53)" fg:x="15905510174" fg:w="25858058"/><text x="24.8427%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8,157,458 samples, 0.01%)</title><rect x="24.6433%" y="677" width="0.0126%" height="15" fill="rgb(210,40,34)" fg:x="15938238612" fg:w="8157458"/><text x="24.8933%" y="687.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (12,561,125 samples, 0.02%)</title><rect x="24.8560%" y="645" width="0.0194%" height="15" fill="rgb(241,220,44)" fg:x="16075770639" fg:w="12561125"/><text x="25.1060%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (31,336,414 samples, 0.05%)</title><rect x="24.8367%" y="661" width="0.0485%" height="15" fill="rgb(235,28,35)" fg:x="16063317191" fg:w="31336414"/><text x="25.0867%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (261,096,822 samples, 0.40%)</title><rect x="24.6559%" y="677" width="0.4037%" height="15" fill="rgb(210,56,17)" fg:x="15946396070" fg:w="261096822"/><text x="24.9059%" y="687.50"></text></g><g><title>core::hash::sip::u8to64_le (107,312,136 samples, 0.17%)</title><rect x="24.8937%" y="661" width="0.1659%" height="15" fill="rgb(224,130,29)" fg:x="16100180756" fg:w="107312136"/><text x="25.1437%" y="671.50"></text></g><g><title>&lt;hashbrown::control::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (12,708,354 samples, 0.02%)</title><rect x="25.0773%" y="597" width="0.0196%" height="15" fill="rgb(235,212,8)" fg:x="16218936201" fg:w="12708354"/><text x="25.3273%" y="607.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (12,708,354 samples, 0.02%)</title><rect x="25.0773%" y="581" width="0.0196%" height="15" fill="rgb(223,33,50)" fg:x="16218936201" fg:w="12708354"/><text x="25.3273%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (28,331,175 samples, 0.04%)</title><rect x="25.0773%" y="629" width="0.0438%" height="15" fill="rgb(219,149,13)" fg:x="16218936201" fg:w="28331175"/><text x="25.3273%" y="639.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (28,331,175 samples, 0.04%)</title><rect x="25.0773%" y="613" width="0.0438%" height="15" fill="rgb(250,156,29)" fg:x="16218936201" fg:w="28331175"/><text x="25.3273%" y="623.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (15,622,821 samples, 0.02%)</title><rect x="25.0970%" y="597" width="0.0242%" height="15" fill="rgb(216,193,19)" fg:x="16231644555" fg:w="15622821"/><text x="25.3470%" y="607.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (15,622,821 samples, 0.02%)</title><rect x="25.0970%" y="581" width="0.0242%" height="15" fill="rgb(216,135,14)" fg:x="16231644555" fg:w="15622821"/><text x="25.3470%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (350,595,550 samples, 0.54%)</title><rect x="25.1262%" y="501" width="0.5421%" height="15" fill="rgb(241,47,5)" fg:x="16250533807" fg:w="350595550"/><text x="25.3762%" y="511.50"></text></g><g><title>alloc::alloc::dealloc (350,595,550 samples, 0.54%)</title><rect x="25.1262%" y="485" width="0.5421%" height="15" fill="rgb(233,42,35)" fg:x="16250533807" fg:w="350595550"/><text x="25.3762%" y="495.50"></text></g><g><title>__rdl_dealloc (350,595,550 samples, 0.54%)</title><rect x="25.1262%" y="469" width="0.5421%" height="15" fill="rgb(231,13,6)" fg:x="16250533807" fg:w="350595550"/><text x="25.3762%" y="479.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (350,595,550 samples, 0.54%)</title><rect x="25.1262%" y="453" width="0.5421%" height="15" fill="rgb(207,181,40)" fg:x="16250533807" fg:w="350595550"/><text x="25.3762%" y="463.50"></text></g><g><title>cfree (350,595,550 samples, 0.54%)</title><rect x="25.1262%" y="437" width="0.5421%" height="15" fill="rgb(254,173,49)" fg:x="16250533807" fg:w="350595550"/><text x="25.3762%" y="447.50"></text></g><g><title>[libc.so.6] (36,243,023 samples, 0.06%)</title><rect x="25.6122%" y="421" width="0.0560%" height="15" fill="rgb(221,1,38)" fg:x="16564886334" fg:w="36243023"/><text x="25.8622%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (412,043,832 samples, 0.64%)</title><rect x="25.1211%" y="581" width="0.6371%" height="15" fill="rgb(206,124,46)" fg:x="16247267376" fg:w="412043832"/><text x="25.3711%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (412,043,832 samples, 0.64%)</title><rect x="25.1211%" y="565" width="0.6371%" height="15" fill="rgb(249,21,11)" fg:x="16247267376" fg:w="412043832"/><text x="25.3711%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (412,043,832 samples, 0.64%)</title><rect x="25.1211%" y="549" width="0.6371%" height="15" fill="rgb(222,201,40)" fg:x="16247267376" fg:w="412043832"/><text x="25.3711%" y="559.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (408,777,401 samples, 0.63%)</title><rect x="25.1262%" y="533" width="0.6320%" height="15" fill="rgb(235,61,29)" fg:x="16250533807" fg:w="408777401"/><text x="25.3762%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (408,777,401 samples, 0.63%)</title><rect x="25.1262%" y="517" width="0.6320%" height="15" fill="rgb(219,207,3)" fg:x="16250533807" fg:w="408777401"/><text x="25.3762%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (58,181,851 samples, 0.09%)</title><rect x="25.6683%" y="501" width="0.0900%" height="15" fill="rgb(222,56,46)" fg:x="16601129357" fg:w="58181851"/><text x="25.9183%" y="511.50"></text></g><g><title>cfree (59,043,168 samples, 0.09%)</title><rect x="25.7894%" y="565" width="0.0913%" height="15" fill="rgb(239,76,54)" fg:x="16679481445" fg:w="59043168"/><text x="26.0394%" y="575.50"></text></g><g><title>[libc.so.6] (15,417,490 samples, 0.02%)</title><rect x="25.8569%" y="549" width="0.0238%" height="15" fill="rgb(231,124,27)" fg:x="16723107123" fg:w="15417490"/><text x="26.1069%" y="559.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (665,297,927 samples, 1.03%)</title><rect x="25.1211%" y="629" width="1.0287%" height="15" fill="rgb(249,195,6)" fg:x="16247267376" fg:w="665297927"/><text x="25.3711%" y="639.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (665,297,927 samples, 1.03%)</title><rect x="25.1211%" y="613" width="1.0287%" height="15" fill="rgb(237,174,47)" fg:x="16247267376" fg:w="665297927"/><text x="25.3711%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,json_parser::JsonValue)&gt; (665,297,927 samples, 1.03%)</title><rect x="25.1211%" y="597" width="1.0287%" height="15" fill="rgb(206,201,31)" fg:x="16247267376" fg:w="665297927"/><text x="25.3711%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;json_parser::JsonValue&gt; (253,254,095 samples, 0.39%)</title><rect x="25.7582%" y="581" width="0.3916%" height="15" fill="rgb(231,57,52)" fg:x="16659311208" fg:w="253254095"/><text x="26.0082%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,json_parser::JsonValue&gt;&gt; (174,040,690 samples, 0.27%)</title><rect x="25.8807%" y="565" width="0.2691%" height="15" fill="rgb(248,177,22)" fg:x="16738524613" fg:w="174040690"/><text x="26.1307%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,json_parser::JsonValue,std::hash::random::RandomState&gt;&gt; (174,040,690 samples, 0.27%)</title><rect x="25.8807%" y="549" width="0.2691%" height="15" fill="rgb(215,211,37)" fg:x="16738524613" fg:w="174040690"/><text x="26.1307%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,json_parser::JsonValue)&gt;&gt; (174,040,690 samples, 0.27%)</title><rect x="25.8807%" y="533" width="0.2691%" height="15" fill="rgb(241,128,51)" fg:x="16738524613" fg:w="174040690"/><text x="26.1307%" y="543.50"></text></g><g><title>cfree (174,040,690 samples, 0.27%)</title><rect x="25.8807%" y="517" width="0.2691%" height="15" fill="rgb(227,165,31)" fg:x="16738524613" fg:w="174040690"/><text x="26.1307%" y="527.50"></text></g><g><title>[libc.so.6] (94,077,942 samples, 0.15%)</title><rect x="26.0043%" y="501" width="0.1455%" height="15" fill="rgb(228,167,24)" fg:x="16818487361" fg:w="94077942"/><text x="26.2543%" y="511.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (777,994,534 samples, 1.20%)</title><rect x="25.0655%" y="645" width="1.2029%" height="15" fill="rgb(228,143,12)" fg:x="16211302592" fg:w="777994534"/><text x="25.3155%" y="655.50"></text></g><g><title>hashbrown::raw::RawTableInner::iter (76,731,823 samples, 0.12%)</title><rect x="26.1498%" y="629" width="0.1186%" height="15" fill="rgb(249,149,8)" fg:x="16912565303" fg:w="76731823"/><text x="26.3998%" y="639.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (76,731,823 samples, 0.12%)</title><rect x="26.1498%" y="613" width="0.1186%" height="15" fill="rgb(243,35,44)" fg:x="16912565303" fg:w="76731823"/><text x="26.3998%" y="623.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_full (72,984,020 samples, 0.11%)</title><rect x="26.1556%" y="597" width="0.1128%" height="15" fill="rgb(246,89,9)" fg:x="16916313106" fg:w="72984020"/><text x="26.4056%" y="607.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_empty_or_deleted (69,015,977 samples, 0.11%)</title><rect x="26.1617%" y="581" width="0.1067%" height="15" fill="rgb(233,213,13)" fg:x="16920281149" fg:w="69015977"/><text x="26.4117%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (69,015,977 samples, 0.11%)</title><rect x="26.1617%" y="565" width="0.1067%" height="15" fill="rgb(233,141,41)" fg:x="16920281149" fg:w="69015977"/><text x="26.4117%" y="575.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (7,940,001 samples, 0.01%)</title><rect x="26.2746%" y="597" width="0.0123%" height="15" fill="rgb(239,167,4)" fg:x="16993272931" fg:w="7940001"/><text x="26.5246%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (15,884,680 samples, 0.02%)</title><rect x="26.2684%" y="645" width="0.0246%" height="15" fill="rgb(209,217,16)" fg:x="16989297126" fg:w="15884680"/><text x="26.5184%" y="655.50"></text></g><g><title>hashbrown::raw::RawTableInner::allocation_info (15,884,680 samples, 0.02%)</title><rect x="26.2684%" y="629" width="0.0246%" height="15" fill="rgb(219,88,35)" fg:x="16989297126" fg:w="15884680"/><text x="26.5184%" y="639.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (11,908,875 samples, 0.02%)</title><rect x="26.2746%" y="613" width="0.0184%" height="15" fill="rgb(220,193,23)" fg:x="16993272931" fg:w="11908875"/><text x="26.5246%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (801,478,108 samples, 1.24%)</title><rect x="25.0596%" y="677" width="1.2392%" height="15" fill="rgb(230,90,52)" fg:x="16207492892" fg:w="801478108"/><text x="25.3096%" y="687.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (801,478,108 samples, 1.24%)</title><rect x="25.0596%" y="661" width="1.2392%" height="15" fill="rgb(252,106,19)" fg:x="16207492892" fg:w="801478108"/><text x="25.3096%" y="671.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (23,218,444 samples, 0.04%)</title><rect x="26.2989%" y="325" width="0.0359%" height="15" fill="rgb(206,74,20)" fg:x="17008971000" fg:w="23218444"/><text x="26.5489%" y="335.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (23,218,444 samples, 0.04%)</title><rect x="26.2989%" y="309" width="0.0359%" height="15" fill="rgb(230,138,44)" fg:x="17008971000" fg:w="23218444"/><text x="26.5489%" y="319.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (23,218,444 samples, 0.04%)</title><rect x="26.2989%" y="293" width="0.0359%" height="15" fill="rgb(235,182,43)" fg:x="17008971000" fg:w="23218444"/><text x="26.5489%" y="303.50"></text></g><g><title>exp (23,218,444 samples, 0.04%)</title><rect x="26.2989%" y="277" width="0.0359%" height="15" fill="rgb(242,16,51)" fg:x="17008971000" fg:w="23218444"/><text x="26.5489%" y="287.50"></text></g><g><title>[libm.so.6] (14,993,550 samples, 0.02%)</title><rect x="26.3116%" y="261" width="0.0232%" height="15" fill="rgb(248,9,4)" fg:x="17017195894" fg:w="14993550"/><text x="26.5616%" y="271.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (30,497,733 samples, 0.05%)</title><rect x="26.2989%" y="677" width="0.0472%" height="15" fill="rgb(210,31,22)" fg:x="17008971000" fg:w="30497733"/><text x="26.5489%" y="687.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (30,497,733 samples, 0.05%)</title><rect x="26.2989%" y="661" width="0.0472%" height="15" fill="rgb(239,54,39)" fg:x="17008971000" fg:w="30497733"/><text x="26.5489%" y="671.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (30,497,733 samples, 0.05%)</title><rect x="26.2989%" y="645" width="0.0472%" height="15" fill="rgb(230,99,41)" fg:x="17008971000" fg:w="30497733"/><text x="26.5489%" y="655.50"></text></g><g><title>std::panic::catch_unwind (30,497,733 samples, 0.05%)</title><rect x="26.2989%" y="629" width="0.0472%" height="15" fill="rgb(253,106,12)" fg:x="17008971000" fg:w="30497733"/><text x="26.5489%" y="639.50"></text></g><g><title>std::panicking::try (30,497,733 samples, 0.05%)</title><rect x="26.2989%" y="613" width="0.0472%" height="15" fill="rgb(213,46,41)" fg:x="17008971000" fg:w="30497733"/><text x="26.5489%" y="623.50"></text></g><g><title>std::panicking::try::do_call (30,497,733 samples, 0.05%)</title><rect x="26.2989%" y="597" width="0.0472%" height="15" fill="rgb(215,133,35)" fg:x="17008971000" fg:w="30497733"/><text x="26.5489%" y="607.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (30,497,733 samples, 0.05%)</title><rect x="26.2989%" y="581" width="0.0472%" height="15" fill="rgb(213,28,5)" fg:x="17008971000" fg:w="30497733"/><text x="26.5489%" y="591.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::_{{closure}} (30,497,733 samples, 0.05%)</title><rect x="26.2989%" y="565" width="0.0472%" height="15" fill="rgb(215,77,49)" fg:x="17008971000" fg:w="30497733"/><text x="26.5489%" y="575.50"></text></g><g><title>rayon_core::join::join_context::call_b::_{{closure}} (30,497,733 samples, 0.05%)</title><rect x="26.2989%" y="549" width="0.0472%" height="15" fill="rgb(248,100,22)" fg:x="17008971000" fg:w="30497733"/><text x="26.5489%" y="559.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (30,497,733 samples, 0.05%)</title><rect x="26.2989%" y="533" width="0.0472%" height="15" fill="rgb(208,67,9)" fg:x="17008971000" fg:w="30497733"/><text x="26.5489%" y="543.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (30,497,733 samples, 0.05%)</title><rect x="26.2989%" y="517" width="0.0472%" height="15" fill="rgb(219,133,21)" fg:x="17008971000" fg:w="30497733"/><text x="26.5489%" y="527.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (30,497,733 samples, 0.05%)</title><rect x="26.2989%" y="501" width="0.0472%" height="15" fill="rgb(246,46,29)" fg:x="17008971000" fg:w="30497733"/><text x="26.5489%" y="511.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (30,497,733 samples, 0.05%)</title><rect x="26.2989%" y="485" width="0.0472%" height="15" fill="rgb(246,185,52)" fg:x="17008971000" fg:w="30497733"/><text x="26.5489%" y="495.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (30,497,733 samples, 0.05%)</title><rect x="26.2989%" y="469" width="0.0472%" height="15" fill="rgb(252,136,11)" fg:x="17008971000" fg:w="30497733"/><text x="26.5489%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (30,497,733 samples, 0.05%)</title><rect x="26.2989%" y="453" width="0.0472%" height="15" fill="rgb(219,138,53)" fg:x="17008971000" fg:w="30497733"/><text x="26.5489%" y="463.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (30,497,733 samples, 0.05%)</title><rect x="26.2989%" y="437" width="0.0472%" height="15" fill="rgb(211,51,23)" fg:x="17008971000" fg:w="30497733"/><text x="26.5489%" y="447.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (30,497,733 samples, 0.05%)</title><rect x="26.2989%" y="421" width="0.0472%" height="15" fill="rgb(247,221,28)" fg:x="17008971000" fg:w="30497733"/><text x="26.5489%" y="431.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (30,497,733 samples, 0.05%)</title><rect x="26.2989%" y="405" width="0.0472%" height="15" fill="rgb(251,222,45)" fg:x="17008971000" fg:w="30497733"/><text x="26.5489%" y="415.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::_{{closure}} (30,497,733 samples, 0.05%)</title><rect x="26.2989%" y="389" width="0.0472%" height="15" fill="rgb(217,162,53)" fg:x="17008971000" fg:w="30497733"/><text x="26.5489%" y="399.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (30,497,733 samples, 0.05%)</title><rect x="26.2989%" y="373" width="0.0472%" height="15" fill="rgb(229,93,14)" fg:x="17008971000" fg:w="30497733"/><text x="26.5489%" y="383.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (30,497,733 samples, 0.05%)</title><rect x="26.2989%" y="357" width="0.0472%" height="15" fill="rgb(209,67,49)" fg:x="17008971000" fg:w="30497733"/><text x="26.5489%" y="367.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::_{{closure}} (30,497,733 samples, 0.05%)</title><rect x="26.2989%" y="341" width="0.0472%" height="15" fill="rgb(213,87,29)" fg:x="17008971000" fg:w="30497733"/><text x="26.5489%" y="351.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (7,279,289 samples, 0.01%)</title><rect x="26.3348%" y="325" width="0.0113%" height="15" fill="rgb(205,151,52)" fg:x="17032189444" fg:w="7279289"/><text x="26.5848%" y="335.50"></text></g><g><title>[unknown] (302,290,126 samples, 0.47%)</title><rect x="26.3460%" y="661" width="0.4674%" height="15" fill="rgb(253,215,39)" fg:x="17039468733" fg:w="302290126"/><text x="26.5960%" y="671.50"></text></g><g><title>json_parser::Parser::parse (563,384,859 samples, 0.87%)</title><rect x="26.8134%" y="661" width="0.8711%" height="15" fill="rgb(221,220,41)" fg:x="17341758859" fg:w="563384859"/><text x="27.0634%" y="671.50"></text></g><g><title>json_parser::Parser::parse_array (563,384,859 samples, 0.87%)</title><rect x="26.8134%" y="645" width="0.8711%" height="15" fill="rgb(218,133,21)" fg:x="17341758859" fg:w="563384859"/><text x="27.0634%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (517,134,647 samples, 0.80%)</title><rect x="26.8849%" y="629" width="0.7996%" height="15" fill="rgb(221,193,43)" fg:x="17388009071" fg:w="517134647"/><text x="27.1349%" y="639.50"></text></g><g><title>core::ptr::write (513,084,823 samples, 0.79%)</title><rect x="26.8912%" y="613" width="0.7933%" height="15" fill="rgb(240,128,52)" fg:x="17392058895" fg:w="513084823"/><text x="27.1412%" y="623.50"></text></g><g><title>[libc.so.6] (865,674,994 samples, 1.34%)</title><rect x="26.3460%" y="677" width="1.3385%" height="15" fill="rgb(253,114,12)" fg:x="17039468733" fg:w="865674994"/><text x="26.5960%" y="687.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (8,683,351 samples, 0.01%)</title><rect x="27.6913%" y="469" width="0.0134%" height="15" fill="rgb(215,223,47)" fg:x="17909538429" fg:w="8683351"/><text x="27.9413%" y="479.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (8,683,351 samples, 0.01%)</title><rect x="27.6913%" y="453" width="0.0134%" height="15" fill="rgb(248,225,23)" fg:x="17909538429" fg:w="8683351"/><text x="27.9413%" y="463.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (8,683,351 samples, 0.01%)</title><rect x="27.6913%" y="437" width="0.0134%" height="15" fill="rgb(250,108,0)" fg:x="17909538429" fg:w="8683351"/><text x="27.9413%" y="447.50"></text></g><g><title>exp (8,683,351 samples, 0.01%)</title><rect x="27.6913%" y="421" width="0.0134%" height="15" fill="rgb(228,208,7)" fg:x="17909538429" fg:w="8683351"/><text x="27.9413%" y="431.50"></text></g><g><title>[my_benchmark-3737c2aed686ac35] (17,396,623 samples, 0.03%)</title><rect x="27.6845%" y="677" width="0.0269%" height="15" fill="rgb(244,45,10)" fg:x="17905143727" fg:w="17396623"/><text x="27.9345%" y="687.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (17,310,281 samples, 0.03%)</title><rect x="27.6846%" y="661" width="0.0268%" height="15" fill="rgb(207,125,25)" fg:x="17905230069" fg:w="17310281"/><text x="27.9346%" y="671.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (17,310,281 samples, 0.03%)</title><rect x="27.6846%" y="645" width="0.0268%" height="15" fill="rgb(210,195,18)" fg:x="17905230069" fg:w="17310281"/><text x="27.9346%" y="655.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (17,310,281 samples, 0.03%)</title><rect x="27.6846%" y="629" width="0.0268%" height="15" fill="rgb(249,80,12)" fg:x="17905230069" fg:w="17310281"/><text x="27.9346%" y="639.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (17,310,281 samples, 0.03%)</title><rect x="27.6846%" y="613" width="0.0268%" height="15" fill="rgb(221,65,9)" fg:x="17905230069" fg:w="17310281"/><text x="27.9346%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (17,310,281 samples, 0.03%)</title><rect x="27.6846%" y="597" width="0.0268%" height="15" fill="rgb(235,49,36)" fg:x="17905230069" fg:w="17310281"/><text x="27.9346%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (17,310,281 samples, 0.03%)</title><rect x="27.6846%" y="581" width="0.0268%" height="15" fill="rgb(225,32,20)" fg:x="17905230069" fg:w="17310281"/><text x="27.9346%" y="591.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (17,310,281 samples, 0.03%)</title><rect x="27.6846%" y="565" width="0.0268%" height="15" fill="rgb(215,141,46)" fg:x="17905230069" fg:w="17310281"/><text x="27.9346%" y="575.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (17,310,281 samples, 0.03%)</title><rect x="27.6846%" y="549" width="0.0268%" height="15" fill="rgb(250,160,47)" fg:x="17905230069" fg:w="17310281"/><text x="27.9346%" y="559.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::_{{closure}} (17,310,281 samples, 0.03%)</title><rect x="27.6846%" y="533" width="0.0268%" height="15" fill="rgb(216,222,40)" fg:x="17905230069" fg:w="17310281"/><text x="27.9346%" y="543.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (17,310,281 samples, 0.03%)</title><rect x="27.6846%" y="517" width="0.0268%" height="15" fill="rgb(234,217,39)" fg:x="17905230069" fg:w="17310281"/><text x="27.9346%" y="527.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (17,310,281 samples, 0.03%)</title><rect x="27.6846%" y="501" width="0.0268%" height="15" fill="rgb(207,178,40)" fg:x="17905230069" fg:w="17310281"/><text x="27.9346%" y="511.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::_{{closure}} (13,001,921 samples, 0.02%)</title><rect x="27.6913%" y="485" width="0.0201%" height="15" fill="rgb(221,136,13)" fg:x="17909538429" fg:w="13001921"/><text x="27.9413%" y="495.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (216,130,021 samples, 0.33%)</title><rect x="27.8598%" y="629" width="0.3342%" height="15" fill="rgb(249,199,10)" fg:x="18018504597" fg:w="216130021"/><text x="28.1098%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (37,913,290 samples, 0.06%)</title><rect x="28.1940%" y="629" width="0.0586%" height="15" fill="rgb(249,222,13)" fg:x="18234634618" fg:w="37913290"/><text x="28.4440%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::set_ptr_and_cap (71,772,378 samples, 0.11%)</title><rect x="28.2526%" y="629" width="0.1110%" height="15" fill="rgb(244,185,38)" fg:x="18272547908" fg:w="71772378"/><text x="28.5026%" y="639.50"></text></g><g><title>alloc::raw_vec::layout_array (7,533,547 samples, 0.01%)</title><rect x="28.3635%" y="629" width="0.0116%" height="15" fill="rgb(236,202,9)" fg:x="18344320286" fg:w="7533547"/><text x="28.6135%" y="639.50"></text></g><g><title>core::alloc::layout::Layout::repeat (7,533,547 samples, 0.01%)</title><rect x="28.3635%" y="613" width="0.0116%" height="15" fill="rgb(250,229,37)" fg:x="18344320286" fg:w="7533547"/><text x="28.6135%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (463,067,317 samples, 0.72%)</title><rect x="27.7114%" y="677" width="0.7160%" height="15" fill="rgb(206,174,23)" fg:x="17922540350" fg:w="463067317"/><text x="27.9614%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (370,851,897 samples, 0.57%)</title><rect x="27.8540%" y="661" width="0.5734%" height="15" fill="rgb(211,33,43)" fg:x="18014755770" fg:w="370851897"/><text x="28.1040%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (370,851,897 samples, 0.57%)</title><rect x="27.8540%" y="645" width="0.5734%" height="15" fill="rgb(245,58,50)" fg:x="18014755770" fg:w="370851897"/><text x="28.1040%" y="655.50"></text></g><g><title>core::cmp::max (33,753,834 samples, 0.05%)</title><rect x="28.3752%" y="629" width="0.0522%" height="15" fill="rgb(244,68,36)" fg:x="18351853833" fg:w="33753834"/><text x="28.6252%" y="639.50"></text></g><g><title>core::cmp::Ord::max (33,753,834 samples, 0.05%)</title><rect x="28.3752%" y="613" width="0.0522%" height="15" fill="rgb(232,229,15)" fg:x="18351853833" fg:w="33753834"/><text x="28.6252%" y="623.50"></text></g><g><title>[libc.so.6] (64,248,295 samples, 0.10%)</title><rect x="28.8638%" y="581" width="0.0993%" height="15" fill="rgb(254,30,23)" fg:x="18667875396" fg:w="64248295"/><text x="29.1138%" y="591.50"></text></g><g><title>[unknown] (64,248,295 samples, 0.10%)</title><rect x="28.8638%" y="565" width="0.0993%" height="15" fill="rgb(235,160,14)" fg:x="18667875396" fg:w="64248295"/><text x="29.1138%" y="575.50"></text></g><g><title>[unknown] (485,316,557 samples, 0.75%)</title><rect x="29.2651%" y="549" width="0.7504%" height="15" fill="rgb(212,155,44)" fg:x="18927415184" fg:w="485316557"/><text x="29.5151%" y="559.50"></text></g><g><title>__default_morecore (7,364,006 samples, 0.01%)</title><rect x="30.0155%" y="549" width="0.0114%" height="15" fill="rgb(226,2,50)" fg:x="19412731741" fg:w="7364006"/><text x="30.2655%" y="559.50"></text></g><g><title>__sbrk (7,364,006 samples, 0.01%)</title><rect x="30.0155%" y="533" width="0.0114%" height="15" fill="rgb(234,177,6)" fg:x="19412731741" fg:w="7364006"/><text x="30.2655%" y="543.50"></text></g><g><title>brk (7,364,006 samples, 0.01%)</title><rect x="30.0155%" y="517" width="0.0114%" height="15" fill="rgb(217,24,9)" fg:x="19412731741" fg:w="7364006"/><text x="30.2655%" y="527.50"></text></g><g><title>[unknown] (7,364,006 samples, 0.01%)</title><rect x="30.0155%" y="501" width="0.0114%" height="15" fill="rgb(220,13,46)" fg:x="19412731741" fg:w="7364006"/><text x="30.2655%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (767,494,313 samples, 1.19%)</title><rect x="28.8468%" y="661" width="1.1867%" height="15" fill="rgb(239,221,27)" fg:x="18656884678" fg:w="767494313"/><text x="29.0968%" y="671.50"></text></g><g><title>alloc::alloc::Global::grow_impl (767,494,313 samples, 1.19%)</title><rect x="28.8468%" y="645" width="1.1867%" height="15" fill="rgb(222,198,25)" fg:x="18656884678" fg:w="767494313"/><text x="29.0968%" y="655.50"></text></g><g><title>alloc::alloc::realloc (759,935,627 samples, 1.17%)</title><rect x="28.8585%" y="629" width="1.1750%" height="15" fill="rgb(211,99,13)" fg:x="18664443364" fg:w="759935627"/><text x="29.1085%" y="639.50"></text></g><g><title>__rdl_realloc (756,503,595 samples, 1.17%)</title><rect x="28.8638%" y="613" width="1.1697%" height="15" fill="rgb(232,111,31)" fg:x="18667875396" fg:w="756503595"/><text x="29.1138%" y="623.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (756,503,595 samples, 1.17%)</title><rect x="28.8638%" y="597" width="1.1697%" height="15" fill="rgb(245,82,37)" fg:x="18667875396" fg:w="756503595"/><text x="29.1138%" y="607.50"></text></g><g><title>realloc (692,255,300 samples, 1.07%)</title><rect x="28.9632%" y="581" width="1.0703%" height="15" fill="rgb(227,149,46)" fg:x="18732123691" fg:w="692255300"/><text x="29.2132%" y="591.50"></text></g><g><title>[libc.so.6] (620,181,244 samples, 0.96%)</title><rect x="29.0746%" y="565" width="0.9589%" height="15" fill="rgb(218,36,50)" fg:x="18804197747" fg:w="620181244"/><text x="29.3246%" y="575.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (110,953,066 samples, 0.17%)</title><rect x="30.0335%" y="661" width="0.1716%" height="15" fill="rgb(226,80,48)" fg:x="19424378991" fg:w="110953066"/><text x="30.2835%" y="671.50"></text></g><g><title>[libc.so.6] (1,359,348,736 samples, 2.10%)</title><rect x="30.7301%" y="645" width="2.1018%" height="15" fill="rgb(238,224,15)" fg:x="19874921250" fg:w="1359348736"/><text x="30.9801%" y="655.50">[..</text></g><g><title>[unknown] (208,410,059 samples, 0.32%)</title><rect x="32.5097%" y="629" width="0.3222%" height="15" fill="rgb(241,136,10)" fg:x="21025859927" fg:w="208410059"/><text x="32.7597%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (2,852,347,835 samples, 4.41%)</title><rect x="28.4274%" y="677" width="4.4102%" height="15" fill="rgb(208,32,45)" fg:x="18385607667" fg:w="2852347835"/><text x="28.6774%" y="687.50">alloc..</text></g><g><title>malloc (1,702,623,445 samples, 2.63%)</title><rect x="30.2051%" y="661" width="2.6326%" height="15" fill="rgb(207,135,9)" fg:x="19535332057" fg:w="1702623445"/><text x="30.4551%" y="671.50">ma..</text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (96,272,377 samples, 0.15%)</title><rect x="32.8443%" y="661" width="0.1489%" height="15" fill="rgb(206,86,44)" fg:x="21242249094" fg:w="96272377"/><text x="33.0943%" y="671.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (96,272,377 samples, 0.15%)</title><rect x="32.8443%" y="645" width="0.1489%" height="15" fill="rgb(245,177,15)" fg:x="21242249094" fg:w="96272377"/><text x="33.0943%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (96,272,377 samples, 0.15%)</title><rect x="32.8443%" y="629" width="0.1489%" height="15" fill="rgb(206,64,50)" fg:x="21242249094" fg:w="96272377"/><text x="33.0943%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (15,257,317 samples, 0.02%)</title><rect x="32.9695%" y="613" width="0.0236%" height="15" fill="rgb(234,36,40)" fg:x="21323264154" fg:w="15257317"/><text x="33.2195%" y="623.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (6,841,257 samples, 0.01%)</title><rect x="32.9825%" y="597" width="0.0106%" height="15" fill="rgb(213,64,8)" fg:x="21331680214" fg:w="6841257"/><text x="33.2325%" y="607.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (57,605,170 samples, 0.09%)</title><rect x="32.9931%" y="661" width="0.0891%" height="15" fill="rgb(210,75,36)" fg:x="21338521471" fg:w="57605170"/><text x="33.2431%" y="671.50"></text></g><g><title>core::hash::BuildHasher::hash_one (167,534,648 samples, 0.26%)</title><rect x="32.8443%" y="677" width="0.2590%" height="15" fill="rgb(229,88,21)" fg:x="21242249094" fg:w="167534648"/><text x="33.0943%" y="687.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (13,657,101 samples, 0.02%)</title><rect x="33.0822%" y="661" width="0.0211%" height="15" fill="rgb(252,204,47)" fg:x="21396126641" fg:w="13657101"/><text x="33.3322%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (13,657,101 samples, 0.02%)</title><rect x="33.0822%" y="645" width="0.0211%" height="15" fill="rgb(208,77,27)" fg:x="21396126641" fg:w="13657101"/><text x="33.3322%" y="655.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (13,657,101 samples, 0.02%)</title><rect x="33.0822%" y="629" width="0.0211%" height="15" fill="rgb(221,76,26)" fg:x="21396126641" fg:w="13657101"/><text x="33.3322%" y="639.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write_str (13,657,101 samples, 0.02%)</title><rect x="33.0822%" y="613" width="0.0211%" height="15" fill="rgb(225,139,18)" fg:x="21396126641" fg:w="13657101"/><text x="33.3322%" y="623.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (13,657,101 samples, 0.02%)</title><rect x="33.0822%" y="597" width="0.0211%" height="15" fill="rgb(230,137,11)" fg:x="21396126641" fg:w="13657101"/><text x="33.3322%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (13,657,101 samples, 0.02%)</title><rect x="33.0822%" y="581" width="0.0211%" height="15" fill="rgb(212,28,1)" fg:x="21396126641" fg:w="13657101"/><text x="33.3322%" y="591.50"></text></g><g><title>core::hash::Hasher::write_u8 (9,750,805 samples, 0.02%)</title><rect x="33.0882%" y="565" width="0.0151%" height="15" fill="rgb(248,164,17)" fg:x="21400032937" fg:w="9750805"/><text x="33.3382%" y="575.50"></text></g><g><title>criterion::analysis::compare::estimates::stats (34,916,782 samples, 0.05%)</title><rect x="33.1088%" y="677" width="0.0540%" height="15" fill="rgb(222,171,42)" fg:x="21413327986" fg:w="34916782"/><text x="33.3588%" y="687.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::mean (25,556,098 samples, 0.04%)</title><rect x="33.1232%" y="661" width="0.0395%" height="15" fill="rgb(243,84,45)" fg:x="21422688670" fg:w="25556098"/><text x="33.3732%" y="671.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::sum (25,556,098 samples, 0.04%)</title><rect x="33.1232%" y="645" width="0.0395%" height="15" fill="rgb(252,49,23)" fg:x="21422688670" fg:w="25556098"/><text x="33.3732%" y="655.50"></text></g><g><title>criterion::stats::sum (25,556,098 samples, 0.04%)</title><rect x="33.1232%" y="629" width="0.0395%" height="15" fill="rgb(215,19,7)" fg:x="21422688670" fg:w="25556098"/><text x="33.3732%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (25,556,098 samples, 0.04%)</title><rect x="33.1232%" y="613" width="0.0395%" height="15" fill="rgb(238,81,41)" fg:x="21422688670" fg:w="25556098"/><text x="33.3732%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (25,556,098 samples, 0.04%)</title><rect x="33.1232%" y="597" width="0.0395%" height="15" fill="rgb(210,199,37)" fg:x="21422688670" fg:w="25556098"/><text x="33.3732%" y="607.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (25,556,098 samples, 0.04%)</title><rect x="33.1232%" y="581" width="0.0395%" height="15" fill="rgb(244,192,49)" fg:x="21422688670" fg:w="25556098"/><text x="33.3732%" y="591.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (25,556,098 samples, 0.04%)</title><rect x="33.1232%" y="565" width="0.0395%" height="15" fill="rgb(226,211,11)" fg:x="21422688670" fg:w="25556098"/><text x="33.3732%" y="575.50"></text></g><g><title>core::ops::function::FnMut::call_mut (25,556,098 samples, 0.04%)</title><rect x="33.1232%" y="549" width="0.0395%" height="15" fill="rgb(236,162,54)" fg:x="21422688670" fg:w="25556098"/><text x="33.3732%" y="559.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (25,556,098 samples, 0.04%)</title><rect x="33.1232%" y="533" width="0.0395%" height="15" fill="rgb(220,229,9)" fg:x="21422688670" fg:w="25556098"/><text x="33.3732%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;json_parser::Token&gt;&gt; (1,711,472,147 samples, 2.65%)</title><rect x="33.1628%" y="613" width="2.6462%" height="15" fill="rgb(250,87,22)" fg:x="21448244768" fg:w="1711472147"/><text x="33.4128%" y="623.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,711,472,147 samples, 2.65%)</title><rect x="33.1628%" y="597" width="2.6462%" height="15" fill="rgb(239,43,17)" fg:x="21448244768" fg:w="1711472147"/><text x="33.4128%" y="607.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;[json_parser::Token]&gt; (1,711,472,147 samples, 2.65%)</title><rect x="33.1628%" y="581" width="2.6462%" height="15" fill="rgb(231,177,25)" fg:x="21448244768" fg:w="1711472147"/><text x="33.4128%" y="591.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;json_parser::Token&gt; (1,645,714,793 samples, 2.54%)</title><rect x="33.2644%" y="565" width="2.5446%" height="15" fill="rgb(219,179,1)" fg:x="21514002122" fg:w="1645714793"/><text x="33.5144%" y="575.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,103,851,076 samples, 1.71%)</title><rect x="34.1022%" y="549" width="1.7067%" height="15" fill="rgb(238,219,53)" fg:x="22055865839" fg:w="1103851076"/><text x="34.3522%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,103,851,076 samples, 1.71%)</title><rect x="34.1022%" y="533" width="1.7067%" height="15" fill="rgb(232,167,36)" fg:x="22055865839" fg:w="1103851076"/><text x="34.3522%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,103,851,076 samples, 1.71%)</title><rect x="34.1022%" y="517" width="1.7067%" height="15" fill="rgb(244,19,51)" fg:x="22055865839" fg:w="1103851076"/><text x="34.3522%" y="527.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,103,851,076 samples, 1.71%)</title><rect x="34.1022%" y="501" width="1.7067%" height="15" fill="rgb(224,6,22)" fg:x="22055865839" fg:w="1103851076"/><text x="34.3522%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,103,851,076 samples, 1.71%)</title><rect x="34.1022%" y="485" width="1.7067%" height="15" fill="rgb(224,145,5)" fg:x="22055865839" fg:w="1103851076"/><text x="34.3522%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,103,851,076 samples, 1.71%)</title><rect x="34.1022%" y="469" width="1.7067%" height="15" fill="rgb(234,130,49)" fg:x="22055865839" fg:w="1103851076"/><text x="34.3522%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (1,103,851,076 samples, 1.71%)</title><rect x="34.1022%" y="453" width="1.7067%" height="15" fill="rgb(254,6,2)" fg:x="22055865839" fg:w="1103851076"/><text x="34.3522%" y="463.50"></text></g><g><title>__rdl_dealloc (1,103,851,076 samples, 1.71%)</title><rect x="34.1022%" y="437" width="1.7067%" height="15" fill="rgb(208,96,46)" fg:x="22055865839" fg:w="1103851076"/><text x="34.3522%" y="447.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1,103,851,076 samples, 1.71%)</title><rect x="34.1022%" y="421" width="1.7067%" height="15" fill="rgb(239,3,39)" fg:x="22055865839" fg:w="1103851076"/><text x="34.3522%" y="431.50"></text></g><g><title>cfree (1,076,722,296 samples, 1.66%)</title><rect x="34.1442%" y="405" width="1.6648%" height="15" fill="rgb(233,210,1)" fg:x="22082994619" fg:w="1076722296"/><text x="34.3942%" y="415.50"></text></g><g><title>[libc.so.6] (427,142,162 samples, 0.66%)</title><rect x="35.1486%" y="389" width="0.6604%" height="15" fill="rgb(244,137,37)" fg:x="22732574753" fg:w="427142162"/><text x="35.3986%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (453,063,184 samples, 0.70%)</title><rect x="35.9114%" y="597" width="0.7005%" height="15" fill="rgb(240,136,2)" fg:x="23225922765" fg:w="453063184"/><text x="36.1614%" y="607.50"></text></g><g><title>core::ptr::write (320,230,392 samples, 0.50%)</title><rect x="36.1167%" y="581" width="0.4951%" height="15" fill="rgb(239,18,37)" fg:x="23358755557" fg:w="320230392"/><text x="36.3667%" y="591.50"></text></g><g><title>[unknown] (297,795,423 samples, 0.46%)</title><rect x="36.1514%" y="565" width="0.4604%" height="15" fill="rgb(218,185,22)" fg:x="23381190526" fg:w="297795423"/><text x="36.4014%" y="575.50"></text></g><g><title>json_parser::Tokenizer::has_more (44,834,693 samples, 0.07%)</title><rect x="36.6119%" y="597" width="0.0693%" height="15" fill="rgb(225,218,4)" fg:x="23678985949" fg:w="44834693"/><text x="36.8619%" y="607.50"></text></g><g><title>json_parser::Tokenizer::has_more_than (44,834,693 samples, 0.07%)</title><rect x="36.6119%" y="581" width="0.0693%" height="15" fill="rgb(230,182,32)" fg:x="23678985949" fg:w="44834693"/><text x="36.8619%" y="591.50"></text></g><g><title>json_parser::Tokenizer::increment_position (21,619,245 samples, 0.03%)</title><rect x="36.6812%" y="597" width="0.0334%" height="15" fill="rgb(242,56,43)" fg:x="23723820642" fg:w="21619245"/><text x="36.9312%" y="607.50"></text></g><g><title>json_parser::Tokenizer::skip_whitespace (543,660,954 samples, 0.84%)</title><rect x="36.7146%" y="597" width="0.8406%" height="15" fill="rgb(233,99,24)" fg:x="23745439887" fg:w="543660954"/><text x="36.9646%" y="607.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (107,770,345 samples, 0.17%)</title><rect x="37.6400%" y="581" width="0.1666%" height="15" fill="rgb(234,209,42)" fg:x="24343929576" fg:w="107770345"/><text x="37.8900%" y="591.50"></text></g><g><title>core::num::&lt;impl u64&gt;::leading_zeros (25,802,756 samples, 0.04%)</title><rect x="38.0656%" y="517" width="0.0399%" height="15" fill="rgb(227,7,12)" fg:x="24619164395" fg:w="25802756"/><text x="38.3156%" y="527.50"></text></g><g><title>core::num::dec2flt::lemire::compute_float (113,347,185 samples, 0.18%)</title><rect x="38.0545%" y="533" width="0.1753%" height="15" fill="rgb(245,203,43)" fg:x="24612027220" fg:w="113347185"/><text x="38.3045%" y="543.50"></text></g><g><title>core::num::dec2flt::lemire::compute_product_approx (80,407,254 samples, 0.12%)</title><rect x="38.1055%" y="517" width="0.1243%" height="15" fill="rgb(238,205,33)" fg:x="24644967151" fg:w="80407254"/><text x="38.3555%" y="527.50"></text></g><g><title>core::num::dec2flt::lemire::full_multiplication (14,399,657 samples, 0.02%)</title><rect x="38.2075%" y="501" width="0.0223%" height="15" fill="rgb(231,56,7)" fg:x="24710974748" fg:w="14399657"/><text x="38.4575%" y="511.50"></text></g><g><title>core::num::dec2flt::number::Number::try_fast_path (101,462,611 samples, 0.16%)</title><rect x="38.2298%" y="533" width="0.1569%" height="15" fill="rgb(244,186,29)" fg:x="24725374405" fg:w="101462611"/><text x="38.4798%" y="543.50"></text></g><g><title>core::num::dec2flt::number::Number::is_fast_path (39,654,034 samples, 0.06%)</title><rect x="38.3253%" y="517" width="0.0613%" height="15" fill="rgb(234,111,31)" fg:x="24787182982" fg:w="39654034"/><text x="38.5753%" y="527.50"></text></g><g><title>core::num::&lt;impl u8&gt;::wrapping_sub (10,955,510 samples, 0.02%)</title><rect x="38.5041%" y="469" width="0.0169%" height="15" fill="rgb(241,149,10)" fg:x="24902790041" fg:w="10955510"/><text x="38.7541%" y="479.50"></text></g><g><title>core::num::dec2flt::parse::try_parse_digits::_{{closure}} (58,146,119 samples, 0.09%)</title><rect x="38.5210%" y="469" width="0.0899%" height="15" fill="rgb(249,206,44)" fg:x="24913745551" fg:w="58146119"/><text x="38.7710%" y="479.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (14,444,567 samples, 0.02%)</title><rect x="38.5886%" y="453" width="0.0223%" height="15" fill="rgb(251,153,30)" fg:x="24957447103" fg:w="14444567"/><text x="38.8386%" y="463.50"></text></g><g><title>&lt;[u8] as core::num::dec2flt::common::ByteSlice&gt;::parse_digits (173,664,237 samples, 0.27%)</title><rect x="38.4535%" y="485" width="0.2685%" height="15" fill="rgb(239,152,38)" fg:x="24870050306" fg:w="173664237"/><text x="38.7035%" y="495.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_first (71,822,873 samples, 0.11%)</title><rect x="38.6109%" y="469" width="0.1111%" height="15" fill="rgb(249,139,47)" fg:x="24971891670" fg:w="71822873"/><text x="38.8609%" y="479.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (7,546,814 samples, 0.01%)</title><rect x="38.7279%" y="485" width="0.0117%" height="15" fill="rgb(244,64,35)" fg:x="25047556405" fg:w="7546814"/><text x="38.9779%" y="495.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (14,459,438 samples, 0.02%)</title><rect x="38.7396%" y="469" width="0.0224%" height="15" fill="rgb(216,46,15)" fg:x="25055103219" fg:w="14459438"/><text x="38.9896%" y="479.50"></text></g><g><title>core::num::dec2flt::common::is_8digits (18,007,650 samples, 0.03%)</title><rect x="38.7396%" y="485" width="0.0278%" height="15" fill="rgb(250,74,19)" fg:x="25055103219" fg:w="18007650"/><text x="38.9896%" y="495.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (10,290,903 samples, 0.02%)</title><rect x="38.8685%" y="469" width="0.0159%" height="15" fill="rgb(249,42,33)" fg:x="25138487818" fg:w="10290903"/><text x="39.1185%" y="479.50"></text></g><g><title>core::num::dec2flt::parse::parse_8digits (100,431,752 samples, 0.16%)</title><rect x="38.7674%" y="485" width="0.1553%" height="15" fill="rgb(242,149,17)" fg:x="25073110869" fg:w="100431752"/><text x="39.0174%" y="495.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (24,763,900 samples, 0.04%)</title><rect x="38.8844%" y="469" width="0.0383%" height="15" fill="rgb(244,29,21)" fg:x="25148778721" fg:w="24763900"/><text x="39.1344%" y="479.50"></text></g><g><title>core::num::dec2flt::parse::try_parse_digits (347,636,716 samples, 0.54%)</title><rect x="38.3964%" y="501" width="0.5375%" height="15" fill="rgb(220,130,37)" fg:x="24833108637" fg:w="347636716"/><text x="38.6464%" y="511.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (7,202,732 samples, 0.01%)</title><rect x="38.9227%" y="485" width="0.0111%" height="15" fill="rgb(211,67,2)" fg:x="25173542621" fg:w="7202732"/><text x="39.1727%" y="495.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (7,202,732 samples, 0.01%)</title><rect x="38.9227%" y="469" width="0.0111%" height="15" fill="rgb(235,68,52)" fg:x="25173542621" fg:w="7202732"/><text x="39.1727%" y="479.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (7,202,732 samples, 0.01%)</title><rect x="38.9227%" y="453" width="0.0111%" height="15" fill="rgb(246,142,3)" fg:x="25173542621" fg:w="7202732"/><text x="39.1727%" y="463.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (7,202,732 samples, 0.01%)</title><rect x="38.9227%" y="437" width="0.0111%" height="15" fill="rgb(241,25,7)" fg:x="25173542621" fg:w="7202732"/><text x="39.1727%" y="447.50"></text></g><g><title>core::num::dec2flt::parse::parse_number (379,688,863 samples, 0.59%)</title><rect x="38.3867%" y="533" width="0.5871%" height="15" fill="rgb(242,119,39)" fg:x="24826837016" fg:w="379688863"/><text x="38.6367%" y="543.50"></text></g><g><title>core::num::dec2flt::parse::parse_partial_number (379,688,863 samples, 0.59%)</title><rect x="38.3867%" y="517" width="0.5871%" height="15" fill="rgb(241,98,45)" fg:x="24826837016" fg:w="379688863"/><text x="38.6367%" y="527.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_first (25,780,526 samples, 0.04%)</title><rect x="38.9339%" y="501" width="0.0399%" height="15" fill="rgb(254,28,30)" fg:x="25180745353" fg:w="25780526"/><text x="39.1839%" y="511.50"></text></g><g><title>core::num::dec2flt::&lt;impl core::str::traits::FromStr for f64&gt;::from_str (762,327,705 samples, 1.18%)</title><rect x="37.8066%" y="565" width="1.1787%" height="15" fill="rgb(241,142,54)" fg:x="24451699921" fg:w="762327705"/><text x="38.0566%" y="575.50"></text></g><g><title>core::num::dec2flt::dec2flt (737,130,947 samples, 1.14%)</title><rect x="37.8456%" y="549" width="1.1397%" height="15" fill="rgb(222,85,15)" fg:x="24476896679" fg:w="737130947"/><text x="38.0956%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::first (7,501,747 samples, 0.01%)</title><rect x="38.9737%" y="533" width="0.0116%" height="15" fill="rgb(210,85,47)" fg:x="25206525879" fg:w="7501747"/><text x="39.2237%" y="543.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (853,039,588 samples, 1.32%)</title><rect x="37.8066%" y="581" width="1.3189%" height="15" fill="rgb(224,206,25)" fg:x="24451699921" fg:w="853039588"/><text x="38.0566%" y="591.50"></text></g><g><title>core::num::dec2flt::lemire::compute_float (90,711,883 samples, 0.14%)</title><rect x="38.9853%" y="565" width="0.1403%" height="15" fill="rgb(243,201,19)" fg:x="25214027626" fg:w="90711883"/><text x="39.2353%" y="575.50"></text></g><g><title>core::str::converts::from_utf8 (290,567,278 samples, 0.45%)</title><rect x="39.1256%" y="581" width="0.4493%" height="15" fill="rgb(236,59,4)" fg:x="25304739509" fg:w="290567278"/><text x="39.3756%" y="591.50"></text></g><g><title>core::str::validations::run_utf8_validation (272,608,190 samples, 0.42%)</title><rect x="39.1533%" y="565" width="0.4215%" height="15" fill="rgb(254,179,45)" fg:x="25322698597" fg:w="272608190"/><text x="39.4033%" y="575.50"></text></g><g><title>json_parser::Tokenizer::current_byte (8,957,720 samples, 0.01%)</title><rect x="39.6485%" y="565" width="0.0139%" height="15" fill="rgb(226,14,10)" fg:x="25642946749" fg:w="8957720"/><text x="39.8985%" y="575.50"></text></g><g><title>json_parser::Tokenizer::consume_digits (355,032,659 samples, 0.55%)</title><rect x="39.5748%" y="581" width="0.5489%" height="15" fill="rgb(244,27,41)" fg:x="25595306787" fg:w="355032659"/><text x="39.8248%" y="591.50"></text></g><g><title>json_parser::Tokenizer::is_digit (298,434,977 samples, 0.46%)</title><rect x="39.6624%" y="565" width="0.4614%" height="15" fill="rgb(235,35,32)" fg:x="25651904469" fg:w="298434977"/><text x="39.9124%" y="575.50"></text></g><g><title>core::num::&lt;impl u8&gt;::is_ascii_digit (298,434,977 samples, 0.46%)</title><rect x="39.6624%" y="549" width="0.4614%" height="15" fill="rgb(218,68,31)" fg:x="25651904469" fg:w="298434977"/><text x="39.9124%" y="559.50"></text></g><g><title>json_parser::Tokenizer::has_more (39,745,497 samples, 0.06%)</title><rect x="40.1238%" y="581" width="0.0615%" height="15" fill="rgb(207,120,37)" fg:x="25950339446" fg:w="39745497"/><text x="40.3738%" y="591.50"></text></g><g><title>json_parser::Tokenizer::has_more_than (39,745,497 samples, 0.06%)</title><rect x="40.1238%" y="565" width="0.0615%" height="15" fill="rgb(227,98,0)" fg:x="25950339446" fg:w="39745497"/><text x="40.3738%" y="575.50"></text></g><g><title>json_parser::Tokenizer::increment_position (10,428,524 samples, 0.02%)</title><rect x="40.1852%" y="581" width="0.0161%" height="15" fill="rgb(207,7,3)" fg:x="25990084943" fg:w="10428524"/><text x="40.4352%" y="591.50"></text></g><g><title>json_parser::Tokenizer::tokenize_number (1,733,113,535 samples, 2.68%)</title><rect x="37.5552%" y="597" width="2.6797%" height="15" fill="rgb(206,98,19)" fg:x="24289100841" fg:w="1733113535"/><text x="37.8052%" y="607.50">js..</text></g><g><title>json_parser::Tokenizer::is_digit (21,700,909 samples, 0.03%)</title><rect x="40.2014%" y="581" width="0.0336%" height="15" fill="rgb(217,5,26)" fg:x="26000513467" fg:w="21700909"/><text x="40.4514%" y="591.50"></text></g><g><title>core::num::&lt;impl u8&gt;::is_ascii_digit (21,700,909 samples, 0.03%)</title><rect x="40.2014%" y="565" width="0.0336%" height="15" fill="rgb(235,190,38)" fg:x="26000513467" fg:w="21700909"/><text x="40.4514%" y="575.50"></text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (4,649,700,319 samples, 7.19%)</title><rect x="33.1628%" y="677" width="7.1893%" height="15" fill="rgb(247,86,24)" fg:x="21448244768" fg:w="4649700319"/><text x="33.4128%" y="687.50">criterion:..</text></g><g><title>my_benchmark::benchmark::_{{closure}}::_{{closure}} (4,649,700,319 samples, 7.19%)</title><rect x="33.1628%" y="661" width="7.1893%" height="15" fill="rgb(205,101,16)" fg:x="21448244768" fg:w="4649700319"/><text x="33.4128%" y="671.50">my_benchma..</text></g><g><title>json_parser::parse_json (4,649,700,319 samples, 7.19%)</title><rect x="33.1628%" y="645" width="7.1893%" height="15" fill="rgb(246,168,33)" fg:x="21448244768" fg:w="4649700319"/><text x="33.4128%" y="655.50">json_parse..</text></g><g><title>json_parser::parse_json_impl (4,649,700,319 samples, 7.19%)</title><rect x="33.1628%" y="629" width="7.1893%" height="15" fill="rgb(231,114,1)" fg:x="21448244768" fg:w="4649700319"/><text x="33.4128%" y="639.50">json_parse..</text></g><g><title>json_parser::Tokenizer::tokenize (2,938,228,172 samples, 4.54%)</title><rect x="35.8090%" y="613" width="4.5430%" height="15" fill="rgb(207,184,53)" fg:x="23159716915" fg:w="2938228172"/><text x="36.0590%" y="623.50">json_..</text></g><g><title>json_parser::Tokenizer::tokenize_string (75,730,711 samples, 0.12%)</title><rect x="40.2349%" y="597" width="0.1171%" height="15" fill="rgb(224,95,51)" fg:x="26022214376" fg:w="75730711"/><text x="40.4849%" y="607.50"></text></g><g><title>alloc::string::String::push (43,113,129 samples, 0.07%)</title><rect x="40.2854%" y="581" width="0.0667%" height="15" fill="rgb(212,188,45)" fg:x="26054831958" fg:w="43113129"/><text x="40.5354%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (43,113,129 samples, 0.07%)</title><rect x="40.2854%" y="565" width="0.0667%" height="15" fill="rgb(223,154,38)" fg:x="26054831958" fg:w="43113129"/><text x="40.5354%" y="575.50"></text></g><g><title>criterion::kde::sweep_and_estimate (7,635,214 samples, 0.01%)</title><rect x="40.3520%" y="677" width="0.0118%" height="15" fill="rgb(251,22,52)" fg:x="26097945087" fg:w="7635214"/><text x="40.6020%" y="687.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (8,015,806 samples, 0.01%)</title><rect x="40.4029%" y="661" width="0.0124%" height="15" fill="rgb(229,209,22)" fg:x="26130849416" fg:w="8015806"/><text x="40.6529%" y="671.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (8,015,806 samples, 0.01%)</title><rect x="40.4029%" y="645" width="0.0124%" height="15" fill="rgb(234,138,34)" fg:x="26130849416" fg:w="8015806"/><text x="40.6529%" y="655.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_add (38,418,189 samples, 0.06%)</title><rect x="40.4828%" y="629" width="0.0594%" height="15" fill="rgb(212,95,11)" fg:x="26182533558" fg:w="38418189"/><text x="40.7328%" y="639.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (128,255,373 samples, 0.20%)</title><rect x="40.3638%" y="677" width="0.1983%" height="15" fill="rgb(240,179,47)" fg:x="26105580301" fg:w="128255373"/><text x="40.6138%" y="687.50"></text></g><g><title>oorandom::Rand64::rand_range (88,688,482 samples, 0.14%)</title><rect x="40.4250%" y="661" width="0.1371%" height="15" fill="rgb(240,163,11)" fg:x="26145147192" fg:w="88688482"/><text x="40.6750%" y="671.50"></text></g><g><title>oorandom::Rand64::rand_u64 (58,616,144 samples, 0.09%)</title><rect x="40.4715%" y="645" width="0.0906%" height="15" fill="rgb(236,37,12)" fg:x="26175219530" fg:w="58616144"/><text x="40.7215%" y="655.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (12,883,927 samples, 0.02%)</title><rect x="40.5422%" y="629" width="0.0199%" height="15" fill="rgb(232,164,16)" fg:x="26220951747" fg:w="12883927"/><text x="40.7922%" y="639.50"></text></g><g><title>rayon::slice::quicksort::choose_pivot (74,726,670 samples, 0.12%)</title><rect x="40.6044%" y="613" width="0.1155%" height="15" fill="rgb(244,205,15)" fg:x="26261147015" fg:w="74726670"/><text x="40.8544%" y="623.50"></text></g><g><title>rayon::slice::quicksort::choose_pivot::_{{closure}} (66,728,349 samples, 0.10%)</title><rect x="40.6167%" y="597" width="0.1032%" height="15" fill="rgb(223,117,47)" fg:x="26269145336" fg:w="66728349"/><text x="40.8667%" y="607.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::_{{closure}} (39,578,299 samples, 0.06%)</title><rect x="40.6587%" y="581" width="0.0612%" height="15" fill="rgb(244,107,35)" fg:x="26296295386" fg:w="39578299"/><text x="40.9087%" y="591.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (39,578,299 samples, 0.06%)</title><rect x="40.6587%" y="565" width="0.0612%" height="15" fill="rgb(205,140,8)" fg:x="26296295386" fg:w="39578299"/><text x="40.9087%" y="575.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (35,854,017 samples, 0.06%)</title><rect x="40.8032%" y="597" width="0.0554%" height="15" fill="rgb(228,84,46)" fg:x="26389767839" fg:w="35854017"/><text x="41.0532%" y="607.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (35,854,017 samples, 0.06%)</title><rect x="40.8032%" y="581" width="0.0554%" height="15" fill="rgb(254,188,9)" fg:x="26389767839" fg:w="35854017"/><text x="41.0532%" y="591.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (8,118,156 samples, 0.01%)</title><rect x="40.8461%" y="565" width="0.0126%" height="15" fill="rgb(206,112,54)" fg:x="26417503700" fg:w="8118156"/><text x="41.0961%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (20,272,859 samples, 0.03%)</title><rect x="41.1664%" y="581" width="0.0313%" height="15" fill="rgb(216,84,49)" fg:x="26624680939" fg:w="20272859"/><text x="41.4164%" y="591.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range&lt;A&gt;&gt;::next_back (20,272,859 samples, 0.03%)</title><rect x="41.1664%" y="565" width="0.0313%" height="15" fill="rgb(214,194,35)" fg:x="26624680939" fg:w="20272859"/><text x="41.4164%" y="575.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (20,272,859 samples, 0.03%)</title><rect x="41.1664%" y="549" width="0.0313%" height="15" fill="rgb(249,28,3)" fg:x="26624680939" fg:w="20272859"/><text x="41.4164%" y="559.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (20,272,859 samples, 0.03%)</title><rect x="41.1664%" y="533" width="0.0313%" height="15" fill="rgb(222,56,52)" fg:x="26624680939" fg:w="20272859"/><text x="41.4164%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (116,681,758 samples, 0.18%)</title><rect x="41.1978%" y="581" width="0.1804%" height="15" fill="rgb(245,217,50)" fg:x="26644953798" fg:w="116681758"/><text x="41.4478%" y="591.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (13,429,364 samples, 0.02%)</title><rect x="41.3782%" y="565" width="0.0208%" height="15" fill="rgb(213,201,24)" fg:x="26761635556" fg:w="13429364"/><text x="41.6282%" y="575.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (469,561,107 samples, 0.73%)</title><rect x="40.7199%" y="613" width="0.7260%" height="15" fill="rgb(248,116,28)" fg:x="26335873685" fg:w="469561107"/><text x="40.9699%" y="623.50"></text></g><g><title>rayon::slice::quicksort::shift_tail (379,812,936 samples, 0.59%)</title><rect x="40.8587%" y="597" width="0.5873%" height="15" fill="rgb(219,72,43)" fg:x="26425621856" fg:w="379812936"/><text x="41.1087%" y="607.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::_{{closure}} (43,799,236 samples, 0.07%)</title><rect x="41.3782%" y="581" width="0.0677%" height="15" fill="rgb(209,138,14)" fg:x="26761635556" fg:w="43799236"/><text x="41.6282%" y="591.50"></text></g><g><title>core::ops::function::Fn::call (30,369,872 samples, 0.05%)</title><rect x="41.3990%" y="565" width="0.0470%" height="15" fill="rgb(222,18,33)" fg:x="26775064920" fg:w="30369872"/><text x="41.6490%" y="575.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (12,591,189 samples, 0.02%)</title><rect x="41.5247%" y="597" width="0.0195%" height="15" fill="rgb(213,199,7)" fg:x="26856413087" fg:w="12591189"/><text x="41.7747%" y="607.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (12,591,189 samples, 0.02%)</title><rect x="41.5247%" y="581" width="0.0195%" height="15" fill="rgb(250,110,10)" fg:x="26856413087" fg:w="12591189"/><text x="41.7747%" y="591.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_sub (12,591,189 samples, 0.02%)</title><rect x="41.5247%" y="565" width="0.0195%" height="15" fill="rgb(248,123,6)" fg:x="26856413087" fg:w="12591189"/><text x="41.7747%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (35,824,913 samples, 0.06%)</title><rect x="41.7393%" y="581" width="0.0554%" height="15" fill="rgb(206,91,31)" fg:x="26995159209" fg:w="35824913"/><text x="41.9893%" y="591.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (47,740,177 samples, 0.07%)</title><rect x="41.7947%" y="581" width="0.0738%" height="15" fill="rgb(211,154,13)" fg:x="27030984122" fg:w="47740177"/><text x="42.0447%" y="591.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (47,740,177 samples, 0.07%)</title><rect x="41.7947%" y="565" width="0.0738%" height="15" fill="rgb(225,148,7)" fg:x="27030984122" fg:w="47740177"/><text x="42.0447%" y="575.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (76,695,216 samples, 0.12%)</title><rect x="41.8685%" y="581" width="0.1186%" height="15" fill="rgb(220,160,43)" fg:x="27078724299" fg:w="76695216"/><text x="42.1185%" y="591.50"></text></g><g><title>core::intrinsics::copy (38,658,977 samples, 0.06%)</title><rect x="41.9871%" y="565" width="0.0598%" height="15" fill="rgb(213,52,39)" fg:x="27155419515" fg:w="38658977"/><text x="42.2371%" y="575.50"></text></g><g><title>core::ptr::swap (43,002,381 samples, 0.07%)</title><rect x="41.9871%" y="581" width="0.0665%" height="15" fill="rgb(243,137,7)" fg:x="27155419515" fg:w="43002381"/><text x="42.2371%" y="591.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (1,030,195,916 samples, 1.59%)</title><rect x="40.5621%" y="677" width="1.5929%" height="15" fill="rgb(230,79,13)" fg:x="26233835674" fg:w="1030195916"/><text x="40.8121%" y="687.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by (1,025,786,302 samples, 1.59%)</title><rect x="40.5689%" y="661" width="1.5860%" height="15" fill="rgb(247,105,23)" fg:x="26238245288" fg:w="1025786302"/><text x="40.8189%" y="671.50"></text></g><g><title>rayon::slice::quicksort::par_quicksort (1,025,786,302 samples, 1.59%)</title><rect x="40.5689%" y="645" width="1.5860%" height="15" fill="rgb(223,179,41)" fg:x="26238245288" fg:w="1025786302"/><text x="40.8189%" y="655.50"></text></g><g><title>rayon::slice::quicksort::recurse (1,025,786,302 samples, 1.59%)</title><rect x="40.5689%" y="629" width="1.5860%" height="15" fill="rgb(218,9,34)" fg:x="26238245288" fg:w="1025786302"/><text x="40.8189%" y="639.50"></text></g><g><title>rayon::slice::quicksort::partition (458,596,798 samples, 0.71%)</title><rect x="41.4459%" y="613" width="0.7091%" height="15" fill="rgb(222,106,8)" fg:x="26805434792" fg:w="458596798"/><text x="41.6959%" y="623.50"></text></g><g><title>rayon::slice::quicksort::partition_in_blocks (395,027,314 samples, 0.61%)</title><rect x="41.5442%" y="597" width="0.6108%" height="15" fill="rgb(211,220,0)" fg:x="26869004276" fg:w="395027314"/><text x="41.7942%" y="607.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::_{{closure}} (65,609,694 samples, 0.10%)</title><rect x="42.0535%" y="581" width="0.1014%" height="15" fill="rgb(229,52,16)" fg:x="27198421896" fg:w="65609694"/><text x="42.3035%" y="591.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (65,609,694 samples, 0.10%)</title><rect x="42.0535%" y="565" width="0.1014%" height="15" fill="rgb(212,155,18)" fg:x="27198421896" fg:w="65609694"/><text x="42.3035%" y="575.50"></text></g><g><title>[unknown] (28,279,904 samples, 0.04%)</title><rect x="42.8608%" y="405" width="0.0437%" height="15" fill="rgb(242,21,14)" fg:x="27720528620" fg:w="28279904"/><text x="43.1108%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (93,513,511 samples, 0.14%)</title><rect x="42.7683%" y="581" width="0.1446%" height="15" fill="rgb(222,19,48)" fg:x="27660693782" fg:w="93513511"/><text x="43.0183%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (93,513,511 samples, 0.14%)</title><rect x="42.7683%" y="565" width="0.1446%" height="15" fill="rgb(232,45,27)" fg:x="27660693782" fg:w="93513511"/><text x="43.0183%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (93,513,511 samples, 0.14%)</title><rect x="42.7683%" y="549" width="0.1446%" height="15" fill="rgb(249,103,42)" fg:x="27660693782" fg:w="93513511"/><text x="43.0183%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (93,513,511 samples, 0.14%)</title><rect x="42.7683%" y="533" width="0.1446%" height="15" fill="rgb(246,81,33)" fg:x="27660693782" fg:w="93513511"/><text x="43.0183%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (93,513,511 samples, 0.14%)</title><rect x="42.7683%" y="517" width="0.1446%" height="15" fill="rgb(252,33,42)" fg:x="27660693782" fg:w="93513511"/><text x="43.0183%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (93,513,511 samples, 0.14%)</title><rect x="42.7683%" y="501" width="0.1446%" height="15" fill="rgb(209,212,41)" fg:x="27660693782" fg:w="93513511"/><text x="43.0183%" y="511.50"></text></g><g><title>alloc::alloc::alloc (93,513,511 samples, 0.14%)</title><rect x="42.7683%" y="485" width="0.1446%" height="15" fill="rgb(207,154,6)" fg:x="27660693782" fg:w="93513511"/><text x="43.0183%" y="495.50"></text></g><g><title>__rdl_alloc (93,513,511 samples, 0.14%)</title><rect x="42.7683%" y="469" width="0.1446%" height="15" fill="rgb(223,64,47)" fg:x="27660693782" fg:w="93513511"/><text x="43.0183%" y="479.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (93,513,511 samples, 0.14%)</title><rect x="42.7683%" y="453" width="0.1446%" height="15" fill="rgb(211,161,38)" fg:x="27660693782" fg:w="93513511"/><text x="43.0183%" y="463.50"></text></g><g><title>malloc (93,513,511 samples, 0.14%)</title><rect x="42.7683%" y="437" width="0.1446%" height="15" fill="rgb(219,138,40)" fg:x="27660693782" fg:w="93513511"/><text x="43.0183%" y="447.50"></text></g><g><title>[libc.so.6] (75,073,651 samples, 0.12%)</title><rect x="42.7968%" y="421" width="0.1161%" height="15" fill="rgb(241,228,46)" fg:x="27679133642" fg:w="75073651"/><text x="43.0468%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (107,427,110 samples, 0.17%)</title><rect x="42.7683%" y="661" width="0.1661%" height="15" fill="rgb(223,209,38)" fg:x="27660693782" fg:w="107427110"/><text x="43.0183%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (107,427,110 samples, 0.17%)</title><rect x="42.7683%" y="645" width="0.1661%" height="15" fill="rgb(236,164,45)" fg:x="27660693782" fg:w="107427110"/><text x="43.0183%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (107,427,110 samples, 0.17%)</title><rect x="42.7683%" y="629" width="0.1661%" height="15" fill="rgb(231,15,5)" fg:x="27660693782" fg:w="107427110"/><text x="43.0183%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (107,427,110 samples, 0.17%)</title><rect x="42.7683%" y="613" width="0.1661%" height="15" fill="rgb(252,35,15)" fg:x="27660693782" fg:w="107427110"/><text x="43.0183%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (107,427,110 samples, 0.17%)</title><rect x="42.7683%" y="597" width="0.1661%" height="15" fill="rgb(248,181,18)" fg:x="27660693782" fg:w="107427110"/><text x="43.0183%" y="607.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (13,913,599 samples, 0.02%)</title><rect x="42.9129%" y="581" width="0.0215%" height="15" fill="rgb(233,39,42)" fg:x="27754207293" fg:w="13913599"/><text x="43.1629%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (13,913,599 samples, 0.02%)</title><rect x="42.9129%" y="565" width="0.0215%" height="15" fill="rgb(238,110,33)" fg:x="27754207293" fg:w="13913599"/><text x="43.1629%" y="575.50"></text></g><g><title>malloc (9,181,930 samples, 0.01%)</title><rect x="42.9202%" y="549" width="0.0142%" height="15" fill="rgb(233,195,10)" fg:x="27758938962" fg:w="9181930"/><text x="43.1702%" y="559.50"></text></g><g><title>[libc.so.6] (9,181,930 samples, 0.01%)</title><rect x="42.9202%" y="533" width="0.0142%" height="15" fill="rgb(254,105,3)" fg:x="27758938962" fg:w="9181930"/><text x="43.1702%" y="543.50"></text></g><g><title>[unknown] (9,181,930 samples, 0.01%)</title><rect x="42.9202%" y="517" width="0.0142%" height="15" fill="rgb(221,225,9)" fg:x="27758938962" fg:w="9181930"/><text x="43.1702%" y="527.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (76,425,841 samples, 0.12%)</title><rect x="43.4415%" y="645" width="0.1182%" height="15" fill="rgb(224,227,45)" fg:x="28096115539" fg:w="76425841"/><text x="43.6915%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (95,427,720 samples, 0.15%)</title><rect x="43.5633%" y="645" width="0.1475%" height="15" fill="rgb(229,198,43)" fg:x="28174880873" fg:w="95427720"/><text x="43.8133%" y="655.50"></text></g><g><title>core::ptr::write (91,284,962 samples, 0.14%)</title><rect x="43.5697%" y="629" width="0.1411%" height="15" fill="rgb(206,209,35)" fg:x="28179023631" fg:w="91284962"/><text x="43.8197%" y="639.50"></text></g><g><title>[unknown] (30,001,643 samples, 0.05%)</title><rect x="43.6645%" y="613" width="0.0464%" height="15" fill="rgb(245,195,53)" fg:x="28240306950" fg:w="30001643"/><text x="43.9145%" y="623.50"></text></g><g><title>json_parser::Parser::parse_array (532,689,514 samples, 0.82%)</title><rect x="42.9344%" y="661" width="0.8236%" height="15" fill="rgb(240,92,26)" fg:x="27768120892" fg:w="532689514"/><text x="43.1844%" y="671.50"></text></g><g><title>malloc (30,501,813 samples, 0.05%)</title><rect x="43.7109%" y="645" width="0.0472%" height="15" fill="rgb(207,40,23)" fg:x="28270308593" fg:w="30501813"/><text x="43.9609%" y="655.50"></text></g><g><title>[libc.so.6] (30,501,813 samples, 0.05%)</title><rect x="43.7109%" y="629" width="0.0472%" height="15" fill="rgb(223,111,35)" fg:x="28270308593" fg:w="30501813"/><text x="43.9609%" y="639.50"></text></g><g><title>[unknown] (30,501,813 samples, 0.05%)</title><rect x="43.7109%" y="613" width="0.0472%" height="15" fill="rgb(229,147,28)" fg:x="28270308593" fg:w="30501813"/><text x="43.9609%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (42,387,913 samples, 0.07%)</title><rect x="44.1290%" y="565" width="0.0655%" height="15" fill="rgb(211,29,28)" fg:x="28540748214" fg:w="42387913"/><text x="44.3790%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (42,387,913 samples, 0.07%)</title><rect x="44.1290%" y="549" width="0.0655%" height="15" fill="rgb(228,72,33)" fg:x="28540748214" fg:w="42387913"/><text x="44.3790%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (42,387,913 samples, 0.07%)</title><rect x="44.1290%" y="533" width="0.0655%" height="15" fill="rgb(205,214,31)" fg:x="28540748214" fg:w="42387913"/><text x="44.3790%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (42,387,913 samples, 0.07%)</title><rect x="44.1290%" y="517" width="0.0655%" height="15" fill="rgb(224,111,15)" fg:x="28540748214" fg:w="42387913"/><text x="44.3790%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (42,387,913 samples, 0.07%)</title><rect x="44.1290%" y="501" width="0.0655%" height="15" fill="rgb(253,21,26)" fg:x="28540748214" fg:w="42387913"/><text x="44.3790%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (42,387,913 samples, 0.07%)</title><rect x="44.1290%" y="485" width="0.0655%" height="15" fill="rgb(245,139,43)" fg:x="28540748214" fg:w="42387913"/><text x="44.3790%" y="495.50"></text></g><g><title>alloc::alloc::alloc (42,387,913 samples, 0.07%)</title><rect x="44.1290%" y="469" width="0.0655%" height="15" fill="rgb(252,170,7)" fg:x="28540748214" fg:w="42387913"/><text x="44.3790%" y="479.50"></text></g><g><title>__rdl_alloc (42,387,913 samples, 0.07%)</title><rect x="44.1290%" y="453" width="0.0655%" height="15" fill="rgb(231,118,14)" fg:x="28540748214" fg:w="42387913"/><text x="44.3790%" y="463.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (42,387,913 samples, 0.07%)</title><rect x="44.1290%" y="437" width="0.0655%" height="15" fill="rgb(238,83,0)" fg:x="28540748214" fg:w="42387913"/><text x="44.3790%" y="447.50"></text></g><g><title>malloc (42,387,913 samples, 0.07%)</title><rect x="44.1290%" y="421" width="0.0655%" height="15" fill="rgb(221,39,39)" fg:x="28540748214" fg:w="42387913"/><text x="44.3790%" y="431.50"></text></g><g><title>[libc.so.6] (35,950,800 samples, 0.06%)</title><rect x="44.1390%" y="405" width="0.0556%" height="15" fill="rgb(222,119,46)" fg:x="28547185327" fg:w="35950800"/><text x="44.3890%" y="415.50"></text></g><g><title>[unknown] (15,289,618 samples, 0.02%)</title><rect x="44.1709%" y="389" width="0.0236%" height="15" fill="rgb(222,165,49)" fg:x="28567846509" fg:w="15289618"/><text x="44.4209%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (51,272,644 samples, 0.08%)</title><rect x="44.1290%" y="645" width="0.0793%" height="15" fill="rgb(219,113,52)" fg:x="28540748214" fg:w="51272644"/><text x="44.3790%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (51,272,644 samples, 0.08%)</title><rect x="44.1290%" y="629" width="0.0793%" height="15" fill="rgb(214,7,15)" fg:x="28540748214" fg:w="51272644"/><text x="44.3790%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (51,272,644 samples, 0.08%)</title><rect x="44.1290%" y="613" width="0.0793%" height="15" fill="rgb(235,32,4)" fg:x="28540748214" fg:w="51272644"/><text x="44.3790%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (51,272,644 samples, 0.08%)</title><rect x="44.1290%" y="597" width="0.0793%" height="15" fill="rgb(238,90,54)" fg:x="28540748214" fg:w="51272644"/><text x="44.3790%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (51,272,644 samples, 0.08%)</title><rect x="44.1290%" y="581" width="0.0793%" height="15" fill="rgb(213,208,19)" fg:x="28540748214" fg:w="51272644"/><text x="44.3790%" y="591.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (8,884,731 samples, 0.01%)</title><rect x="44.1946%" y="565" width="0.0137%" height="15" fill="rgb(233,156,4)" fg:x="28583136127" fg:w="8884731"/><text x="44.4446%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (8,884,731 samples, 0.01%)</title><rect x="44.1946%" y="549" width="0.0137%" height="15" fill="rgb(207,194,5)" fg:x="28583136127" fg:w="8884731"/><text x="44.4446%" y="559.50"></text></g><g><title>[libc.so.6] (8,884,731 samples, 0.01%)</title><rect x="44.1946%" y="533" width="0.0137%" height="15" fill="rgb(206,111,30)" fg:x="28583136127" fg:w="8884731"/><text x="44.4446%" y="543.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (24,193,760 samples, 0.04%)</title><rect x="44.2083%" y="645" width="0.0374%" height="15" fill="rgb(243,70,54)" fg:x="28592020858" fg:w="24193760"/><text x="44.4583%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (8,327,896 samples, 0.01%)</title><rect x="44.2595%" y="581" width="0.0129%" height="15" fill="rgb(242,28,8)" fg:x="28625162607" fg:w="8327896"/><text x="44.5095%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot::_{{closure}} (9,140,523 samples, 0.01%)</title><rect x="44.2760%" y="565" width="0.0141%" height="15" fill="rgb(219,106,18)" fg:x="28635841079" fg:w="9140523"/><text x="44.5260%" y="575.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (9,140,523 samples, 0.01%)</title><rect x="44.2760%" y="549" width="0.0141%" height="15" fill="rgb(244,222,10)" fg:x="28635841079" fg:w="9140523"/><text x="44.5260%" y="559.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (9,140,523 samples, 0.01%)</title><rect x="44.2760%" y="533" width="0.0141%" height="15" fill="rgb(236,179,52)" fg:x="28635841079" fg:w="9140523"/><text x="44.5260%" y="543.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (9,140,523 samples, 0.01%)</title><rect x="44.2760%" y="517" width="0.0141%" height="15" fill="rgb(213,23,39)" fg:x="28635841079" fg:w="9140523"/><text x="44.5260%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (9,140,523 samples, 0.01%)</title><rect x="44.2760%" y="501" width="0.0141%" height="15" fill="rgb(238,48,10)" fg:x="28635841079" fg:w="9140523"/><text x="44.5260%" y="511.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (9,140,523 samples, 0.01%)</title><rect x="44.2760%" y="485" width="0.0141%" height="15" fill="rgb(251,196,23)" fg:x="28635841079" fg:w="9140523"/><text x="44.5260%" y="495.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (9,140,523 samples, 0.01%)</title><rect x="44.2760%" y="469" width="0.0141%" height="15" fill="rgb(250,152,24)" fg:x="28635841079" fg:w="9140523"/><text x="44.5260%" y="479.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (9,140,523 samples, 0.01%)</title><rect x="44.2760%" y="453" width="0.0141%" height="15" fill="rgb(209,150,17)" fg:x="28635841079" fg:w="9140523"/><text x="44.5260%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (36,615,261 samples, 0.06%)</title><rect x="44.2532%" y="613" width="0.0566%" height="15" fill="rgb(234,202,34)" fg:x="28621096812" fg:w="36615261"/><text x="44.5032%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (36,615,261 samples, 0.06%)</title><rect x="44.2532%" y="597" width="0.0566%" height="15" fill="rgb(253,148,53)" fg:x="28621096812" fg:w="36615261"/><text x="44.5032%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (24,221,570 samples, 0.04%)</title><rect x="44.2724%" y="581" width="0.0375%" height="15" fill="rgb(218,129,16)" fg:x="28633490503" fg:w="24221570"/><text x="44.5224%" y="591.50"></text></g><g><title>hashbrown::raw::RawTableInner::fix_insert_slot (12,730,471 samples, 0.02%)</title><rect x="44.2902%" y="565" width="0.0197%" height="15" fill="rgb(216,85,19)" fg:x="28644981602" fg:w="12730471"/><text x="44.5402%" y="575.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_empty_or_deleted (12,730,471 samples, 0.02%)</title><rect x="44.2902%" y="549" width="0.0197%" height="15" fill="rgb(235,228,7)" fg:x="28644981602" fg:w="12730471"/><text x="44.5402%" y="559.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (12,730,471 samples, 0.02%)</title><rect x="44.2902%" y="533" width="0.0197%" height="15" fill="rgb(245,175,0)" fg:x="28644981602" fg:w="12730471"/><text x="44.5402%" y="543.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (105,946,018 samples, 0.16%)</title><rect x="44.2532%" y="645" width="0.1638%" height="15" fill="rgb(208,168,36)" fg:x="28621096812" fg:w="105946018"/><text x="44.5032%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (105,946,018 samples, 0.16%)</title><rect x="44.2532%" y="629" width="0.1638%" height="15" fill="rgb(246,171,24)" fg:x="28621096812" fg:w="105946018"/><text x="44.5032%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (67,043,688 samples, 0.10%)</title><rect x="44.3134%" y="613" width="0.1037%" height="15" fill="rgb(215,142,24)" fg:x="28659999142" fg:w="67043688"/><text x="44.5634%" y="623.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (52,866,017 samples, 0.08%)</title><rect x="44.3353%" y="597" width="0.0817%" height="15" fill="rgb(250,187,7)" fg:x="28674176813" fg:w="52866017"/><text x="44.5853%" y="607.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (52,866,017 samples, 0.08%)</title><rect x="44.3353%" y="581" width="0.0817%" height="15" fill="rgb(228,66,33)" fg:x="28674176813" fg:w="52866017"/><text x="44.5853%" y="591.50"></text></g><g><title>core::ptr::write (52,866,017 samples, 0.08%)</title><rect x="44.3353%" y="565" width="0.0817%" height="15" fill="rgb(234,215,21)" fg:x="28674176813" fg:w="52866017"/><text x="44.5853%" y="575.50"></text></g><g><title>json_parser::Parser::parse (1,462,402,863 samples, 2.26%)</title><rect x="42.1595%" y="677" width="2.2611%" height="15" fill="rgb(222,191,20)" fg:x="27266954054" fg:w="1462402863"/><text x="42.4095%" y="687.50">j..</text></g><g><title>json_parser::Parser::parse_object (428,546,511 samples, 0.66%)</title><rect x="43.7580%" y="661" width="0.6626%" height="15" fill="rgb(245,79,54)" fg:x="28300810406" fg:w="428546511"/><text x="44.0080%" y="671.50"></text></g><g><title>&lt;rayon::iter::reduce::ReduceConsumer&lt;R,ID&gt; as rayon::iter::plumbing::Reducer&lt;T&gt;&gt;::reduce (8,629,517 samples, 0.01%)</title><rect x="44.4206%" y="661" width="0.0133%" height="15" fill="rgb(240,10,37)" fg:x="28729356917" fg:w="8629517"/><text x="44.6706%" y="671.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::bootstrap::_{{closure}} (8,629,517 samples, 0.01%)</title><rect x="44.4206%" y="645" width="0.0133%" height="15" fill="rgb(214,192,32)" fg:x="28729356917" fg:w="8629517"/><text x="44.6706%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::vec::Vec&lt;f64&gt;,alloc::vec::Vec&lt;f64&gt;,alloc::vec::Vec&lt;f64&gt;,alloc::vec::Vec&lt;f64&gt;)&gt; (8,629,491 samples, 0.01%)</title><rect x="44.4206%" y="629" width="0.0133%" height="15" fill="rgb(209,36,54)" fg:x="28729356943" fg:w="8629491"/><text x="44.6706%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;f64&gt;&gt; (8,629,491 samples, 0.01%)</title><rect x="44.4206%" y="613" width="0.0133%" height="15" fill="rgb(220,10,11)" fg:x="28729356943" fg:w="8629491"/><text x="44.6706%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f64&gt;&gt; (8,629,491 samples, 0.01%)</title><rect x="44.4206%" y="597" width="0.0133%" height="15" fill="rgb(221,106,17)" fg:x="28729356943" fg:w="8629491"/><text x="44.6706%" y="607.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8,629,491 samples, 0.01%)</title><rect x="44.4206%" y="581" width="0.0133%" height="15" fill="rgb(251,142,44)" fg:x="28729356943" fg:w="8629491"/><text x="44.6706%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (8,629,491 samples, 0.01%)</title><rect x="44.4206%" y="565" width="0.0133%" height="15" fill="rgb(238,13,15)" fg:x="28729356943" fg:w="8629491"/><text x="44.6706%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8,629,491 samples, 0.01%)</title><rect x="44.4206%" y="549" width="0.0133%" height="15" fill="rgb(208,107,27)" fg:x="28729356943" fg:w="8629491"/><text x="44.6706%" y="559.50"></text></g><g><title>alloc::alloc::dealloc (8,629,491 samples, 0.01%)</title><rect x="44.4206%" y="533" width="0.0133%" height="15" fill="rgb(205,136,37)" fg:x="28729356943" fg:w="8629491"/><text x="44.6706%" y="543.50"></text></g><g><title>__rdl_dealloc (8,629,491 samples, 0.01%)</title><rect x="44.4206%" y="517" width="0.0133%" height="15" fill="rgb(250,205,27)" fg:x="28729356943" fg:w="8629491"/><text x="44.6706%" y="527.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (8,629,491 samples, 0.01%)</title><rect x="44.4206%" y="501" width="0.0133%" height="15" fill="rgb(210,80,43)" fg:x="28729356943" fg:w="8629491"/><text x="44.6706%" y="511.50"></text></g><g><title>cfree (8,629,491 samples, 0.01%)</title><rect x="44.4206%" y="485" width="0.0133%" height="15" fill="rgb(247,160,36)" fg:x="28729356943" fg:w="8629491"/><text x="44.6706%" y="495.50"></text></g><g><title>[libc.so.6] (8,629,491 samples, 0.01%)</title><rect x="44.4206%" y="469" width="0.0133%" height="15" fill="rgb(234,13,49)" fg:x="28729356943" fg:w="8629491"/><text x="44.6706%" y="479.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (36,475,700 samples, 0.06%)</title><rect x="44.4340%" y="501" width="0.0564%" height="15" fill="rgb(234,122,0)" fg:x="28737986434" fg:w="36475700"/><text x="44.6840%" y="511.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (544,005,231 samples, 0.84%)</title><rect x="44.4968%" y="469" width="0.8411%" height="15" fill="rgb(207,146,38)" fg:x="28778640837" fg:w="544005231"/><text x="44.7468%" y="479.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (544,005,231 samples, 0.84%)</title><rect x="44.4968%" y="453" width="0.8411%" height="15" fill="rgb(207,177,25)" fg:x="28778640837" fg:w="544005231"/><text x="44.7468%" y="463.50"></text></g><g><title>exp (539,662,639 samples, 0.83%)</title><rect x="44.5036%" y="437" width="0.8344%" height="15" fill="rgb(211,178,42)" fg:x="28782983429" fg:w="539662639"/><text x="44.7536%" y="447.50"></text></g><g><title>[libm.so.6] (390,315,232 samples, 0.60%)</title><rect x="44.7345%" y="421" width="0.6035%" height="15" fill="rgb(230,69,54)" fg:x="28932330836" fg:w="390315232"/><text x="44.9845%" y="431.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::powi (21,789,810 samples, 0.03%)</title><rect x="45.3380%" y="469" width="0.0337%" height="15" fill="rgb(214,135,41)" fg:x="29322646068" fg:w="21789810"/><text x="45.5880%" y="479.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::powi (21,789,810 samples, 0.03%)</title><rect x="45.3380%" y="453" width="0.0337%" height="15" fill="rgb(237,67,25)" fg:x="29322646068" fg:w="21789810"/><text x="45.5880%" y="463.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (801,555,330 samples, 1.24%)</title><rect x="44.4904%" y="485" width="1.2393%" height="15" fill="rgb(222,189,50)" fg:x="28774462134" fg:w="801555330"/><text x="44.7404%" y="495.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::sqrt (227,252,905 samples, 0.35%)</title><rect x="45.3784%" y="469" width="0.3514%" height="15" fill="rgb(245,148,34)" fg:x="29348764559" fg:w="227252905"/><text x="45.6284%" y="479.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::sqrt (227,252,905 samples, 0.35%)</title><rect x="45.3784%" y="453" width="0.3514%" height="15" fill="rgb(222,29,6)" fg:x="29348764559" fg:w="227252905"/><text x="45.6284%" y="463.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (974,629,886 samples, 1.51%)</title><rect x="44.4340%" y="645" width="1.5069%" height="15" fill="rgb(221,189,43)" fg:x="28737986434" fg:w="974629886"/><text x="44.6840%" y="655.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (974,629,886 samples, 1.51%)</title><rect x="44.4340%" y="629" width="1.5069%" height="15" fill="rgb(207,36,27)" fg:x="28737986434" fg:w="974629886"/><text x="44.6840%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (974,629,886 samples, 1.51%)</title><rect x="44.4340%" y="613" width="1.5069%" height="15" fill="rgb(217,90,24)" fg:x="28737986434" fg:w="974629886"/><text x="44.6840%" y="623.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (974,629,886 samples, 1.51%)</title><rect x="44.4340%" y="597" width="1.5069%" height="15" fill="rgb(224,66,35)" fg:x="28737986434" fg:w="974629886"/><text x="44.6840%" y="607.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (974,629,886 samples, 1.51%)</title><rect x="44.4340%" y="581" width="1.5069%" height="15" fill="rgb(221,13,50)" fg:x="28737986434" fg:w="974629886"/><text x="44.6840%" y="591.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (974,629,886 samples, 1.51%)</title><rect x="44.4340%" y="565" width="1.5069%" height="15" fill="rgb(236,68,49)" fg:x="28737986434" fg:w="974629886"/><text x="44.6840%" y="575.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::_{{closure}} (974,629,886 samples, 1.51%)</title><rect x="44.4340%" y="549" width="1.5069%" height="15" fill="rgb(229,146,28)" fg:x="28737986434" fg:w="974629886"/><text x="44.6840%" y="559.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (974,629,886 samples, 1.51%)</title><rect x="44.4340%" y="533" width="1.5069%" height="15" fill="rgb(225,31,38)" fg:x="28737986434" fg:w="974629886"/><text x="44.6840%" y="543.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (974,629,886 samples, 1.51%)</title><rect x="44.4340%" y="517" width="1.5069%" height="15" fill="rgb(250,208,3)" fg:x="28737986434" fg:w="974629886"/><text x="44.6840%" y="527.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::_{{closure}} (938,154,186 samples, 1.45%)</title><rect x="44.4904%" y="501" width="1.4506%" height="15" fill="rgb(246,54,23)" fg:x="28774462134" fg:w="938154186"/><text x="44.7404%" y="511.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (136,598,856 samples, 0.21%)</title><rect x="45.7297%" y="485" width="0.2112%" height="15" fill="rgb(243,76,11)" fg:x="29576017464" fg:w="136598856"/><text x="45.9797%" y="495.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::Try&gt;::branch (8,641,442 samples, 0.01%)</title><rect x="45.9409%" y="549" width="0.0134%" height="15" fill="rgb(245,21,50)" fg:x="29712616320" fg:w="8641442"/><text x="46.1909%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::_{{closure}} (8,745,937 samples, 0.01%)</title><rect x="45.9674%" y="533" width="0.0135%" height="15" fill="rgb(228,9,43)" fg:x="29729736491" fg:w="8745937"/><text x="46.2174%" y="543.50"></text></g><g><title>core::ops::try_trait::NeverShortCircuit&lt;T&gt;::wrap_mut_2::_{{closure}} (8,745,937 samples, 0.01%)</title><rect x="45.9674%" y="517" width="0.0135%" height="15" fill="rgb(208,100,47)" fg:x="29729736491" fg:w="8745937"/><text x="46.2174%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (8,745,937 samples, 0.01%)</title><rect x="45.9674%" y="501" width="0.0135%" height="15" fill="rgb(232,26,8)" fg:x="29729736491" fg:w="8745937"/><text x="46.2174%" y="511.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::bootstrap::_{{closure}} (8,745,937 samples, 0.01%)</title><rect x="45.9674%" y="485" width="0.0135%" height="15" fill="rgb(216,166,38)" fg:x="29729736491" fg:w="8745937"/><text x="46.2174%" y="495.50"></text></g><g><title>&lt;(alloc::vec::Vec&lt;A&gt;,alloc::vec::Vec&lt;B&gt;,alloc::vec::Vec&lt;C&gt;,alloc::vec::Vec&lt;D&gt;) as criterion::stats::tuple::TupledDistributionsBuilder&gt;::push (8,745,937 samples, 0.01%)</title><rect x="45.9674%" y="469" width="0.0135%" height="15" fill="rgb(251,202,51)" fg:x="29729736491" fg:w="8745937"/><text x="46.2174%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (8,745,937 samples, 0.01%)</title><rect x="45.9674%" y="453" width="0.0135%" height="15" fill="rgb(254,216,34)" fg:x="29729736491" fg:w="8745937"/><text x="46.2174%" y="463.50"></text></g><g><title>criterion::stats::univariate::mixed::bootstrap::_{{closure}} (7,031,298 samples, 0.01%)</title><rect x="45.9809%" y="501" width="0.0109%" height="15" fill="rgb(251,32,27)" fg:x="29738482428" fg:w="7031298"/><text x="46.2309%" y="511.50"></text></g><g><title>core::ops::function::Fn::call (8,606,642 samples, 0.01%)</title><rect x="45.9918%" y="485" width="0.0133%" height="15" fill="rgb(208,127,28)" fg:x="29745513726" fg:w="8606642"/><text x="46.2418%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (8,606,642 samples, 0.01%)</title><rect x="45.9918%" y="469" width="0.0133%" height="15" fill="rgb(224,137,22)" fg:x="29745513726" fg:w="8606642"/><text x="46.2418%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (8,606,642 samples, 0.01%)</title><rect x="45.9918%" y="453" width="0.0133%" height="15" fill="rgb(254,70,32)" fg:x="29745513726" fg:w="8606642"/><text x="46.2418%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (8,606,642 samples, 0.01%)</title><rect x="45.9918%" y="437" width="0.0133%" height="15" fill="rgb(229,75,37)" fg:x="29745513726" fg:w="8606642"/><text x="46.2418%" y="447.50"></text></g><g><title>criterion::analysis::estimates::stats (8,606,642 samples, 0.01%)</title><rect x="45.9918%" y="421" width="0.0133%" height="15" fill="rgb(252,64,23)" fg:x="29745513726" fg:w="8606642"/><text x="46.2418%" y="431.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::mean (8,606,642 samples, 0.01%)</title><rect x="45.9918%" y="405" width="0.0133%" height="15" fill="rgb(232,162,48)" fg:x="29745513726" fg:w="8606642"/><text x="46.2418%" y="415.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::sum (8,606,642 samples, 0.01%)</title><rect x="45.9918%" y="389" width="0.0133%" height="15" fill="rgb(246,160,12)" fg:x="29745513726" fg:w="8606642"/><text x="46.2418%" y="399.50"></text></g><g><title>criterion::stats::sum (8,606,642 samples, 0.01%)</title><rect x="45.9918%" y="373" width="0.0133%" height="15" fill="rgb(247,166,0)" fg:x="29745513726" fg:w="8606642"/><text x="46.2418%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8,606,642 samples, 0.01%)</title><rect x="45.9918%" y="357" width="0.0133%" height="15" fill="rgb(249,219,21)" fg:x="29745513726" fg:w="8606642"/><text x="46.2418%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8,606,642 samples, 0.01%)</title><rect x="45.9918%" y="341" width="0.0133%" height="15" fill="rgb(205,209,3)" fg:x="29745513726" fg:w="8606642"/><text x="46.2418%" y="351.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8,606,642 samples, 0.01%)</title><rect x="45.9918%" y="325" width="0.0133%" height="15" fill="rgb(243,44,1)" fg:x="29745513726" fg:w="8606642"/><text x="46.2418%" y="335.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (8,606,642 samples, 0.01%)</title><rect x="45.9918%" y="309" width="0.0133%" height="15" fill="rgb(206,159,16)" fg:x="29745513726" fg:w="8606642"/><text x="46.2418%" y="319.50"></text></g><g><title>core::ops::function::FnMut::call_mut (8,606,642 samples, 0.01%)</title><rect x="45.9918%" y="293" width="0.0133%" height="15" fill="rgb(244,77,30)" fg:x="29745513726" fg:w="8606642"/><text x="46.2418%" y="303.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (8,606,642 samples, 0.01%)</title><rect x="45.9918%" y="277" width="0.0133%" height="15" fill="rgb(218,69,12)" fg:x="29745513726" fg:w="8606642"/><text x="46.2418%" y="287.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (8,630,907 samples, 0.01%)</title><rect x="46.0786%" y="469" width="0.0133%" height="15" fill="rgb(212,87,7)" fg:x="29801682569" fg:w="8630907"/><text x="46.3286%" y="479.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (8,630,907 samples, 0.01%)</title><rect x="46.0786%" y="453" width="0.0133%" height="15" fill="rgb(245,114,25)" fg:x="29801682569" fg:w="8630907"/><text x="46.3286%" y="463.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (106,350,556 samples, 0.16%)</title><rect x="45.9409%" y="629" width="0.1644%" height="15" fill="rgb(210,61,42)" fg:x="29712616320" fg:w="106350556"/><text x="46.1909%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (106,350,556 samples, 0.16%)</title><rect x="45.9409%" y="613" width="0.1644%" height="15" fill="rgb(211,52,33)" fg:x="29712616320" fg:w="106350556"/><text x="46.1909%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (106,350,556 samples, 0.16%)</title><rect x="45.9409%" y="597" width="0.1644%" height="15" fill="rgb(234,58,33)" fg:x="29712616320" fg:w="106350556"/><text x="46.1909%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (106,350,556 samples, 0.16%)</title><rect x="45.9409%" y="581" width="0.1644%" height="15" fill="rgb(220,115,36)" fg:x="29712616320" fg:w="106350556"/><text x="46.1909%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (106,350,556 samples, 0.16%)</title><rect x="45.9409%" y="565" width="0.1644%" height="15" fill="rgb(243,153,54)" fg:x="29712616320" fg:w="106350556"/><text x="46.1909%" y="575.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::_{{closure}} (97,709,114 samples, 0.15%)</title><rect x="45.9543%" y="549" width="0.1511%" height="15" fill="rgb(251,47,18)" fg:x="29721257762" fg:w="97709114"/><text x="46.2043%" y="559.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::_{{closure}} (80,484,448 samples, 0.12%)</title><rect x="45.9809%" y="533" width="0.1244%" height="15" fill="rgb(242,102,42)" fg:x="29738482428" fg:w="80484448"/><text x="46.2309%" y="543.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (80,484,448 samples, 0.12%)</title><rect x="45.9809%" y="517" width="0.1244%" height="15" fill="rgb(234,31,38)" fg:x="29738482428" fg:w="80484448"/><text x="46.2309%" y="527.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::bootstrap::_{{closure}} (73,453,150 samples, 0.11%)</title><rect x="45.9918%" y="501" width="0.1136%" height="15" fill="rgb(221,117,51)" fg:x="29745513726" fg:w="73453150"/><text x="46.2418%" y="511.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (64,846,508 samples, 0.10%)</title><rect x="46.0051%" y="485" width="0.1003%" height="15" fill="rgb(212,20,18)" fg:x="29754120368" fg:w="64846508"/><text x="46.2551%" y="495.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1,080,980,462 samples, 1.67%)</title><rect x="44.4340%" y="661" width="1.6714%" height="15" fill="rgb(245,133,36)" fg:x="28737986434" fg:w="1080980462"/><text x="44.6840%" y="671.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (106,350,576 samples, 0.16%)</title><rect x="45.9409%" y="645" width="0.1644%" height="15" fill="rgb(212,6,19)" fg:x="29712616320" fg:w="106350576"/><text x="46.1909%" y="655.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,089,609,980 samples, 1.68%)</title><rect x="44.4206%" y="677" width="1.6847%" height="15" fill="rgb(218,1,36)" fg:x="28729356917" fg:w="1089609980"/><text x="44.6706%" y="687.50"></text></g><g><title>rayon::slice::quicksort::recurse (8,213,660 samples, 0.01%)</title><rect x="46.1117%" y="677" width="0.0127%" height="15" fill="rgb(246,84,54)" fg:x="29823063746" fg:w="8213660"/><text x="46.3617%" y="687.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (12,800,324 samples, 0.02%)</title><rect x="46.1244%" y="677" width="0.0198%" height="15" fill="rgb(242,110,6)" fg:x="29831277406" fg:w="12800324"/><text x="46.3744%" y="687.50"></text></g><g><title>rayon_core::join::join_context::call_b::_{{closure}} (8,486,843 samples, 0.01%)</title><rect x="46.1311%" y="661" width="0.0131%" height="15" fill="rgb(214,47,5)" fg:x="29835590887" fg:w="8486843"/><text x="46.3811%" y="671.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (8,486,843 samples, 0.01%)</title><rect x="46.1311%" y="645" width="0.0131%" height="15" fill="rgb(218,159,25)" fg:x="29835590887" fg:w="8486843"/><text x="46.3811%" y="655.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (8,702,645 samples, 0.01%)</title><rect x="46.1509%" y="565" width="0.0135%" height="15" fill="rgb(215,211,28)" fg:x="29848400222" fg:w="8702645"/><text x="46.4009%" y="575.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (8,702,645 samples, 0.01%)</title><rect x="46.1509%" y="549" width="0.0135%" height="15" fill="rgb(238,59,32)" fg:x="29848400222" fg:w="8702645"/><text x="46.4009%" y="559.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (8,702,645 samples, 0.01%)</title><rect x="46.1509%" y="533" width="0.0135%" height="15" fill="rgb(226,82,3)" fg:x="29848400222" fg:w="8702645"/><text x="46.4009%" y="543.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (8,702,645 samples, 0.01%)</title><rect x="46.1509%" y="517" width="0.0135%" height="15" fill="rgb(240,164,32)" fg:x="29848400222" fg:w="8702645"/><text x="46.4009%" y="527.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (8,702,645 samples, 0.01%)</title><rect x="46.1509%" y="501" width="0.0135%" height="15" fill="rgb(232,46,7)" fg:x="29848400222" fg:w="8702645"/><text x="46.4009%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (8,702,645 samples, 0.01%)</title><rect x="46.1509%" y="485" width="0.0135%" height="15" fill="rgb(229,129,53)" fg:x="29848400222" fg:w="8702645"/><text x="46.4009%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (8,702,645 samples, 0.01%)</title><rect x="46.1509%" y="469" width="0.0135%" height="15" fill="rgb(234,188,29)" fg:x="29848400222" fg:w="8702645"/><text x="46.4009%" y="479.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (8,702,645 samples, 0.01%)</title><rect x="46.1509%" y="453" width="0.0135%" height="15" fill="rgb(246,141,4)" fg:x="29848400222" fg:w="8702645"/><text x="46.4009%" y="463.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (8,702,645 samples, 0.01%)</title><rect x="46.1509%" y="437" width="0.0135%" height="15" fill="rgb(229,23,39)" fg:x="29848400222" fg:w="8702645"/><text x="46.4009%" y="447.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::_{{closure}} (8,702,645 samples, 0.01%)</title><rect x="46.1509%" y="421" width="0.0135%" height="15" fill="rgb(206,12,3)" fg:x="29848400222" fg:w="8702645"/><text x="46.4009%" y="431.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (8,702,645 samples, 0.01%)</title><rect x="46.1509%" y="405" width="0.0135%" height="15" fill="rgb(252,226,20)" fg:x="29848400222" fg:w="8702645"/><text x="46.4009%" y="415.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8,702,645 samples, 0.01%)</title><rect x="46.1509%" y="389" width="0.0135%" height="15" fill="rgb(216,123,35)" fg:x="29848400222" fg:w="8702645"/><text x="46.4009%" y="399.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::_{{closure}} (8,702,645 samples, 0.01%)</title><rect x="46.1509%" y="373" width="0.0135%" height="15" fill="rgb(212,68,40)" fg:x="29848400222" fg:w="8702645"/><text x="46.4009%" y="383.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (8,702,645 samples, 0.01%)</title><rect x="46.1509%" y="357" width="0.0135%" height="15" fill="rgb(254,125,32)" fg:x="29848400222" fg:w="8702645"/><text x="46.4009%" y="367.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (8,702,645 samples, 0.01%)</title><rect x="46.1509%" y="341" width="0.0135%" height="15" fill="rgb(253,97,22)" fg:x="29848400222" fg:w="8702645"/><text x="46.4009%" y="351.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (8,702,645 samples, 0.01%)</title><rect x="46.1509%" y="325" width="0.0135%" height="15" fill="rgb(241,101,14)" fg:x="29848400222" fg:w="8702645"/><text x="46.4009%" y="335.50"></text></g><g><title>exp (8,702,645 samples, 0.01%)</title><rect x="46.1509%" y="309" width="0.0135%" height="15" fill="rgb(238,103,29)" fg:x="29848400222" fg:w="8702645"/><text x="46.4009%" y="319.50"></text></g><g><title>[libm.so.6] (8,702,645 samples, 0.01%)</title><rect x="46.1509%" y="293" width="0.0135%" height="15" fill="rgb(233,195,47)" fg:x="29848400222" fg:w="8702645"/><text x="46.4009%" y="303.50"></text></g><g><title>rayon::slice::quicksort::partition (17,300,459 samples, 0.03%)</title><rect x="46.1695%" y="517" width="0.0267%" height="15" fill="rgb(246,218,30)" fg:x="29860426543" fg:w="17300459"/><text x="46.4195%" y="527.50"></text></g><g><title>rayon::slice::quicksort::partition_in_blocks (17,300,459 samples, 0.03%)</title><rect x="46.1695%" y="501" width="0.0267%" height="15" fill="rgb(219,145,47)" fg:x="29860426543" fg:w="17300459"/><text x="46.4195%" y="511.50"></text></g><g><title>rayon_core::join::join_context::_{{closure}} (35,940,214 samples, 0.06%)</title><rect x="46.1442%" y="677" width="0.0556%" height="15" fill="rgb(243,12,26)" fg:x="29844077730" fg:w="35940214"/><text x="46.3942%" y="687.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (31,617,722 samples, 0.05%)</title><rect x="46.1509%" y="661" width="0.0489%" height="15" fill="rgb(214,87,16)" fg:x="29848400222" fg:w="31617722"/><text x="46.4009%" y="671.50"></text></g><g><title>std::panic::catch_unwind (31,617,722 samples, 0.05%)</title><rect x="46.1509%" y="645" width="0.0489%" height="15" fill="rgb(208,99,42)" fg:x="29848400222" fg:w="31617722"/><text x="46.4009%" y="655.50"></text></g><g><title>std::panicking::try (31,617,722 samples, 0.05%)</title><rect x="46.1509%" y="629" width="0.0489%" height="15" fill="rgb(253,99,2)" fg:x="29848400222" fg:w="31617722"/><text x="46.4009%" y="639.50"></text></g><g><title>std::panicking::try::do_call (31,617,722 samples, 0.05%)</title><rect x="46.1509%" y="613" width="0.0489%" height="15" fill="rgb(220,168,23)" fg:x="29848400222" fg:w="31617722"/><text x="46.4009%" y="623.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (31,617,722 samples, 0.05%)</title><rect x="46.1509%" y="597" width="0.0489%" height="15" fill="rgb(242,38,24)" fg:x="29848400222" fg:w="31617722"/><text x="46.4009%" y="607.50"></text></g><g><title>rayon_core::join::join_context::call_a::_{{closure}} (31,617,722 samples, 0.05%)</title><rect x="46.1509%" y="581" width="0.0489%" height="15" fill="rgb(225,182,9)" fg:x="29848400222" fg:w="31617722"/><text x="46.4009%" y="591.50"></text></g><g><title>rayon_core::join::join::call::_{{closure}} (22,915,077 samples, 0.04%)</title><rect x="46.1643%" y="565" width="0.0354%" height="15" fill="rgb(243,178,37)" fg:x="29857102867" fg:w="22915077"/><text x="46.4143%" y="575.50"></text></g><g><title>rayon::slice::quicksort::recurse::_{{closure}} (22,915,077 samples, 0.04%)</title><rect x="46.1643%" y="549" width="0.0354%" height="15" fill="rgb(232,139,19)" fg:x="29857102867" fg:w="22915077"/><text x="46.4143%" y="559.50"></text></g><g><title>rayon::slice::quicksort::recurse (22,915,077 samples, 0.04%)</title><rect x="46.1643%" y="533" width="0.0354%" height="15" fill="rgb(225,201,24)" fg:x="29857102867" fg:w="22915077"/><text x="46.4143%" y="543.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (6,926,844 samples, 0.01%)</title><rect x="46.1998%" y="661" width="0.0107%" height="15" fill="rgb(221,47,46)" fg:x="29880017944" fg:w="6926844"/><text x="46.4498%" y="671.50"></text></g><g><title>rayon_core::job::JobRef::execute (6,926,844 samples, 0.01%)</title><rect x="46.1998%" y="645" width="0.0107%" height="15" fill="rgb(249,23,13)" fg:x="29880017944" fg:w="6926844"/><text x="46.4498%" y="655.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (6,926,844 samples, 0.01%)</title><rect x="46.1998%" y="629" width="0.0107%" height="15" fill="rgb(219,9,5)" fg:x="29880017944" fg:w="6926844"/><text x="46.4498%" y="639.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (6,926,844 samples, 0.01%)</title><rect x="46.1998%" y="613" width="0.0107%" height="15" fill="rgb(254,171,16)" fg:x="29880017944" fg:w="6926844"/><text x="46.4498%" y="623.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (6,926,844 samples, 0.01%)</title><rect x="46.1998%" y="597" width="0.0107%" height="15" fill="rgb(230,171,20)" fg:x="29880017944" fg:w="6926844"/><text x="46.4498%" y="607.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (6,926,844 samples, 0.01%)</title><rect x="46.1998%" y="581" width="0.0107%" height="15" fill="rgb(210,71,41)" fg:x="29880017944" fg:w="6926844"/><text x="46.4498%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (6,926,844 samples, 0.01%)</title><rect x="46.1998%" y="565" width="0.0107%" height="15" fill="rgb(206,173,20)" fg:x="29880017944" fg:w="6926844"/><text x="46.4498%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (6,926,844 samples, 0.01%)</title><rect x="46.1998%" y="549" width="0.0107%" height="15" fill="rgb(233,88,34)" fg:x="29880017944" fg:w="6926844"/><text x="46.4498%" y="559.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (6,926,844 samples, 0.01%)</title><rect x="46.1998%" y="533" width="0.0107%" height="15" fill="rgb(223,209,46)" fg:x="29880017944" fg:w="6926844"/><text x="46.4498%" y="543.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (6,926,844 samples, 0.01%)</title><rect x="46.1998%" y="517" width="0.0107%" height="15" fill="rgb(250,43,18)" fg:x="29880017944" fg:w="6926844"/><text x="46.4498%" y="527.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::_{{closure}} (6,926,844 samples, 0.01%)</title><rect x="46.1998%" y="501" width="0.0107%" height="15" fill="rgb(208,13,10)" fg:x="29880017944" fg:w="6926844"/><text x="46.4498%" y="511.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (6,926,844 samples, 0.01%)</title><rect x="46.1998%" y="485" width="0.0107%" height="15" fill="rgb(212,200,36)" fg:x="29880017944" fg:w="6926844"/><text x="46.4498%" y="495.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6,926,844 samples, 0.01%)</title><rect x="46.1998%" y="469" width="0.0107%" height="15" fill="rgb(225,90,30)" fg:x="29880017944" fg:w="6926844"/><text x="46.4498%" y="479.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::_{{closure}} (6,926,844 samples, 0.01%)</title><rect x="46.1998%" y="453" width="0.0107%" height="15" fill="rgb(236,182,39)" fg:x="29880017944" fg:w="6926844"/><text x="46.4498%" y="463.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (6,926,844 samples, 0.01%)</title><rect x="46.1998%" y="437" width="0.0107%" height="15" fill="rgb(212,144,35)" fg:x="29880017944" fg:w="6926844"/><text x="46.4498%" y="447.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (6,926,844 samples, 0.01%)</title><rect x="46.1998%" y="421" width="0.0107%" height="15" fill="rgb(228,63,44)" fg:x="29880017944" fg:w="6926844"/><text x="46.4498%" y="431.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (6,926,844 samples, 0.01%)</title><rect x="46.1998%" y="405" width="0.0107%" height="15" fill="rgb(228,109,6)" fg:x="29880017944" fg:w="6926844"/><text x="46.4498%" y="415.50"></text></g><g><title>exp (6,926,844 samples, 0.01%)</title><rect x="46.1998%" y="389" width="0.0107%" height="15" fill="rgb(238,117,24)" fg:x="29880017944" fg:w="6926844"/><text x="46.4498%" y="399.50"></text></g><g><title>[libm.so.6] (6,926,844 samples, 0.01%)</title><rect x="46.1998%" y="373" width="0.0107%" height="15" fill="rgb(242,26,26)" fg:x="29880017944" fg:w="6926844"/><text x="46.4498%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (8,285,474 samples, 0.01%)</title><rect x="46.2203%" y="501" width="0.0128%" height="15" fill="rgb(221,92,48)" fg:x="29893320428" fg:w="8285474"/><text x="46.4703%" y="511.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal::_{{closure}} (8,285,474 samples, 0.01%)</title><rect x="46.2203%" y="485" width="0.0128%" height="15" fill="rgb(209,209,32)" fg:x="29893320428" fg:w="8285474"/><text x="46.4703%" y="495.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (8,285,474 samples, 0.01%)</title><rect x="46.2203%" y="469" width="0.0128%" height="15" fill="rgb(221,70,22)" fg:x="29893320428" fg:w="8285474"/><text x="46.4703%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (14,433,276 samples, 0.02%)</title><rect x="46.2108%" y="597" width="0.0223%" height="15" fill="rgb(248,145,5)" fg:x="29887173210" fg:w="14433276"/><text x="46.4608%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (14,433,276 samples, 0.02%)</title><rect x="46.2108%" y="581" width="0.0223%" height="15" fill="rgb(226,116,26)" fg:x="29887173210" fg:w="14433276"/><text x="46.4608%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (14,433,276 samples, 0.02%)</title><rect x="46.2108%" y="565" width="0.0223%" height="15" fill="rgb(244,5,17)" fg:x="29887173210" fg:w="14433276"/><text x="46.4608%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (14,433,276 samples, 0.02%)</title><rect x="46.2108%" y="549" width="0.0223%" height="15" fill="rgb(252,159,33)" fg:x="29887173210" fg:w="14433276"/><text x="46.4608%" y="559.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (8,286,058 samples, 0.01%)</title><rect x="46.2203%" y="533" width="0.0128%" height="15" fill="rgb(206,71,0)" fg:x="29893320428" fg:w="8286058"/><text x="46.4703%" y="543.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::_{{closure}} (8,286,058 samples, 0.01%)</title><rect x="46.2203%" y="517" width="0.0128%" height="15" fill="rgb(233,118,54)" fg:x="29893320428" fg:w="8286058"/><text x="46.4703%" y="527.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work (19,006,069 samples, 0.03%)</title><rect x="46.2105%" y="661" width="0.0294%" height="15" fill="rgb(234,83,48)" fg:x="29886944788" fg:w="19006069"/><text x="46.4605%" y="671.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (19,006,069 samples, 0.03%)</title><rect x="46.2105%" y="645" width="0.0294%" height="15" fill="rgb(228,3,54)" fg:x="29886944788" fg:w="19006069"/><text x="46.4605%" y="655.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work::_{{closure}} (19,006,069 samples, 0.03%)</title><rect x="46.2105%" y="629" width="0.0294%" height="15" fill="rgb(226,155,13)" fg:x="29886944788" fg:w="19006069"/><text x="46.4605%" y="639.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal (18,777,647 samples, 0.03%)</title><rect x="46.2108%" y="613" width="0.0290%" height="15" fill="rgb(241,28,37)" fg:x="29887173210" fg:w="18777647"/><text x="46.4608%" y="623.50"></text></g><g><title>rayon_core::sleep::Sleep::no_work_found (9,380,399 samples, 0.01%)</title><rect x="46.2399%" y="661" width="0.0145%" height="15" fill="rgb(233,93,10)" fg:x="29905950857" fg:w="9380399"/><text x="46.4899%" y="671.50"></text></g><g><title>std::thread::yield_now (9,380,399 samples, 0.01%)</title><rect x="46.2399%" y="645" width="0.0145%" height="15" fill="rgb(225,113,19)" fg:x="29905950857" fg:w="9380399"/><text x="46.4899%" y="655.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::yield_now (9,380,399 samples, 0.01%)</title><rect x="46.2399%" y="629" width="0.0145%" height="15" fill="rgb(241,2,18)" fg:x="29905950857" fg:w="9380399"/><text x="46.4899%" y="639.50"></text></g><g><title>__sched_yield (9,380,399 samples, 0.01%)</title><rect x="46.2399%" y="613" width="0.0145%" height="15" fill="rgb(228,207,21)" fg:x="29905950857" fg:w="9380399"/><text x="46.4899%" y="623.50"></text></g><g><title>[unknown] (9,380,399 samples, 0.01%)</title><rect x="46.2399%" y="597" width="0.0145%" height="15" fill="rgb(213,211,35)" fg:x="29905950857" fg:w="9380399"/><text x="46.4899%" y="607.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (12,446,868 samples, 0.02%)</title><rect x="46.2544%" y="437" width="0.0192%" height="15" fill="rgb(209,83,10)" fg:x="29915331256" fg:w="12446868"/><text x="46.5044%" y="447.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (12,446,868 samples, 0.02%)</title><rect x="46.2544%" y="421" width="0.0192%" height="15" fill="rgb(209,164,1)" fg:x="29915331256" fg:w="12446868"/><text x="46.5044%" y="431.50"></text></g><g><title>exp (12,446,868 samples, 0.02%)</title><rect x="46.2544%" y="405" width="0.0192%" height="15" fill="rgb(213,184,43)" fg:x="29915331256" fg:w="12446868"/><text x="46.5044%" y="415.50"></text></g><g><title>[libm.so.6] (12,446,868 samples, 0.02%)</title><rect x="46.2544%" y="389" width="0.0192%" height="15" fill="rgb(231,61,34)" fg:x="29915331256" fg:w="12446868"/><text x="46.5044%" y="399.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (64,985,533 samples, 0.10%)</title><rect x="46.1998%" y="677" width="0.1005%" height="15" fill="rgb(235,75,3)" fg:x="29880017944" fg:w="64985533"/><text x="46.4498%" y="687.50"></text></g><g><title>rayon_core::sleep::Sleep::work_found (29,672,221 samples, 0.05%)</title><rect x="46.2544%" y="661" width="0.0459%" height="15" fill="rgb(220,106,47)" fg:x="29915331256" fg:w="29672221"/><text x="46.5044%" y="671.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (29,672,221 samples, 0.05%)</title><rect x="46.2544%" y="645" width="0.0459%" height="15" fill="rgb(210,196,33)" fg:x="29915331256" fg:w="29672221"/><text x="46.5044%" y="655.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (29,672,221 samples, 0.05%)</title><rect x="46.2544%" y="629" width="0.0459%" height="15" fill="rgb(229,154,42)" fg:x="29915331256" fg:w="29672221"/><text x="46.5044%" y="639.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (29,672,221 samples, 0.05%)</title><rect x="46.2544%" y="613" width="0.0459%" height="15" fill="rgb(228,114,26)" fg:x="29915331256" fg:w="29672221"/><text x="46.5044%" y="623.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (29,672,221 samples, 0.05%)</title><rect x="46.2544%" y="597" width="0.0459%" height="15" fill="rgb(208,144,1)" fg:x="29915331256" fg:w="29672221"/><text x="46.5044%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (29,672,221 samples, 0.05%)</title><rect x="46.2544%" y="581" width="0.0459%" height="15" fill="rgb(239,112,37)" fg:x="29915331256" fg:w="29672221"/><text x="46.5044%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (29,672,221 samples, 0.05%)</title><rect x="46.2544%" y="565" width="0.0459%" height="15" fill="rgb(210,96,50)" fg:x="29915331256" fg:w="29672221"/><text x="46.5044%" y="575.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (29,672,221 samples, 0.05%)</title><rect x="46.2544%" y="549" width="0.0459%" height="15" fill="rgb(222,178,2)" fg:x="29915331256" fg:w="29672221"/><text x="46.5044%" y="559.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (29,672,221 samples, 0.05%)</title><rect x="46.2544%" y="533" width="0.0459%" height="15" fill="rgb(226,74,18)" fg:x="29915331256" fg:w="29672221"/><text x="46.5044%" y="543.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::_{{closure}} (29,672,221 samples, 0.05%)</title><rect x="46.2544%" y="517" width="0.0459%" height="15" fill="rgb(225,67,54)" fg:x="29915331256" fg:w="29672221"/><text x="46.5044%" y="527.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (29,672,221 samples, 0.05%)</title><rect x="46.2544%" y="501" width="0.0459%" height="15" fill="rgb(251,92,32)" fg:x="29915331256" fg:w="29672221"/><text x="46.5044%" y="511.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (29,672,221 samples, 0.05%)</title><rect x="46.2544%" y="485" width="0.0459%" height="15" fill="rgb(228,149,22)" fg:x="29915331256" fg:w="29672221"/><text x="46.5044%" y="495.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::_{{closure}} (29,672,221 samples, 0.05%)</title><rect x="46.2544%" y="469" width="0.0459%" height="15" fill="rgb(243,54,13)" fg:x="29915331256" fg:w="29672221"/><text x="46.5044%" y="479.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (29,672,221 samples, 0.05%)</title><rect x="46.2544%" y="453" width="0.0459%" height="15" fill="rgb(243,180,28)" fg:x="29915331256" fg:w="29672221"/><text x="46.5044%" y="463.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::sqrt (13,031,414 samples, 0.02%)</title><rect x="46.2801%" y="437" width="0.0201%" height="15" fill="rgb(208,167,24)" fg:x="29931972063" fg:w="13031414"/><text x="46.5301%" y="447.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::sqrt (13,031,414 samples, 0.02%)</title><rect x="46.2801%" y="421" width="0.0201%" height="15" fill="rgb(245,73,45)" fg:x="29931972063" fg:w="13031414"/><text x="46.5301%" y="431.50"></text></g><g><title>[unknown] (14,018,108,253 samples, 21.67%)</title><rect x="24.6327%" y="693" width="21.6745%" height="15" fill="rgb(237,203,48)" fg:x="15931368232" fg:w="14018108253"/><text x="24.8827%" y="703.50">[unknown]</text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (16,489,816 samples, 0.03%)</title><rect x="46.4197%" y="645" width="0.0255%" height="15" fill="rgb(211,197,16)" fg:x="30022286497" fg:w="16489816"/><text x="46.6697%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (10,045,596 samples, 0.02%)</title><rect x="46.4452%" y="645" width="0.0155%" height="15" fill="rgb(243,99,51)" fg:x="30038776313" fg:w="10045596"/><text x="46.6952%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (120,551,639 samples, 0.19%)</title><rect x="46.3133%" y="693" width="0.1864%" height="15" fill="rgb(215,123,29)" fg:x="29953431982" fg:w="120551639"/><text x="46.5633%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (51,697,124 samples, 0.08%)</title><rect x="46.4197%" y="677" width="0.0799%" height="15" fill="rgb(239,186,37)" fg:x="30022286497" fg:w="51697124"/><text x="46.6697%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (51,697,124 samples, 0.08%)</title><rect x="46.4197%" y="661" width="0.0799%" height="15" fill="rgb(252,136,39)" fg:x="30022286497" fg:w="51697124"/><text x="46.6697%" y="671.50"></text></g><g><title>core::cmp::max (18,325,300 samples, 0.03%)</title><rect x="46.4713%" y="645" width="0.0283%" height="15" fill="rgb(223,213,32)" fg:x="30055658321" fg:w="18325300"/><text x="46.7213%" y="655.50"></text></g><g><title>core::cmp::Ord::max (18,325,300 samples, 0.03%)</title><rect x="46.4713%" y="629" width="0.0283%" height="15" fill="rgb(233,115,5)" fg:x="30055658321" fg:w="18325300"/><text x="46.7213%" y="639.50"></text></g><g><title>[unknown] (27,736,203 samples, 0.04%)</title><rect x="47.1045%" y="565" width="0.0429%" height="15" fill="rgb(207,226,44)" fg:x="30465194141" fg:w="27736203"/><text x="47.3545%" y="575.50"></text></g><g><title>[libc.so.6] (388,687,198 samples, 0.60%)</title><rect x="46.5527%" y="581" width="0.6010%" height="15" fill="rgb(208,126,0)" fg:x="30108251076" fg:w="388687198"/><text x="46.8027%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (393,029,563 samples, 0.61%)</title><rect x="46.5459%" y="677" width="0.6077%" height="15" fill="rgb(244,66,21)" fg:x="30103909000" fg:w="393029563"/><text x="46.7959%" y="687.50"></text></g><g><title>alloc::alloc::Global::grow_impl (393,029,563 samples, 0.61%)</title><rect x="46.5459%" y="661" width="0.6077%" height="15" fill="rgb(222,97,12)" fg:x="30103909000" fg:w="393029563"/><text x="46.7959%" y="671.50"></text></g><g><title>alloc::alloc::realloc (393,029,563 samples, 0.61%)</title><rect x="46.5459%" y="645" width="0.6077%" height="15" fill="rgb(219,213,19)" fg:x="30103909000" fg:w="393029563"/><text x="46.7959%" y="655.50"></text></g><g><title>__rdl_realloc (393,029,563 samples, 0.61%)</title><rect x="46.5459%" y="629" width="0.6077%" height="15" fill="rgb(252,169,30)" fg:x="30103909000" fg:w="393029563"/><text x="46.7959%" y="639.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (393,029,563 samples, 0.61%)</title><rect x="46.5459%" y="613" width="0.6077%" height="15" fill="rgb(206,32,51)" fg:x="30103909000" fg:w="393029563"/><text x="46.7959%" y="623.50"></text></g><g><title>realloc (393,029,563 samples, 0.61%)</title><rect x="46.5459%" y="597" width="0.6077%" height="15" fill="rgb(250,172,42)" fg:x="30103909000" fg:w="393029563"/><text x="46.7959%" y="607.50"></text></g><g><title>[unknown] (1,414,813,920 samples, 2.19%)</title><rect x="47.5206%" y="645" width="2.1876%" height="15" fill="rgb(209,34,43)" fg:x="30734277104" fg:w="1414813920"/><text x="47.7706%" y="655.50">[..</text></g><g><title>alloc::raw_vec::finish_grow (2,121,581,764 samples, 3.28%)</title><rect x="46.4997%" y="693" width="3.2803%" height="15" fill="rgb(223,11,35)" fg:x="30073983621" fg:w="2121581764"/><text x="46.7497%" y="703.50">all..</text></g><g><title>malloc (1,693,854,196 samples, 2.62%)</title><rect x="47.1610%" y="677" width="2.6190%" height="15" fill="rgb(251,219,26)" fg:x="30501711189" fg:w="1693854196"/><text x="47.4110%" y="687.50">ma..</text></g><g><title>[libc.so.6] (1,579,744,630 samples, 2.44%)</title><rect x="47.3374%" y="661" width="2.4426%" height="15" fill="rgb(231,119,3)" fg:x="30615820755" fg:w="1579744630"/><text x="47.5874%" y="671.50">[l..</text></g><g><title>__default_morecore (46,474,361 samples, 0.07%)</title><rect x="49.7081%" y="645" width="0.0719%" height="15" fill="rgb(216,97,11)" fg:x="32149091024" fg:w="46474361"/><text x="49.9581%" y="655.50"></text></g><g><title>__sbrk (46,474,361 samples, 0.07%)</title><rect x="49.7081%" y="629" width="0.0719%" height="15" fill="rgb(223,59,9)" fg:x="32149091024" fg:w="46474361"/><text x="49.9581%" y="639.50"></text></g><g><title>brk (42,249,689 samples, 0.07%)</title><rect x="49.7147%" y="613" width="0.0653%" height="15" fill="rgb(233,93,31)" fg:x="32153315696" fg:w="42249689"/><text x="49.9647%" y="623.50"></text></g><g><title>[unknown] (42,249,689 samples, 0.07%)</title><rect x="49.7147%" y="597" width="0.0653%" height="15" fill="rgb(239,81,33)" fg:x="32153315696" fg:w="42249689"/><text x="49.9647%" y="607.50"></text></g><g><title>cfree (14,888,365 samples, 0.02%)</title><rect x="49.7867%" y="693" width="0.0230%" height="15" fill="rgb(213,120,34)" fg:x="32199886671" fg:w="14888365"/><text x="50.0367%" y="703.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (9,066,399 samples, 0.01%)</title><rect x="49.7957%" y="677" width="0.0140%" height="15" fill="rgb(243,49,53)" fg:x="32205708637" fg:w="9066399"/><text x="50.0457%" y="687.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (9,066,399 samples, 0.01%)</title><rect x="49.7957%" y="661" width="0.0140%" height="15" fill="rgb(247,216,33)" fg:x="32205708637" fg:w="9066399"/><text x="50.0457%" y="671.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (9,066,399 samples, 0.01%)</title><rect x="49.7957%" y="645" width="0.0140%" height="15" fill="rgb(226,26,14)" fg:x="32205708637" fg:w="9066399"/><text x="50.0457%" y="655.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (9,066,399 samples, 0.01%)</title><rect x="49.7957%" y="629" width="0.0140%" height="15" fill="rgb(215,49,53)" fg:x="32205708637" fg:w="9066399"/><text x="50.0457%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (9,066,399 samples, 0.01%)</title><rect x="49.7957%" y="613" width="0.0140%" height="15" fill="rgb(245,162,40)" fg:x="32205708637" fg:w="9066399"/><text x="50.0457%" y="623.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (9,066,399 samples, 0.01%)</title><rect x="49.7957%" y="597" width="0.0140%" height="15" fill="rgb(229,68,17)" fg:x="32205708637" fg:w="9066399"/><text x="50.0457%" y="607.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (9,066,399 samples, 0.01%)</title><rect x="49.7957%" y="581" width="0.0140%" height="15" fill="rgb(213,182,10)" fg:x="32205708637" fg:w="9066399"/><text x="50.0457%" y="591.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (9,066,399 samples, 0.01%)</title><rect x="49.7957%" y="565" width="0.0140%" height="15" fill="rgb(245,125,30)" fg:x="32205708637" fg:w="9066399"/><text x="50.0457%" y="575.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::_{{closure}} (9,066,399 samples, 0.01%)</title><rect x="49.7957%" y="549" width="0.0140%" height="15" fill="rgb(232,202,2)" fg:x="32205708637" fg:w="9066399"/><text x="50.0457%" y="559.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (9,066,399 samples, 0.01%)</title><rect x="49.7957%" y="533" width="0.0140%" height="15" fill="rgb(237,140,51)" fg:x="32205708637" fg:w="9066399"/><text x="50.0457%" y="543.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9,066,399 samples, 0.01%)</title><rect x="49.7957%" y="517" width="0.0140%" height="15" fill="rgb(236,157,25)" fg:x="32205708637" fg:w="9066399"/><text x="50.0457%" y="527.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::_{{closure}} (9,066,399 samples, 0.01%)</title><rect x="49.7957%" y="501" width="0.0140%" height="15" fill="rgb(219,209,0)" fg:x="32205708637" fg:w="9066399"/><text x="50.0457%" y="511.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (9,066,399 samples, 0.01%)</title><rect x="49.7957%" y="485" width="0.0140%" height="15" fill="rgb(240,116,54)" fg:x="32205708637" fg:w="9066399"/><text x="50.0457%" y="495.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (23,250,054 samples, 0.04%)</title><rect x="49.9175%" y="613" width="0.0359%" height="15" fill="rgb(216,10,36)" fg:x="32284514037" fg:w="23250054"/><text x="50.1675%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (44,478,537 samples, 0.07%)</title><rect x="49.9047%" y="629" width="0.0688%" height="15" fill="rgb(222,72,44)" fg:x="32276245052" fg:w="44478537"/><text x="50.1547%" y="639.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (12,959,498 samples, 0.02%)</title><rect x="49.9535%" y="613" width="0.0200%" height="15" fill="rgb(232,159,9)" fg:x="32307764091" fg:w="12959498"/><text x="50.2035%" y="623.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (129,259,820 samples, 0.20%)</title><rect x="50.0620%" y="613" width="0.1999%" height="15" fill="rgb(210,39,32)" fg:x="32377967431" fg:w="129259820"/><text x="50.3120%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (345,689,743 samples, 0.53%)</title><rect x="49.8097%" y="693" width="0.5345%" height="15" fill="rgb(216,194,45)" fg:x="32214775036" fg:w="345689743"/><text x="50.0597%" y="703.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (320,823,455 samples, 0.50%)</title><rect x="49.8482%" y="677" width="0.4960%" height="15" fill="rgb(218,18,35)" fg:x="32239641324" fg:w="320823455"/><text x="50.0982%" y="687.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (320,823,455 samples, 0.50%)</title><rect x="49.8482%" y="661" width="0.4960%" height="15" fill="rgb(207,83,51)" fg:x="32239641324" fg:w="320823455"/><text x="50.0982%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (320,823,455 samples, 0.50%)</title><rect x="49.8482%" y="645" width="0.4960%" height="15" fill="rgb(225,63,43)" fg:x="32239641324" fg:w="320823455"/><text x="50.0982%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (239,741,190 samples, 0.37%)</title><rect x="49.9735%" y="629" width="0.3707%" height="15" fill="rgb(207,57,36)" fg:x="32320723589" fg:w="239741190"/><text x="50.2235%" y="639.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (53,237,528 samples, 0.08%)</title><rect x="50.2619%" y="613" width="0.0823%" height="15" fill="rgb(216,99,33)" fg:x="32507227251" fg:w="53237528"/><text x="50.5119%" y="623.50"></text></g><g><title>core::num::dec2flt::&lt;impl core::str::traits::FromStr for f64&gt;::from_str (7,510,270 samples, 0.01%)</title><rect x="50.3442%" y="693" width="0.0116%" height="15" fill="rgb(225,42,16)" fg:x="32560464779" fg:w="7510270"/><text x="50.5942%" y="703.50"></text></g><g><title>core::str::converts::from_utf8 (26,402,089 samples, 0.04%)</title><rect x="50.3558%" y="693" width="0.0408%" height="15" fill="rgb(220,201,45)" fg:x="32567975049" fg:w="26402089"/><text x="50.6058%" y="703.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (17,619,101 samples, 0.03%)</title><rect x="50.4096%" y="581" width="0.0272%" height="15" fill="rgb(225,33,4)" fg:x="32602790218" fg:w="17619101"/><text x="50.6596%" y="591.50"></text></g><g><title>core::ops::function::FnMut::call_mut (17,619,101 samples, 0.03%)</title><rect x="50.4096%" y="565" width="0.0272%" height="15" fill="rgb(224,33,50)" fg:x="32602790218" fg:w="17619101"/><text x="50.6596%" y="575.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (17,619,101 samples, 0.03%)</title><rect x="50.4096%" y="549" width="0.0272%" height="15" fill="rgb(246,198,51)" fg:x="32602790218" fg:w="17619101"/><text x="50.6596%" y="559.50"></text></g><g><title>criterion::analysis::compare::estimates::stats (26,241,744 samples, 0.04%)</title><rect x="50.4030%" y="693" width="0.0406%" height="15" fill="rgb(205,22,4)" fg:x="32598512398" fg:w="26241744"/><text x="50.6530%" y="703.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::mean (21,963,924 samples, 0.03%)</title><rect x="50.4096%" y="677" width="0.0340%" height="15" fill="rgb(206,3,8)" fg:x="32602790218" fg:w="21963924"/><text x="50.6596%" y="687.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::sum (21,963,924 samples, 0.03%)</title><rect x="50.4096%" y="661" width="0.0340%" height="15" fill="rgb(251,23,15)" fg:x="32602790218" fg:w="21963924"/><text x="50.6596%" y="671.50"></text></g><g><title>criterion::stats::sum (21,963,924 samples, 0.03%)</title><rect x="50.4096%" y="645" width="0.0340%" height="15" fill="rgb(252,88,28)" fg:x="32602790218" fg:w="21963924"/><text x="50.6596%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (21,963,924 samples, 0.03%)</title><rect x="50.4096%" y="629" width="0.0340%" height="15" fill="rgb(212,127,14)" fg:x="32602790218" fg:w="21963924"/><text x="50.6596%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (21,963,924 samples, 0.03%)</title><rect x="50.4096%" y="613" width="0.0340%" height="15" fill="rgb(247,145,37)" fg:x="32602790218" fg:w="21963924"/><text x="50.6596%" y="623.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (21,963,924 samples, 0.03%)</title><rect x="50.4096%" y="597" width="0.0340%" height="15" fill="rgb(209,117,53)" fg:x="32602790218" fg:w="21963924"/><text x="50.6596%" y="607.50"></text></g><g><title>criterion::stats::univariate::percentiles::Percentiles&lt;A&gt;::median (8,641,223 samples, 0.01%)</title><rect x="50.4436%" y="677" width="0.0134%" height="15" fill="rgb(212,90,42)" fg:x="32624754142" fg:w="8641223"/><text x="50.6936%" y="687.50"></text></g><g><title>criterion::stats::univariate::percentiles::Percentiles&lt;A&gt;::at (8,641,223 samples, 0.01%)</title><rect x="50.4436%" y="661" width="0.0134%" height="15" fill="rgb(218,164,37)" fg:x="32624754142" fg:w="8641223"/><text x="50.6936%" y="671.50"></text></g><g><title>criterion::stats::univariate::percentiles::Percentiles&lt;A&gt;::at_unchecked (8,641,223 samples, 0.01%)</title><rect x="50.4436%" y="645" width="0.0134%" height="15" fill="rgb(246,65,34)" fg:x="32624754142" fg:w="8641223"/><text x="50.6936%" y="655.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::mean (22,695,941 samples, 0.04%)</title><rect x="50.4570%" y="677" width="0.0351%" height="15" fill="rgb(231,100,33)" fg:x="32633395365" fg:w="22695941"/><text x="50.7070%" y="687.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::sum (22,695,941 samples, 0.04%)</title><rect x="50.4570%" y="661" width="0.0351%" height="15" fill="rgb(228,126,14)" fg:x="32633395365" fg:w="22695941"/><text x="50.7070%" y="671.50"></text></g><g><title>criterion::stats::sum (22,695,941 samples, 0.04%)</title><rect x="50.4570%" y="645" width="0.0351%" height="15" fill="rgb(215,173,21)" fg:x="32633395365" fg:w="22695941"/><text x="50.7070%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (22,695,941 samples, 0.04%)</title><rect x="50.4570%" y="629" width="0.0351%" height="15" fill="rgb(210,6,40)" fg:x="32633395365" fg:w="22695941"/><text x="50.7070%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (22,695,941 samples, 0.04%)</title><rect x="50.4570%" y="613" width="0.0351%" height="15" fill="rgb(212,48,18)" fg:x="32633395365" fg:w="22695941"/><text x="50.7070%" y="623.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (22,695,941 samples, 0.04%)</title><rect x="50.4570%" y="597" width="0.0351%" height="15" fill="rgb(230,214,11)" fg:x="32633395365" fg:w="22695941"/><text x="50.7070%" y="607.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (14,050,038 samples, 0.02%)</title><rect x="50.4703%" y="581" width="0.0217%" height="15" fill="rgb(254,105,39)" fg:x="32642041268" fg:w="14050038"/><text x="50.7203%" y="591.50"></text></g><g><title>core::ops::function::FnMut::call_mut (14,050,038 samples, 0.02%)</title><rect x="50.4703%" y="565" width="0.0217%" height="15" fill="rgb(245,158,5)" fg:x="32642041268" fg:w="14050038"/><text x="50.7203%" y="575.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (14,050,038 samples, 0.02%)</title><rect x="50.4703%" y="549" width="0.0217%" height="15" fill="rgb(249,208,11)" fg:x="32642041268" fg:w="14050038"/><text x="50.7203%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (17,295,375 samples, 0.03%)</title><rect x="50.4987%" y="661" width="0.0267%" height="15" fill="rgb(210,39,28)" fg:x="32660377655" fg:w="17295375"/><text x="50.7487%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (17,295,375 samples, 0.03%)</title><rect x="50.4987%" y="645" width="0.0267%" height="15" fill="rgb(211,56,53)" fg:x="32660377655" fg:w="17295375"/><text x="50.7487%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (17,295,375 samples, 0.03%)</title><rect x="50.4987%" y="629" width="0.0267%" height="15" fill="rgb(226,201,30)" fg:x="32660377655" fg:w="17295375"/><text x="50.7487%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (17,295,375 samples, 0.03%)</title><rect x="50.4987%" y="613" width="0.0267%" height="15" fill="rgb(239,101,34)" fg:x="32660377655" fg:w="17295375"/><text x="50.7487%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (17,295,375 samples, 0.03%)</title><rect x="50.4987%" y="597" width="0.0267%" height="15" fill="rgb(226,209,5)" fg:x="32660377655" fg:w="17295375"/><text x="50.7487%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (17,295,375 samples, 0.03%)</title><rect x="50.4987%" y="581" width="0.0267%" height="15" fill="rgb(250,105,47)" fg:x="32660377655" fg:w="17295375"/><text x="50.7487%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (17,295,375 samples, 0.03%)</title><rect x="50.4987%" y="565" width="0.0267%" height="15" fill="rgb(230,72,3)" fg:x="32660377655" fg:w="17295375"/><text x="50.7487%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (17,295,375 samples, 0.03%)</title><rect x="50.4987%" y="549" width="0.0267%" height="15" fill="rgb(232,218,39)" fg:x="32660377655" fg:w="17295375"/><text x="50.7487%" y="559.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (17,295,375 samples, 0.03%)</title><rect x="50.4987%" y="533" width="0.0267%" height="15" fill="rgb(248,166,6)" fg:x="32660377655" fg:w="17295375"/><text x="50.7487%" y="543.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (17,295,375 samples, 0.03%)</title><rect x="50.4987%" y="517" width="0.0267%" height="15" fill="rgb(247,89,20)" fg:x="32660377655" fg:w="17295375"/><text x="50.7487%" y="527.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev::_{{closure}} (17,295,375 samples, 0.03%)</title><rect x="50.4987%" y="501" width="0.0267%" height="15" fill="rgb(248,130,54)" fg:x="32660377655" fg:w="17295375"/><text x="50.7487%" y="511.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::abs (17,295,375 samples, 0.03%)</title><rect x="50.4987%" y="485" width="0.0267%" height="15" fill="rgb(234,196,4)" fg:x="32660377655" fg:w="17295375"/><text x="50.7487%" y="495.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::abs (17,295,375 samples, 0.03%)</title><rect x="50.4987%" y="469" width="0.0267%" height="15" fill="rgb(250,143,31)" fg:x="32660377655" fg:w="17295375"/><text x="50.7487%" y="479.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::median_abs_dev (85,480,226 samples, 0.13%)</title><rect x="50.4921%" y="677" width="0.1322%" height="15" fill="rgb(211,110,34)" fg:x="32656091306" fg:w="85480226"/><text x="50.7421%" y="687.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::new (55,749,901 samples, 0.09%)</title><rect x="50.5380%" y="661" width="0.0862%" height="15" fill="rgb(215,124,48)" fg:x="32685821631" fg:w="55749901"/><text x="50.7880%" y="671.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::all (55,749,901 samples, 0.09%)</title><rect x="50.5380%" y="645" width="0.0862%" height="15" fill="rgb(216,46,13)" fg:x="32685821631" fg:w="55749901"/><text x="50.7880%" y="655.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (47,132,192 samples, 0.07%)</title><rect x="50.5514%" y="629" width="0.0729%" height="15" fill="rgb(205,184,25)" fg:x="32694439340" fg:w="47132192"/><text x="50.8014%" y="639.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (47,132,192 samples, 0.07%)</title><rect x="50.5514%" y="613" width="0.0729%" height="15" fill="rgb(228,1,10)" fg:x="32694439340" fg:w="47132192"/><text x="50.8014%" y="623.50"></text></g><g><title>core::ops::function::FnMut::call_mut (8,591,507 samples, 0.01%)</title><rect x="50.6242%" y="597" width="0.0133%" height="15" fill="rgb(213,116,27)" fg:x="32741571532" fg:w="8591507"/><text x="50.8742%" y="607.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (8,591,507 samples, 0.01%)</title><rect x="50.6242%" y="581" width="0.0133%" height="15" fill="rgb(241,95,50)" fg:x="32741571532" fg:w="8591507"/><text x="50.8742%" y="591.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (13,118,962 samples, 0.02%)</title><rect x="50.6242%" y="613" width="0.0203%" height="15" fill="rgb(238,48,32)" fg:x="32741571532" fg:w="13118962"/><text x="50.8742%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (21,801,201 samples, 0.03%)</title><rect x="50.6242%" y="645" width="0.0337%" height="15" fill="rgb(235,113,49)" fg:x="32741571532" fg:w="21801201"/><text x="50.8742%" y="655.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (21,801,201 samples, 0.03%)</title><rect x="50.6242%" y="629" width="0.0337%" height="15" fill="rgb(205,127,43)" fg:x="32741571532" fg:w="21801201"/><text x="50.8742%" y="639.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (8,682,239 samples, 0.01%)</title><rect x="50.6445%" y="613" width="0.0134%" height="15" fill="rgb(250,162,2)" fg:x="32754690494" fg:w="8682239"/><text x="50.8945%" y="623.50"></text></g><g><title>criterion::analysis::estimates::stats (142,906,069 samples, 0.22%)</title><rect x="50.4436%" y="693" width="0.2210%" height="15" fill="rgb(220,13,41)" fg:x="32624754142" fg:w="142906069"/><text x="50.6936%" y="703.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::std_dev (26,088,679 samples, 0.04%)</title><rect x="50.6242%" y="677" width="0.0403%" height="15" fill="rgb(249,221,25)" fg:x="32741571532" fg:w="26088679"/><text x="50.8742%" y="687.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::var (26,088,679 samples, 0.04%)</title><rect x="50.6242%" y="661" width="0.0403%" height="15" fill="rgb(215,208,19)" fg:x="32741571532" fg:w="26088679"/><text x="50.8742%" y="671.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (11,740,334 samples, 0.02%)</title><rect x="51.9003%" y="597" width="0.0182%" height="15" fill="rgb(236,175,2)" fg:x="33566911148" fg:w="11740334"/><text x="52.1503%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (833,432,775 samples, 1.29%)</title><rect x="51.7567%" y="613" width="1.2886%" height="15" fill="rgb(241,52,2)" fg:x="33474010195" fg:w="833432775"/><text x="52.0067%" y="623.50"></text></g><g><title>core::ptr::write (728,791,488 samples, 1.13%)</title><rect x="51.9185%" y="597" width="1.1268%" height="15" fill="rgb(248,140,14)" fg:x="33578651482" fg:w="728791488"/><text x="52.1685%" y="607.50"></text></g><g><title>[unknown] (376,606,010 samples, 0.58%)</title><rect x="52.4630%" y="581" width="0.5823%" height="15" fill="rgb(253,22,42)" fg:x="33930836960" fg:w="376606010"/><text x="52.7130%" y="591.50"></text></g><g><title>json_parser::Tokenizer::increment_position (44,836,783 samples, 0.07%)</title><rect x="53.0453%" y="613" width="0.0693%" height="15" fill="rgb(234,61,47)" fg:x="34307442970" fg:w="44836783"/><text x="53.2953%" y="623.50"></text></g><g><title>json_parser::Tokenizer::skip_whitespace (352,199,981 samples, 0.54%)</title><rect x="53.1147%" y="613" width="0.5446%" height="15" fill="rgb(208,226,15)" fg:x="34352279753" fg:w="352199981"/><text x="53.3647%" y="623.50"></text></g><g><title>json_parser::Tokenizer::increment_position (277,853,113 samples, 0.43%)</title><rect x="53.2296%" y="597" width="0.4296%" height="15" fill="rgb(217,221,4)" fg:x="34426626621" fg:w="277853113"/><text x="53.4796%" y="607.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (314,250,250 samples, 0.49%)</title><rect x="53.7371%" y="597" width="0.4859%" height="15" fill="rgb(212,174,34)" fg:x="34754814020" fg:w="314250250"/><text x="53.9871%" y="607.50"></text></g><g><title>core::num::dec2flt::lemire::compute_float (34,575,925 samples, 0.05%)</title><rect x="54.3845%" y="549" width="0.0535%" height="15" fill="rgb(253,83,4)" fg:x="35173536210" fg:w="34575925"/><text x="54.6345%" y="559.50"></text></g><g><title>core::num::dec2flt::lemire::compute_product_approx (30,972,607 samples, 0.05%)</title><rect x="54.3900%" y="533" width="0.0479%" height="15" fill="rgb(250,195,49)" fg:x="35177139528" fg:w="30972607"/><text x="54.6400%" y="543.50"></text></g><g><title>core::num::dec2flt::number::Number::try_fast_path (80,435,483 samples, 0.12%)</title><rect x="54.4379%" y="549" width="0.1244%" height="15" fill="rgb(241,192,25)" fg:x="35208112135" fg:w="80435483"/><text x="54.6879%" y="559.50"></text></g><g><title>core::num::dec2flt::number::Number::is_fast_path (22,627,141 samples, 0.03%)</title><rect x="54.5273%" y="533" width="0.0350%" height="15" fill="rgb(208,124,10)" fg:x="35265920477" fg:w="22627141"/><text x="54.7773%" y="543.50"></text></g><g><title>core::num::dec2flt::parse::try_parse_digits::_{{closure}} (46,443,214 samples, 0.07%)</title><rect x="54.6654%" y="485" width="0.0718%" height="15" fill="rgb(222,33,0)" fg:x="35355209288" fg:w="46443214"/><text x="54.9154%" y="495.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (7,524,901 samples, 0.01%)</title><rect x="54.7255%" y="469" width="0.0116%" height="15" fill="rgb(234,209,28)" fg:x="35394127601" fg:w="7524901"/><text x="54.9755%" y="479.50"></text></g><g><title>&lt;[u8] as core::num::dec2flt::common::ByteSlice&gt;::parse_digits (134,541,649 samples, 0.21%)</title><rect x="54.6234%" y="501" width="0.2080%" height="15" fill="rgb(224,11,23)" fg:x="35328086373" fg:w="134541649"/><text x="54.8734%" y="511.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_first (60,975,520 samples, 0.09%)</title><rect x="54.7372%" y="485" width="0.0943%" height="15" fill="rgb(232,99,1)" fg:x="35401652502" fg:w="60975520"/><text x="54.9872%" y="495.50"></text></g><g><title>&lt;[u8] as core::num::dec2flt::common::ByteSlice&gt;::read_u64 (7,197,735 samples, 0.01%)</title><rect x="54.8315%" y="501" width="0.0111%" height="15" fill="rgb(237,95,45)" fg:x="35462628022" fg:w="7197735"/><text x="55.0815%" y="511.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (7,197,735 samples, 0.01%)</title><rect x="54.8315%" y="485" width="0.0111%" height="15" fill="rgb(208,109,11)" fg:x="35462628022" fg:w="7197735"/><text x="55.0815%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7,197,735 samples, 0.01%)</title><rect x="54.8315%" y="469" width="0.0111%" height="15" fill="rgb(216,190,48)" fg:x="35462628022" fg:w="7197735"/><text x="55.0815%" y="479.50"></text></g><g><title>core::num::dec2flt::common::is_8digits (34,652,984 samples, 0.05%)</title><rect x="54.8487%" y="501" width="0.0536%" height="15" fill="rgb(251,171,36)" fg:x="35473791986" fg:w="34652984"/><text x="55.0987%" y="511.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_sub (15,340,527 samples, 0.02%)</title><rect x="54.8786%" y="485" width="0.0237%" height="15" fill="rgb(230,62,22)" fg:x="35493104443" fg:w="15340527"/><text x="55.1286%" y="495.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (7,853,747 samples, 0.01%)</title><rect x="54.9858%" y="485" width="0.0121%" height="15" fill="rgb(225,114,35)" fg:x="35562442184" fg:w="7853747"/><text x="55.2358%" y="495.50"></text></g><g><title>core::num::dec2flt::parse::parse_8digits (96,855,772 samples, 0.15%)</title><rect x="54.9023%" y="501" width="0.1498%" height="15" fill="rgb(215,118,42)" fg:x="35508444970" fg:w="96855772"/><text x="55.1523%" y="511.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (35,004,811 samples, 0.05%)</title><rect x="54.9979%" y="485" width="0.0541%" height="15" fill="rgb(243,119,21)" fg:x="35570295931" fg:w="35004811"/><text x="55.2479%" y="495.50"></text></g><g><title>core::num::dec2flt::parse::try_parse_digits (328,638,752 samples, 0.51%)</title><rect x="54.5623%" y="517" width="0.5081%" height="15" fill="rgb(252,177,53)" fg:x="35288547618" fg:w="328638752"/><text x="54.8123%" y="527.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (11,885,628 samples, 0.02%)</title><rect x="55.0521%" y="501" width="0.0184%" height="15" fill="rgb(237,209,29)" fg:x="35605300742" fg:w="11885628"/><text x="55.3021%" y="511.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (11,885,628 samples, 0.02%)</title><rect x="55.0521%" y="485" width="0.0184%" height="15" fill="rgb(212,65,23)" fg:x="35605300742" fg:w="11885628"/><text x="55.3021%" y="495.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (11,885,628 samples, 0.02%)</title><rect x="55.0521%" y="469" width="0.0184%" height="15" fill="rgb(230,222,46)" fg:x="35605300742" fg:w="11885628"/><text x="55.3021%" y="479.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (11,885,628 samples, 0.02%)</title><rect x="55.0521%" y="453" width="0.0184%" height="15" fill="rgb(215,135,32)" fg:x="35605300742" fg:w="11885628"/><text x="55.3021%" y="463.50"></text></g><g><title>core::num::dec2flt::parse::parse_number (339,941,287 samples, 0.53%)</title><rect x="54.5623%" y="549" width="0.5256%" height="15" fill="rgb(246,101,22)" fg:x="35288547618" fg:w="339941287"/><text x="54.8123%" y="559.50"></text></g><g><title>core::num::dec2flt::parse::parse_partial_number (339,941,287 samples, 0.53%)</title><rect x="54.5623%" y="533" width="0.5256%" height="15" fill="rgb(206,107,13)" fg:x="35288547618" fg:w="339941287"/><text x="54.8123%" y="543.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_first (11,302,535 samples, 0.02%)</title><rect x="55.0704%" y="517" width="0.0175%" height="15" fill="rgb(250,100,44)" fg:x="35617186370" fg:w="11302535"/><text x="55.3204%" y="527.50"></text></g><g><title>core::num::dec2flt::&lt;impl core::str::traits::FromStr for f64&gt;::from_str (570,709,943 samples, 0.88%)</title><rect x="54.2289%" y="581" width="0.8824%" height="15" fill="rgb(231,147,38)" fg:x="35072945759" fg:w="570709943"/><text x="54.4789%" y="591.50"></text></g><g><title>core::num::dec2flt::dec2flt (563,063,908 samples, 0.87%)</title><rect x="54.2408%" y="565" width="0.8706%" height="15" fill="rgb(229,8,40)" fg:x="35080591794" fg:w="563063908"/><text x="54.4908%" y="575.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::first (15,166,797 samples, 0.02%)</title><rect x="55.0879%" y="549" width="0.0235%" height="15" fill="rgb(221,135,30)" fg:x="35628488905" fg:w="15166797"/><text x="55.3379%" y="559.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (671,704,727 samples, 1.04%)</title><rect x="54.2289%" y="597" width="1.0386%" height="15" fill="rgb(249,193,18)" fg:x="35072945759" fg:w="671704727"/><text x="54.4789%" y="607.50"></text></g><g><title>core::num::dec2flt::lemire::compute_float (100,994,784 samples, 0.16%)</title><rect x="55.1114%" y="581" width="0.1562%" height="15" fill="rgb(209,133,39)" fg:x="35643655702" fg:w="100994784"/><text x="55.3614%" y="591.50"></text></g><g><title>core::num::dec2flt::lemire::power (7,453,505 samples, 0.01%)</title><rect x="55.2560%" y="565" width="0.0115%" height="15" fill="rgb(232,100,14)" fg:x="35737196981" fg:w="7453505"/><text x="55.5060%" y="575.50"></text></g><g><title>core::str::converts::from_utf8 (521,303,241 samples, 0.81%)</title><rect x="55.2675%" y="597" width="0.8060%" height="15" fill="rgb(224,185,1)" fg:x="35744650486" fg:w="521303241"/><text x="55.5175%" y="607.50"></text></g><g><title>core::str::validations::run_utf8_validation (336,832,868 samples, 0.52%)</title><rect x="55.5527%" y="581" width="0.5208%" height="15" fill="rgb(223,139,8)" fg:x="35929120859" fg:w="336832868"/><text x="55.8027%" y="591.50"></text></g><g><title>json_parser::Tokenizer::consume_digits (296,445,776 samples, 0.46%)</title><rect x="56.0735%" y="597" width="0.4584%" height="15" fill="rgb(232,213,38)" fg:x="36265953727" fg:w="296445776"/><text x="56.3235%" y="607.50"></text></g><g><title>json_parser::Tokenizer::is_digit (261,324,338 samples, 0.40%)</title><rect x="56.1278%" y="581" width="0.4041%" height="15" fill="rgb(207,94,22)" fg:x="36301075165" fg:w="261324338"/><text x="56.3778%" y="591.50"></text></g><g><title>core::num::&lt;impl u8&gt;::is_ascii_digit (261,324,338 samples, 0.40%)</title><rect x="56.1278%" y="565" width="0.4041%" height="15" fill="rgb(219,183,54)" fg:x="36301075165" fg:w="261324338"/><text x="56.3778%" y="575.50"></text></g><g><title>json_parser::Tokenizer::has_more (22,131,840 samples, 0.03%)</title><rect x="56.5319%" y="597" width="0.0342%" height="15" fill="rgb(216,185,54)" fg:x="36562399503" fg:w="22131840"/><text x="56.7819%" y="607.50"></text></g><g><title>json_parser::Tokenizer::has_more_than (22,131,840 samples, 0.03%)</title><rect x="56.5319%" y="581" width="0.0342%" height="15" fill="rgb(254,217,39)" fg:x="36562399503" fg:w="22131840"/><text x="56.7819%" y="591.50"></text></g><g><title>json_parser::Tokenizer::increment_position (11,939,851 samples, 0.02%)</title><rect x="56.5661%" y="597" width="0.0185%" height="15" fill="rgb(240,178,23)" fg:x="36584531343" fg:w="11939851"/><text x="56.8161%" y="607.50"></text></g><g><title>json_parser::Tokenizer::tokenize_number (1,911,266,340 samples, 2.96%)</title><rect x="53.6592%" y="613" width="2.9552%" height="15" fill="rgb(218,11,47)" fg:x="34704479734" fg:w="1911266340"/><text x="53.9092%" y="623.50">jso..</text></g><g><title>json_parser::Tokenizer::is_digit (19,274,880 samples, 0.03%)</title><rect x="56.5846%" y="597" width="0.0298%" height="15" fill="rgb(218,51,51)" fg:x="36596471194" fg:w="19274880"/><text x="56.8346%" y="607.50"></text></g><g><title>core::num::&lt;impl u8&gt;::is_ascii_digit (19,274,880 samples, 0.03%)</title><rect x="56.5846%" y="581" width="0.0298%" height="15" fill="rgb(238,126,27)" fg:x="36596471194" fg:w="19274880"/><text x="56.8346%" y="591.50"></text></g><g><title>alloc::string::String::new (44,397,015 samples, 0.07%)</title><rect x="56.8070%" y="597" width="0.0686%" height="15" fill="rgb(249,202,22)" fg:x="36740322506" fg:w="44397015"/><text x="57.0570%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (81,777,789 samples, 0.13%)</title><rect x="57.4184%" y="565" width="0.1264%" height="15" fill="rgb(254,195,49)" fg:x="37135718624" fg:w="81777789"/><text x="57.6684%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (81,777,789 samples, 0.13%)</title><rect x="57.4184%" y="549" width="0.1264%" height="15" fill="rgb(208,123,14)" fg:x="37135718624" fg:w="81777789"/><text x="57.6684%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (81,777,789 samples, 0.13%)</title><rect x="57.4184%" y="533" width="0.1264%" height="15" fill="rgb(224,200,8)" fg:x="37135718624" fg:w="81777789"/><text x="57.6684%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (81,777,789 samples, 0.13%)</title><rect x="57.4184%" y="517" width="0.1264%" height="15" fill="rgb(217,61,36)" fg:x="37135718624" fg:w="81777789"/><text x="57.6684%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (395,603,901 samples, 0.61%)</title><rect x="56.9389%" y="581" width="0.6117%" height="15" fill="rgb(206,35,45)" fg:x="36825655613" fg:w="395603901"/><text x="57.1889%" y="591.50"></text></g><g><title>alloc::string::String::push (553,356,687 samples, 0.86%)</title><rect x="56.8756%" y="597" width="0.8556%" height="15" fill="rgb(217,65,33)" fg:x="36784719521" fg:w="553356687"/><text x="57.1256%" y="607.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::len_utf8 (116,816,694 samples, 0.18%)</title><rect x="57.5506%" y="581" width="0.1806%" height="15" fill="rgb(222,158,48)" fg:x="37221259514" fg:w="116816694"/><text x="57.8006%" y="591.50"></text></g><g><title>core::char::methods::len_utf8 (116,816,694 samples, 0.18%)</title><rect x="57.5506%" y="565" width="0.1806%" height="15" fill="rgb(254,2,54)" fg:x="37221259514" fg:w="116816694"/><text x="57.8006%" y="575.50"></text></g><g><title>json_parser::Tokenizer::current_byte (11,026,998 samples, 0.02%)</title><rect x="57.7312%" y="597" width="0.0170%" height="15" fill="rgb(250,143,38)" fg:x="37338076208" fg:w="11026998"/><text x="57.9812%" y="607.50"></text></g><g><title>json_parser::Tokenizer::has_more (26,812,675 samples, 0.04%)</title><rect x="57.7483%" y="597" width="0.0415%" height="15" fill="rgb(248,25,0)" fg:x="37349103206" fg:w="26812675"/><text x="57.9983%" y="607.50"></text></g><g><title>json_parser::Tokenizer::has_more_than (26,812,675 samples, 0.04%)</title><rect x="57.7483%" y="581" width="0.0415%" height="15" fill="rgb(206,152,27)" fg:x="37349103206" fg:w="26812675"/><text x="57.9983%" y="591.50"></text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (4,638,437,078 samples, 7.17%)</title><rect x="50.6646%" y="693" width="7.1718%" height="15" fill="rgb(240,77,30)" fg:x="32767660211" fg:w="4638437078"/><text x="50.9146%" y="703.50">criterion:..</text></g><g><title>my_benchmark::benchmark::_{{closure}}::_{{closure}} (4,638,437,078 samples, 7.17%)</title><rect x="50.6646%" y="677" width="7.1718%" height="15" fill="rgb(231,5,3)" fg:x="32767660211" fg:w="4638437078"/><text x="50.9146%" y="687.50">my_benchma..</text></g><g><title>json_parser::parse_json (4,638,437,078 samples, 7.17%)</title><rect x="50.6646%" y="661" width="7.1718%" height="15" fill="rgb(207,226,32)" fg:x="32767660211" fg:w="4638437078"/><text x="50.9146%" y="671.50">json_parse..</text></g><g><title>json_parser::parse_json_impl (4,638,437,078 samples, 7.17%)</title><rect x="50.6646%" y="645" width="7.1718%" height="15" fill="rgb(222,207,47)" fg:x="32767660211" fg:w="4638437078"/><text x="50.9146%" y="655.50">json_parse..</text></g><g><title>json_parser::Tokenizer::tokenize (4,638,437,078 samples, 7.17%)</title><rect x="50.6646%" y="629" width="7.1718%" height="15" fill="rgb(229,115,45)" fg:x="32767660211" fg:w="4638437078"/><text x="50.9146%" y="639.50">json_parse..</text></g><g><title>json_parser::Tokenizer::tokenize_string (790,351,215 samples, 1.22%)</title><rect x="56.6144%" y="613" width="1.2220%" height="15" fill="rgb(224,191,6)" fg:x="36615746074" fg:w="790351215"/><text x="56.8644%" y="623.50"></text></g><g><title>json_parser::Tokenizer::increment_position (30,181,408 samples, 0.05%)</title><rect x="57.7897%" y="597" width="0.0467%" height="15" fill="rgb(230,227,24)" fg:x="37375915881" fg:w="30181408"/><text x="58.0397%" y="607.50"></text></g><g><title>criterion::kde::sweep_and_estimate (13,491,811 samples, 0.02%)</title><rect x="57.8364%" y="693" width="0.0209%" height="15" fill="rgb(228,80,19)" fg:x="37406097289" fg:w="13491811"/><text x="58.0864%" y="703.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (10,892,128 samples, 0.02%)</title><rect x="57.8767%" y="677" width="0.0168%" height="15" fill="rgb(247,229,0)" fg:x="37432174443" fg:w="10892128"/><text x="58.1267%" y="687.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (10,892,128 samples, 0.02%)</title><rect x="57.8767%" y="661" width="0.0168%" height="15" fill="rgb(237,194,15)" fg:x="37432174443" fg:w="10892128"/><text x="58.1267%" y="671.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_add (41,555,645 samples, 0.06%)</title><rect x="58.0471%" y="645" width="0.0643%" height="15" fill="rgb(219,203,20)" fg:x="37542334841" fg:w="41555645"/><text x="58.2971%" y="655.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (205,705,045 samples, 0.32%)</title><rect x="57.8574%" y="693" width="0.3181%" height="15" fill="rgb(234,128,8)" fg:x="37419695268" fg:w="205705045"/><text x="58.1074%" y="703.50"></text></g><g><title>oorandom::Rand64::rand_range (178,213,600 samples, 0.28%)</title><rect x="57.8999%" y="677" width="0.2755%" height="15" fill="rgb(248,202,8)" fg:x="37447186713" fg:w="178213600"/><text x="58.1499%" y="687.50"></text></g><g><title>oorandom::Rand64::rand_u64 (100,501,352 samples, 0.16%)</title><rect x="58.0201%" y="661" width="0.1554%" height="15" fill="rgb(206,104,37)" fg:x="37524898961" fg:w="100501352"/><text x="58.2701%" y="671.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (41,509,827 samples, 0.06%)</title><rect x="58.1113%" y="645" width="0.0642%" height="15" fill="rgb(223,8,27)" fg:x="37583890486" fg:w="41509827"/><text x="58.3613%" y="655.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (19,028,708 samples, 0.03%)</title><rect x="58.2714%" y="581" width="0.0294%" height="15" fill="rgb(216,217,28)" fg:x="37687461898" fg:w="19028708"/><text x="58.5214%" y="591.50"></text></g><g><title>rayon::slice::quicksort::choose_pivot (65,368,810 samples, 0.10%)</title><rect x="58.2065%" y="629" width="0.1011%" height="15" fill="rgb(249,199,1)" fg:x="37645430668" fg:w="65368810"/><text x="58.4565%" y="639.50"></text></g><g><title>rayon::slice::quicksort::choose_pivot::_{{closure}} (52,228,633 samples, 0.08%)</title><rect x="58.2268%" y="613" width="0.0808%" height="15" fill="rgb(240,85,17)" fg:x="37658570845" fg:w="52228633"/><text x="58.4768%" y="623.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::_{{closure}} (23,337,580 samples, 0.04%)</title><rect x="58.2714%" y="597" width="0.0361%" height="15" fill="rgb(206,108,45)" fg:x="37687461898" fg:w="23337580"/><text x="58.5214%" y="607.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (90,412,400 samples, 0.14%)</title><rect x="58.4693%" y="613" width="0.1398%" height="15" fill="rgb(245,210,41)" fg:x="37815401593" fg:w="90412400"/><text x="58.7193%" y="623.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (90,412,400 samples, 0.14%)</title><rect x="58.4693%" y="597" width="0.1398%" height="15" fill="rgb(206,13,37)" fg:x="37815401593" fg:w="90412400"/><text x="58.7193%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (57,880,883 samples, 0.09%)</title><rect x="59.1391%" y="597" width="0.0895%" height="15" fill="rgb(250,61,18)" fg:x="38248647408" fg:w="57880883"/><text x="59.3891%" y="607.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range&lt;A&gt;&gt;::next_back (57,880,883 samples, 0.09%)</title><rect x="59.1391%" y="581" width="0.0895%" height="15" fill="rgb(235,172,48)" fg:x="38248647408" fg:w="57880883"/><text x="59.3891%" y="591.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (57,880,883 samples, 0.09%)</title><rect x="59.1391%" y="565" width="0.0895%" height="15" fill="rgb(249,201,17)" fg:x="38248647408" fg:w="57880883"/><text x="59.3891%" y="575.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (44,179,264 samples, 0.07%)</title><rect x="59.1603%" y="549" width="0.0683%" height="15" fill="rgb(219,208,6)" fg:x="38262349027" fg:w="44179264"/><text x="59.4103%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (127,231,905 samples, 0.20%)</title><rect x="59.2286%" y="597" width="0.1967%" height="15" fill="rgb(248,31,23)" fg:x="38306528291" fg:w="127231905"/><text x="59.4786%" y="607.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (17,692,875 samples, 0.03%)</title><rect x="59.4254%" y="581" width="0.0274%" height="15" fill="rgb(245,15,42)" fg:x="38433760196" fg:w="17692875"/><text x="59.6754%" y="591.50"></text></g><g><title>rayon::slice::quicksort::insertion_sort (778,739,711 samples, 1.20%)</title><rect x="58.3075%" y="629" width="1.2041%" height="15" fill="rgb(222,217,39)" fg:x="37710799478" fg:w="778739711"/><text x="58.5575%" y="639.50"></text></g><g><title>rayon::slice::quicksort::shift_tail (583,725,196 samples, 0.90%)</title><rect x="58.6091%" y="613" width="0.9025%" height="15" fill="rgb(210,219,27)" fg:x="37905813993" fg:w="583725196"/><text x="58.8591%" y="623.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::_{{closure}} (55,778,993 samples, 0.09%)</title><rect x="59.4254%" y="597" width="0.0862%" height="15" fill="rgb(252,166,36)" fg:x="38433760196" fg:w="55778993"/><text x="59.6754%" y="607.50"></text></g><g><title>core::ops::function::Fn::call (38,086,118 samples, 0.06%)</title><rect x="59.4527%" y="581" width="0.0589%" height="15" fill="rgb(245,132,34)" fg:x="38451453071" fg:w="38086118"/><text x="59.7027%" y="591.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (12,543,971 samples, 0.02%)</title><rect x="59.6114%" y="613" width="0.0194%" height="15" fill="rgb(236,54,3)" fg:x="38554080804" fg:w="12543971"/><text x="59.8614%" y="623.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (16,120,501 samples, 0.02%)</title><rect x="59.6308%" y="613" width="0.0249%" height="15" fill="rgb(241,173,43)" fg:x="38566624775" fg:w="16120501"/><text x="59.8808%" y="623.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (16,120,501 samples, 0.02%)</title><rect x="59.6308%" y="597" width="0.0249%" height="15" fill="rgb(215,190,9)" fg:x="38566624775" fg:w="16120501"/><text x="59.8808%" y="607.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_sub (8,541,010 samples, 0.01%)</title><rect x="59.6425%" y="581" width="0.0132%" height="15" fill="rgb(242,101,16)" fg:x="38574204266" fg:w="8541010"/><text x="59.8925%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (26,988,566 samples, 0.04%)</title><rect x="59.8052%" y="597" width="0.0417%" height="15" fill="rgb(223,190,21)" fg:x="38679460620" fg:w="26988566"/><text x="60.0552%" y="607.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (44,183,826 samples, 0.07%)</title><rect x="59.8470%" y="597" width="0.0683%" height="15" fill="rgb(215,228,25)" fg:x="38706449186" fg:w="44183826"/><text x="60.0970%" y="607.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (44,183,826 samples, 0.07%)</title><rect x="59.8470%" y="581" width="0.0683%" height="15" fill="rgb(225,36,22)" fg:x="38706449186" fg:w="44183826"/><text x="60.0970%" y="591.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (68,305,768 samples, 0.11%)</title><rect x="59.9209%" y="597" width="0.1056%" height="15" fill="rgb(251,106,46)" fg:x="38754252665" fg:w="68305768"/><text x="60.1709%" y="607.50"></text></g><g><title>core::ptr::swap (36,976,629 samples, 0.06%)</title><rect x="60.0265%" y="597" width="0.0572%" height="15" fill="rgb(208,90,1)" fg:x="38822558433" fg:w="36976629"/><text x="60.2765%" y="607.50"></text></g><g><title>core::intrinsics::copy (36,976,629 samples, 0.06%)</title><rect x="60.0265%" y="581" width="0.0572%" height="15" fill="rgb(243,10,4)" fg:x="38822558433" fg:w="36976629"/><text x="60.2765%" y="591.50"></text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by::_{{closure}} (88,053,235 samples, 0.14%)</title><rect x="60.0837%" y="597" width="0.1361%" height="15" fill="rgb(212,137,27)" fg:x="38859535062" fg:w="88053235"/><text x="60.3337%" y="607.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (88,053,235 samples, 0.14%)</title><rect x="60.0837%" y="581" width="0.1361%" height="15" fill="rgb(231,220,49)" fg:x="38859535062" fg:w="88053235"/><text x="60.3337%" y="591.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (1,327,409,165 samples, 2.05%)</title><rect x="58.1755%" y="693" width="2.0524%" height="15" fill="rgb(237,96,20)" fg:x="37625400313" fg:w="1327409165"/><text x="58.4255%" y="703.50">c..</text></g><g><title>rayon::slice::ParallelSliceMut::par_sort_unstable_by (1,322,500,136 samples, 2.04%)</title><rect x="58.1831%" y="677" width="2.0448%" height="15" fill="rgb(239,229,30)" fg:x="37630309342" fg:w="1322500136"/><text x="58.4331%" y="687.50">r..</text></g><g><title>rayon::slice::quicksort::par_quicksort (1,322,500,136 samples, 2.04%)</title><rect x="58.1831%" y="661" width="2.0448%" height="15" fill="rgb(219,65,33)" fg:x="37630309342" fg:w="1322500136"/><text x="58.4331%" y="671.50">r..</text></g><g><title>rayon::slice::quicksort::recurse (1,322,500,136 samples, 2.04%)</title><rect x="58.1831%" y="645" width="2.0448%" height="15" fill="rgb(243,134,7)" fg:x="37630309342" fg:w="1322500136"/><text x="58.4331%" y="655.50">r..</text></g><g><title>rayon::slice::quicksort::partition (463,270,289 samples, 0.72%)</title><rect x="59.5116%" y="629" width="0.7163%" height="15" fill="rgb(216,177,54)" fg:x="38489539189" fg:w="463270289"/><text x="59.7616%" y="639.50"></text></g><g><title>rayon::slice::quicksort::partition_in_blocks (370,064,202 samples, 0.57%)</title><rect x="59.6557%" y="613" width="0.5722%" height="15" fill="rgb(211,160,20)" fg:x="38582745276" fg:w="370064202"/><text x="59.9057%" y="623.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (8,684,481 samples, 0.01%)</title><rect x="60.2302%" y="693" width="0.0134%" height="15" fill="rgb(239,85,39)" fg:x="38954300970" fg:w="8684481"/><text x="60.4802%" y="703.50"></text></g><g><title>crossbeam_epoch::sync::queue::Queue&lt;T&gt;::try_pop_if (8,684,481 samples, 0.01%)</title><rect x="60.2302%" y="677" width="0.0134%" height="15" fill="rgb(232,125,22)" fg:x="38954300970" fg:w="8684481"/><text x="60.4802%" y="687.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (45,670,562 samples, 0.07%)</title><rect x="60.2436%" y="469" width="0.0706%" height="15" fill="rgb(244,57,34)" fg:x="38962985451" fg:w="45670562"/><text x="60.4936%" y="479.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (45,670,562 samples, 0.07%)</title><rect x="60.2436%" y="453" width="0.0706%" height="15" fill="rgb(214,203,32)" fg:x="38962985451" fg:w="45670562"/><text x="60.4936%" y="463.50"></text></g><g><title>exp (45,670,562 samples, 0.07%)</title><rect x="60.2436%" y="437" width="0.0706%" height="15" fill="rgb(207,58,43)" fg:x="38962985451" fg:w="45670562"/><text x="60.4936%" y="447.50"></text></g><g><title>[libm.so.6] (37,771,631 samples, 0.06%)</title><rect x="60.2558%" y="421" width="0.0584%" height="15" fill="rgb(215,193,15)" fg:x="38970884382" fg:w="37771631"/><text x="60.5058%" y="431.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (63,110,311 samples, 0.10%)</title><rect x="60.2436%" y="485" width="0.0976%" height="15" fill="rgb(232,15,44)" fg:x="38962985451" fg:w="63110311"/><text x="60.4936%" y="495.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::sqrt (17,439,749 samples, 0.03%)</title><rect x="60.3142%" y="469" width="0.0270%" height="15" fill="rgb(212,3,48)" fg:x="39008656013" fg:w="17439749"/><text x="60.5642%" y="479.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::sqrt (17,439,749 samples, 0.03%)</title><rect x="60.3142%" y="453" width="0.0270%" height="15" fill="rgb(218,128,7)" fg:x="39008656013" fg:w="17439749"/><text x="60.5642%" y="463.50"></text></g><g><title>exp (83,566,512 samples, 0.13%)</title><rect x="60.2436%" y="693" width="0.1292%" height="15" fill="rgb(226,216,39)" fg:x="38962985451" fg:w="83566512"/><text x="60.4936%" y="703.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (83,566,512 samples, 0.13%)</title><rect x="60.2436%" y="677" width="0.1292%" height="15" fill="rgb(243,47,51)" fg:x="38962985451" fg:w="83566512"/><text x="60.4936%" y="687.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (83,566,512 samples, 0.13%)</title><rect x="60.2436%" y="661" width="0.1292%" height="15" fill="rgb(241,183,40)" fg:x="38962985451" fg:w="83566512"/><text x="60.4936%" y="671.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (83,566,512 samples, 0.13%)</title><rect x="60.2436%" y="645" width="0.1292%" height="15" fill="rgb(231,217,32)" fg:x="38962985451" fg:w="83566512"/><text x="60.4936%" y="655.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (83,566,512 samples, 0.13%)</title><rect x="60.2436%" y="629" width="0.1292%" height="15" fill="rgb(229,61,38)" fg:x="38962985451" fg:w="83566512"/><text x="60.4936%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (83,566,512 samples, 0.13%)</title><rect x="60.2436%" y="613" width="0.1292%" height="15" fill="rgb(225,210,5)" fg:x="38962985451" fg:w="83566512"/><text x="60.4936%" y="623.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (83,566,512 samples, 0.13%)</title><rect x="60.2436%" y="597" width="0.1292%" height="15" fill="rgb(231,79,45)" fg:x="38962985451" fg:w="83566512"/><text x="60.4936%" y="607.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (83,566,512 samples, 0.13%)</title><rect x="60.2436%" y="581" width="0.1292%" height="15" fill="rgb(224,100,7)" fg:x="38962985451" fg:w="83566512"/><text x="60.4936%" y="591.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (83,566,512 samples, 0.13%)</title><rect x="60.2436%" y="565" width="0.1292%" height="15" fill="rgb(241,198,18)" fg:x="38962985451" fg:w="83566512"/><text x="60.4936%" y="575.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::_{{closure}} (83,566,512 samples, 0.13%)</title><rect x="60.2436%" y="549" width="0.1292%" height="15" fill="rgb(252,97,53)" fg:x="38962985451" fg:w="83566512"/><text x="60.4936%" y="559.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (83,566,512 samples, 0.13%)</title><rect x="60.2436%" y="533" width="0.1292%" height="15" fill="rgb(220,88,7)" fg:x="38962985451" fg:w="83566512"/><text x="60.4936%" y="543.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (83,566,512 samples, 0.13%)</title><rect x="60.2436%" y="517" width="0.1292%" height="15" fill="rgb(213,176,14)" fg:x="38962985451" fg:w="83566512"/><text x="60.4936%" y="527.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::_{{closure}} (83,566,512 samples, 0.13%)</title><rect x="60.2436%" y="501" width="0.1292%" height="15" fill="rgb(246,73,7)" fg:x="38962985451" fg:w="83566512"/><text x="60.4936%" y="511.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (20,456,201 samples, 0.03%)</title><rect x="60.3412%" y="485" width="0.0316%" height="15" fill="rgb(245,64,36)" fg:x="39026095762" fg:w="20456201"/><text x="60.5912%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (79,665,376 samples, 0.12%)</title><rect x="60.4373%" y="645" width="0.1232%" height="15" fill="rgb(245,80,10)" fg:x="39088268206" fg:w="79665376"/><text x="60.6873%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (36,762,280 samples, 0.06%)</title><rect x="60.5735%" y="581" width="0.0568%" height="15" fill="rgb(232,107,50)" fg:x="39176338310" fg:w="36762280"/><text x="60.8235%" y="591.50"></text></g><g><title>alloc::alloc::dealloc (30,717,930 samples, 0.05%)</title><rect x="60.5829%" y="565" width="0.0475%" height="15" fill="rgb(253,3,0)" fg:x="39182382660" fg:w="30717930"/><text x="60.8329%" y="575.50"></text></g><g><title>__rdl_dealloc (30,717,930 samples, 0.05%)</title><rect x="60.5829%" y="549" width="0.0475%" height="15" fill="rgb(212,99,53)" fg:x="39182382660" fg:w="30717930"/><text x="60.8329%" y="559.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (30,717,930 samples, 0.05%)</title><rect x="60.5829%" y="533" width="0.0475%" height="15" fill="rgb(249,111,54)" fg:x="39182382660" fg:w="30717930"/><text x="60.8329%" y="543.50"></text></g><g><title>cfree (30,717,930 samples, 0.05%)</title><rect x="60.5829%" y="517" width="0.0475%" height="15" fill="rgb(249,55,30)" fg:x="39182382660" fg:w="30717930"/><text x="60.8329%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner,hashbrown::raw::RawTableInner::prepare_resize&lt;alloc::alloc::Global&gt;::{{closure}}&gt;&gt; (46,122,472 samples, 0.07%)</title><rect x="60.5699%" y="645" width="0.0713%" height="15" fill="rgb(237,47,42)" fg:x="39174018832" fg:w="46122472"/><text x="60.8199%" y="655.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (46,122,472 samples, 0.07%)</title><rect x="60.5699%" y="629" width="0.0713%" height="15" fill="rgb(211,20,18)" fg:x="39174018832" fg:w="46122472"/><text x="60.8199%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_resize::_{{closure}} (46,122,472 samples, 0.07%)</title><rect x="60.5699%" y="613" width="0.0713%" height="15" fill="rgb(231,203,46)" fg:x="39174018832" fg:w="46122472"/><text x="60.8199%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (43,802,994 samples, 0.07%)</title><rect x="60.5735%" y="597" width="0.0677%" height="15" fill="rgb(237,142,3)" fg:x="39176338310" fg:w="43802994"/><text x="60.8235%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner::allocation_info (7,040,714 samples, 0.01%)</title><rect x="60.6303%" y="581" width="0.0109%" height="15" fill="rgb(241,107,1)" fg:x="39213100590" fg:w="7040714"/><text x="60.8803%" y="591.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (7,040,714 samples, 0.01%)</title><rect x="60.6303%" y="565" width="0.0109%" height="15" fill="rgb(229,83,13)" fg:x="39213100590" fg:w="7040714"/><text x="60.8803%" y="575.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (7,040,714 samples, 0.01%)</title><rect x="60.6303%" y="549" width="0.0109%" height="15" fill="rgb(241,91,40)" fg:x="39213100590" fg:w="7040714"/><text x="60.8803%" y="559.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (7,040,714 samples, 0.01%)</title><rect x="60.6303%" y="533" width="0.0109%" height="15" fill="rgb(225,3,45)" fg:x="39213100590" fg:w="7040714"/><text x="60.8803%" y="543.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (30,936,822 samples, 0.05%)</title><rect x="60.6412%" y="629" width="0.0478%" height="15" fill="rgb(244,223,14)" fg:x="39220141304" fg:w="30936822"/><text x="60.8912%" y="639.50"></text></g><g><title>hashbrown::map::make_hash (30,936,822 samples, 0.05%)</title><rect x="60.6412%" y="613" width="0.0478%" height="15" fill="rgb(224,124,37)" fg:x="39220141304" fg:w="30936822"/><text x="60.8912%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (8,163,228 samples, 0.01%)</title><rect x="60.6764%" y="597" width="0.0126%" height="15" fill="rgb(251,171,30)" fg:x="39242914898" fg:w="8163228"/><text x="60.9264%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (35,985,762 samples, 0.06%)</title><rect x="60.6412%" y="645" width="0.0556%" height="15" fill="rgb(236,46,54)" fg:x="39220141304" fg:w="35985762"/><text x="60.8912%" y="655.50"></text></g><g><title>hashbrown::raw::RawTableInner::bucket_ptr (23,290,316 samples, 0.04%)</title><rect x="60.6969%" y="645" width="0.0360%" height="15" fill="rgb(245,213,5)" fg:x="39256127066" fg:w="23290316"/><text x="60.9469%" y="655.50"></text></g><g><title>core::intrinsics::likely (50,253,327 samples, 0.08%)</title><rect x="60.7385%" y="613" width="0.0777%" height="15" fill="rgb(230,144,27)" fg:x="39283022637" fg:w="50253327"/><text x="60.9885%" y="623.50"></text></g><g><title>core::intrinsics::likely (52,451,644 samples, 0.08%)</title><rect x="60.8238%" y="597" width="0.0811%" height="15" fill="rgb(220,86,6)" fg:x="39338204130" fg:w="52451644"/><text x="61.0738%" y="607.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (13,144,998 samples, 0.02%)</title><rect x="60.9049%" y="597" width="0.0203%" height="15" fill="rgb(240,20,13)" fg:x="39390655774" fg:w="13144998"/><text x="61.1549%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot_in_group (159,690,446 samples, 0.25%)</title><rect x="60.8238%" y="613" width="0.2469%" height="15" fill="rgb(217,89,34)" fg:x="39338204130" fg:w="159690446"/><text x="61.0738%" y="623.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_empty_or_deleted (94,093,804 samples, 0.15%)</title><rect x="60.9252%" y="597" width="0.1455%" height="15" fill="rgb(229,13,5)" fg:x="39403800772" fg:w="94093804"/><text x="61.1752%" y="607.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (94,093,804 samples, 0.15%)</title><rect x="60.9252%" y="581" width="0.1455%" height="15" fill="rgb(244,67,35)" fg:x="39403800772" fg:w="94093804"/><text x="61.1752%" y="591.50"></text></g><g><title>core::intrinsics::unlikely (56,795,201 samples, 0.09%)</title><rect x="61.0707%" y="597" width="0.0878%" height="15" fill="rgb(221,40,2)" fg:x="39497894576" fg:w="56795201"/><text x="61.3207%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot (291,521,369 samples, 0.45%)</title><rect x="60.7385%" y="629" width="0.4507%" height="15" fill="rgb(237,157,21)" fg:x="39283022637" fg:w="291521369"/><text x="60.9885%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner::fix_insert_slot (76,649,430 samples, 0.12%)</title><rect x="61.0707%" y="613" width="0.1185%" height="15" fill="rgb(222,94,11)" fg:x="39497894576" fg:w="76649430"/><text x="61.3207%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner::is_bucket_full (19,854,229 samples, 0.03%)</title><rect x="61.1585%" y="597" width="0.0307%" height="15" fill="rgb(249,113,6)" fg:x="39554689777" fg:w="19854229"/><text x="61.4085%" y="607.50"></text></g><g><title>hashbrown::control::tag::Tag::is_full (19,854,229 samples, 0.03%)</title><rect x="61.1585%" y="581" width="0.0307%" height="15" fill="rgb(238,137,36)" fg:x="39554689777" fg:w="19854229"/><text x="61.4085%" y="591.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_insert_slot (295,558,362 samples, 0.46%)</title><rect x="60.7385%" y="645" width="0.4570%" height="15" fill="rgb(210,102,26)" fg:x="39283022637" fg:w="295558362"/><text x="60.9885%" y="655.50"></text></g><g><title>[libc.so.6] (49,141,226 samples, 0.08%)</title><rect x="61.2247%" y="549" width="0.0760%" height="15" fill="rgb(218,30,30)" fg:x="39597489594" fg:w="49141226"/><text x="61.4747%" y="559.50"></text></g><g><title>[libc.so.6] (28,166,981 samples, 0.04%)</title><rect x="61.3007%" y="533" width="0.0436%" height="15" fill="rgb(214,67,26)" fg:x="39646630820" fg:w="28166981"/><text x="61.5507%" y="543.50"></text></g><g><title>[unknown] (28,166,981 samples, 0.04%)</title><rect x="61.3007%" y="517" width="0.0436%" height="15" fill="rgb(251,9,53)" fg:x="39646630820" fg:w="28166981"/><text x="61.5507%" y="527.50"></text></g><g><title>hashbrown::control::tag::TagSliceExt::fill_empty (96,216,821 samples, 0.15%)</title><rect x="61.1954%" y="613" width="0.1488%" height="15" fill="rgb(228,204,25)" fg:x="39578580999" fg:w="96216821"/><text x="61.4454%" y="623.50"></text></g><g><title>&lt;[hashbrown::control::tag::Tag] as hashbrown::control::tag::TagSliceExt&gt;::fill_tag (96,216,821 samples, 0.15%)</title><rect x="61.1954%" y="597" width="0.1488%" height="15" fill="rgb(207,153,8)" fg:x="39578580999" fg:w="96216821"/><text x="61.4454%" y="607.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (96,216,821 samples, 0.15%)</title><rect x="61.1954%" y="581" width="0.1488%" height="15" fill="rgb(242,9,16)" fg:x="39578580999" fg:w="96216821"/><text x="61.4454%" y="591.50"></text></g><g><title>core::intrinsics::write_bytes (96,216,821 samples, 0.15%)</title><rect x="61.1954%" y="565" width="0.1488%" height="15" fill="rgb(217,211,10)" fg:x="39578580999" fg:w="96216821"/><text x="61.4454%" y="575.50"></text></g><g><title>malloc (28,167,000 samples, 0.04%)</title><rect x="61.3007%" y="549" width="0.0436%" height="15" fill="rgb(219,228,52)" fg:x="39646630820" fg:w="28167000"/><text x="61.5507%" y="559.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (19,353,865 samples, 0.03%)</title><rect x="61.3442%" y="597" width="0.0299%" height="15" fill="rgb(231,92,29)" fg:x="39674797820" fg:w="19353865"/><text x="61.5942%" y="607.50"></text></g><g><title>[unknown] (1,463,924,875 samples, 2.26%)</title><rect x="61.7844%" y="469" width="2.2635%" height="15" fill="rgb(232,8,23)" fg:x="39959479137" fg:w="1463924875"/><text x="62.0344%" y="479.50">[..</text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1,791,096,905 samples, 2.77%)</title><rect x="61.3741%" y="597" width="2.7694%" height="15" fill="rgb(216,211,34)" fg:x="39694151685" fg:w="1791096905"/><text x="61.6241%" y="607.50">ha..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,787,262,032 samples, 2.76%)</title><rect x="61.3801%" y="581" width="2.7634%" height="15" fill="rgb(236,151,0)" fg:x="39697986558" fg:w="1787262032"/><text x="61.6301%" y="591.50">&lt;a..</text></g><g><title>alloc::alloc::Global::alloc_impl (1,787,262,032 samples, 2.76%)</title><rect x="61.3801%" y="565" width="2.7634%" height="15" fill="rgb(209,168,3)" fg:x="39697986558" fg:w="1787262032"/><text x="61.6301%" y="575.50">al..</text></g><g><title>alloc::alloc::alloc (1,787,262,032 samples, 2.76%)</title><rect x="61.3801%" y="549" width="2.7634%" height="15" fill="rgb(208,129,28)" fg:x="39697986558" fg:w="1787262032"/><text x="61.6301%" y="559.50">al..</text></g><g><title>__rdl_alloc (1,787,262,032 samples, 2.76%)</title><rect x="61.3801%" y="533" width="2.7634%" height="15" fill="rgb(229,78,22)" fg:x="39697986558" fg:w="1787262032"/><text x="61.6301%" y="543.50">__..</text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1,787,262,032 samples, 2.76%)</title><rect x="61.3801%" y="517" width="2.7634%" height="15" fill="rgb(228,187,13)" fg:x="39697986558" fg:w="1787262032"/><text x="61.6301%" y="527.50">st..</text></g><g><title>malloc (1,787,262,032 samples, 2.76%)</title><rect x="61.3801%" y="501" width="2.7634%" height="15" fill="rgb(240,119,24)" fg:x="39697986558" fg:w="1787262032"/><text x="61.6301%" y="511.50">ma..</text></g><g><title>[libc.so.6] (1,706,050,354 samples, 2.64%)</title><rect x="61.5056%" y="485" width="2.6379%" height="15" fill="rgb(209,194,42)" fg:x="39779198236" fg:w="1706050354"/><text x="61.7556%" y="495.50">[l..</text></g><g><title>__default_morecore (61,844,578 samples, 0.10%)</title><rect x="64.0479%" y="469" width="0.0956%" height="15" fill="rgb(247,200,46)" fg:x="41423404012" fg:w="61844578"/><text x="64.2979%" y="479.50"></text></g><g><title>__sbrk (61,844,578 samples, 0.10%)</title><rect x="64.0479%" y="453" width="0.0956%" height="15" fill="rgb(218,76,16)" fg:x="41423404012" fg:w="61844578"/><text x="64.2979%" y="463.50"></text></g><g><title>brk (61,844,578 samples, 0.10%)</title><rect x="64.0479%" y="437" width="0.0956%" height="15" fill="rgb(225,21,48)" fg:x="41423404012" fg:w="61844578"/><text x="64.2979%" y="447.50"></text></g><g><title>[unknown] (61,844,578 samples, 0.10%)</title><rect x="64.0479%" y="421" width="0.0956%" height="15" fill="rgb(239,223,50)" fg:x="41423404012" fg:w="61844578"/><text x="64.2979%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1,813,916,646 samples, 2.80%)</title><rect x="61.3442%" y="613" width="2.8046%" height="15" fill="rgb(244,45,21)" fg:x="39674797820" fg:w="1813916646"/><text x="61.5942%" y="623.50">ha..</text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (2,436,555,446 samples, 3.77%)</title><rect x="60.4112%" y="661" width="3.7673%" height="15" fill="rgb(232,33,43)" fg:x="39071385403" fg:w="2436555446"/><text x="60.6612%" y="671.50">hash..</text></g><g><title>hashbrown::raw::RawTableInner::prepare_resize (1,929,359,850 samples, 2.98%)</title><rect x="61.1954%" y="645" width="2.9831%" height="15" fill="rgb(209,8,3)" fg:x="39578580999" fg:w="1929359850"/><text x="61.4454%" y="655.50">has..</text></g><g><title>hashbrown::raw::RawTableInner::fallible_with_capacity (1,929,359,850 samples, 2.98%)</title><rect x="61.1954%" y="629" width="2.9831%" height="15" fill="rgb(214,25,53)" fg:x="39578580999" fg:w="1929359850"/><text x="61.4454%" y="639.50">has..</text></g><g><title>hashbrown::raw::capacity_to_buckets (19,226,383 samples, 0.03%)</title><rect x="64.1488%" y="613" width="0.0297%" height="15" fill="rgb(254,186,54)" fg:x="41488714466" fg:w="19226383"/><text x="64.3988%" y="623.50"></text></g><g><title>core::num::&lt;impl usize&gt;::next_power_of_two (6,494,901 samples, 0.01%)</title><rect x="64.1685%" y="597" width="0.0100%" height="15" fill="rgb(208,174,49)" fg:x="41501445948" fg:w="6494901"/><text x="64.4185%" y="607.50"></text></g><g><title>core::num::&lt;impl usize&gt;::one_less_than_next_power_of_two (6,494,901 samples, 0.01%)</title><rect x="64.1685%" y="581" width="0.0100%" height="15" fill="rgb(233,191,51)" fg:x="41501445948" fg:w="6494901"/><text x="64.4185%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2,469,084,182 samples, 3.82%)</title><rect x="60.3728%" y="693" width="3.8176%" height="15" fill="rgb(222,134,10)" fg:x="39046551963" fg:w="2469084182"/><text x="60.6228%" y="703.50">hash..</text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (2,451,374,645 samples, 3.79%)</title><rect x="60.4002%" y="677" width="3.7903%" height="15" fill="rgb(230,226,20)" fg:x="39064261500" fg:w="2451374645"/><text x="60.6502%" y="687.50">hash..</text></g><g><title>hashbrown::raw::bucket_mask_to_capacity (7,695,296 samples, 0.01%)</title><rect x="64.1786%" y="661" width="0.0119%" height="15" fill="rgb(251,111,25)" fg:x="41507940849" fg:w="7695296"/><text x="64.4286%" y="671.50"></text></g><g><title>[unknown] (182,548,363 samples, 0.28%)</title><rect x="64.9119%" y="421" width="0.2823%" height="15" fill="rgb(224,40,46)" fg:x="41982235039" fg:w="182548363"/><text x="65.1619%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (476,848,573 samples, 0.74%)</title><rect x="64.4642%" y="597" width="0.7373%" height="15" fill="rgb(236,108,47)" fg:x="41692659810" fg:w="476848573"/><text x="64.7142%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (476,848,573 samples, 0.74%)</title><rect x="64.4642%" y="581" width="0.7373%" height="15" fill="rgb(234,93,0)" fg:x="41692659810" fg:w="476848573"/><text x="64.7142%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (476,848,573 samples, 0.74%)</title><rect x="64.4642%" y="565" width="0.7373%" height="15" fill="rgb(224,213,32)" fg:x="41692659810" fg:w="476848573"/><text x="64.7142%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (476,848,573 samples, 0.74%)</title><rect x="64.4642%" y="549" width="0.7373%" height="15" fill="rgb(251,11,48)" fg:x="41692659810" fg:w="476848573"/><text x="64.7142%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (472,709,124 samples, 0.73%)</title><rect x="64.4706%" y="533" width="0.7309%" height="15" fill="rgb(236,173,5)" fg:x="41696799259" fg:w="472709124"/><text x="64.7206%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (472,709,124 samples, 0.73%)</title><rect x="64.4706%" y="517" width="0.7309%" height="15" fill="rgb(230,95,12)" fg:x="41696799259" fg:w="472709124"/><text x="64.7206%" y="527.50"></text></g><g><title>alloc::alloc::alloc (472,709,124 samples, 0.73%)</title><rect x="64.4706%" y="501" width="0.7309%" height="15" fill="rgb(232,209,1)" fg:x="41696799259" fg:w="472709124"/><text x="64.7206%" y="511.50"></text></g><g><title>__rdl_alloc (472,709,124 samples, 0.73%)</title><rect x="64.4706%" y="485" width="0.7309%" height="15" fill="rgb(232,6,1)" fg:x="41696799259" fg:w="472709124"/><text x="64.7206%" y="495.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (472,709,124 samples, 0.73%)</title><rect x="64.4706%" y="469" width="0.7309%" height="15" fill="rgb(210,224,50)" fg:x="41696799259" fg:w="472709124"/><text x="64.7206%" y="479.50"></text></g><g><title>malloc (468,604,277 samples, 0.72%)</title><rect x="64.4769%" y="453" width="0.7245%" height="15" fill="rgb(228,127,35)" fg:x="41700904106" fg:w="468604277"/><text x="64.7269%" y="463.50"></text></g><g><title>[libc.so.6] (398,625,627 samples, 0.62%)</title><rect x="64.5851%" y="437" width="0.6163%" height="15" fill="rgb(245,102,45)" fg:x="41770882756" fg:w="398625627"/><text x="64.8351%" y="447.50"></text></g><g><title>[libc.so.6] (51,034,068 samples, 0.08%)</title><rect x="65.2015%" y="565" width="0.0789%" height="15" fill="rgb(214,1,49)" fg:x="42169508383" fg:w="51034068"/><text x="65.4515%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (546,336,440 samples, 0.84%)</title><rect x="64.4642%" y="677" width="0.8447%" height="15" fill="rgb(226,163,40)" fg:x="41692659810" fg:w="546336440"/><text x="64.7142%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (546,336,440 samples, 0.84%)</title><rect x="64.4642%" y="661" width="0.8447%" height="15" fill="rgb(239,212,28)" fg:x="41692659810" fg:w="546336440"/><text x="64.7142%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (546,336,440 samples, 0.84%)</title><rect x="64.4642%" y="645" width="0.8447%" height="15" fill="rgb(220,20,13)" fg:x="41692659810" fg:w="546336440"/><text x="64.7142%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (546,336,440 samples, 0.84%)</title><rect x="64.4642%" y="629" width="0.8447%" height="15" fill="rgb(210,164,35)" fg:x="41692659810" fg:w="546336440"/><text x="64.7142%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (546,336,440 samples, 0.84%)</title><rect x="64.4642%" y="613" width="0.8447%" height="15" fill="rgb(248,109,41)" fg:x="41692659810" fg:w="546336440"/><text x="64.7142%" y="623.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (69,487,867 samples, 0.11%)</title><rect x="65.2015%" y="597" width="0.1074%" height="15" fill="rgb(238,23,50)" fg:x="42169508383" fg:w="69487867"/><text x="65.4515%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (69,487,867 samples, 0.11%)</title><rect x="65.2015%" y="581" width="0.1074%" height="15" fill="rgb(211,48,49)" fg:x="42169508383" fg:w="69487867"/><text x="65.4515%" y="591.50"></text></g><g><title>malloc (18,453,799 samples, 0.03%)</title><rect x="65.2804%" y="565" width="0.0285%" height="15" fill="rgb(223,36,21)" fg:x="42220542451" fg:w="18453799"/><text x="65.5304%" y="575.50"></text></g><g><title>[libc.so.6] (18,453,799 samples, 0.03%)</title><rect x="65.2804%" y="549" width="0.0285%" height="15" fill="rgb(207,123,46)" fg:x="42220542451" fg:w="18453799"/><text x="65.5304%" y="559.50"></text></g><g><title>[unknown] (18,453,799 samples, 0.03%)</title><rect x="65.2804%" y="533" width="0.0285%" height="15" fill="rgb(240,218,32)" fg:x="42220542451" fg:w="18453799"/><text x="65.5304%" y="543.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (8,576,420 samples, 0.01%)</title><rect x="65.3773%" y="661" width="0.0133%" height="15" fill="rgb(252,5,43)" fg:x="42283241355" fg:w="8576420"/><text x="65.6273%" y="671.50"></text></g><g><title>json_parser::Parser::parse_array (114,892,695 samples, 0.18%)</title><rect x="65.3089%" y="677" width="0.1776%" height="15" fill="rgb(252,84,19)" fg:x="42238996250" fg:w="114892695"/><text x="65.5589%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (62,071,170 samples, 0.10%)</title><rect x="65.3906%" y="661" width="0.0960%" height="15" fill="rgb(243,152,39)" fg:x="42291817775" fg:w="62071170"/><text x="65.6406%" y="671.50"></text></g><g><title>core::ptr::write (62,071,170 samples, 0.10%)</title><rect x="65.3906%" y="645" width="0.0960%" height="15" fill="rgb(234,160,15)" fg:x="42291817775" fg:w="62071170"/><text x="65.6406%" y="655.50"></text></g><g><title>[unknown] (267,341,487 samples, 0.41%)</title><rect x="66.7342%" y="405" width="0.4134%" height="15" fill="rgb(237,34,20)" fg:x="43160823377" fg:w="267341487"/><text x="66.9842%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (770,702,864 samples, 1.19%)</title><rect x="65.9595%" y="517" width="1.1916%" height="15" fill="rgb(229,97,13)" fg:x="42659765227" fg:w="770702864"/><text x="66.2095%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (770,702,864 samples, 1.19%)</title><rect x="65.9595%" y="501" width="1.1916%" height="15" fill="rgb(234,71,50)" fg:x="42659765227" fg:w="770702864"/><text x="66.2095%" y="511.50"></text></g><g><title>alloc::alloc::alloc (770,702,864 samples, 1.19%)</title><rect x="65.9595%" y="485" width="1.1916%" height="15" fill="rgb(253,155,4)" fg:x="42659765227" fg:w="770702864"/><text x="66.2095%" y="495.50"></text></g><g><title>__rdl_alloc (770,702,864 samples, 1.19%)</title><rect x="65.9595%" y="469" width="1.1916%" height="15" fill="rgb(222,185,37)" fg:x="42659765227" fg:w="770702864"/><text x="66.2095%" y="479.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (770,702,864 samples, 1.19%)</title><rect x="65.9595%" y="453" width="1.1916%" height="15" fill="rgb(251,177,13)" fg:x="42659765227" fg:w="770702864"/><text x="66.2095%" y="463.50"></text></g><g><title>malloc (768,287,310 samples, 1.19%)</title><rect x="65.9632%" y="437" width="1.1879%" height="15" fill="rgb(250,179,40)" fg:x="42662180781" fg:w="768287310"/><text x="66.2132%" y="447.50"></text></g><g><title>[libc.so.6] (635,702,389 samples, 0.98%)</title><rect x="66.1682%" y="421" width="0.9829%" height="15" fill="rgb(242,44,2)" fg:x="42794765702" fg:w="635702389"/><text x="66.4182%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (787,165,859 samples, 1.22%)</title><rect x="65.9478%" y="581" width="1.2171%" height="15" fill="rgb(216,177,13)" fg:x="42652173519" fg:w="787165859"/><text x="66.1978%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (787,165,859 samples, 1.22%)</title><rect x="65.9478%" y="565" width="1.2171%" height="15" fill="rgb(216,106,43)" fg:x="42652173519" fg:w="787165859"/><text x="66.1978%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (787,165,859 samples, 1.22%)</title><rect x="65.9478%" y="549" width="1.2171%" height="15" fill="rgb(216,183,2)" fg:x="42652173519" fg:w="787165859"/><text x="66.1978%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (787,165,859 samples, 1.22%)</title><rect x="65.9478%" y="533" width="1.2171%" height="15" fill="rgb(249,75,3)" fg:x="42652173519" fg:w="787165859"/><text x="66.1978%" y="543.50"></text></g><g><title>alloc::raw_vec::layout_array (8,871,287 samples, 0.01%)</title><rect x="67.1511%" y="517" width="0.0137%" height="15" fill="rgb(219,67,39)" fg:x="43430468091" fg:w="8871287"/><text x="67.4011%" y="527.50"></text></g><g><title>core::alloc::layout::Layout::repeat (8,871,287 samples, 0.01%)</title><rect x="67.1511%" y="501" width="0.0137%" height="15" fill="rgb(253,228,2)" fg:x="43430468091" fg:w="8871287"/><text x="67.4011%" y="511.50"></text></g><g><title>core::alloc::layout::Layout::repeat_packed (8,871,287 samples, 0.01%)</title><rect x="67.1511%" y="485" width="0.0137%" height="15" fill="rgb(235,138,27)" fg:x="43430468091" fg:w="8871287"/><text x="67.4011%" y="495.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (8,871,287 samples, 0.01%)</title><rect x="67.1511%" y="469" width="0.0137%" height="15" fill="rgb(236,97,51)" fg:x="43430468091" fg:w="8871287"/><text x="67.4011%" y="479.50"></text></g><g><title>core::intrinsics::unlikely (8,871,287 samples, 0.01%)</title><rect x="67.1511%" y="453" width="0.0137%" height="15" fill="rgb(240,80,30)" fg:x="43430468091" fg:w="8871287"/><text x="67.4011%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (851,558,319 samples, 1.32%)</title><rect x="65.9478%" y="661" width="1.3167%" height="15" fill="rgb(230,178,19)" fg:x="42652173519" fg:w="851558319"/><text x="66.1978%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (851,558,319 samples, 1.32%)</title><rect x="65.9478%" y="645" width="1.3167%" height="15" fill="rgb(210,190,27)" fg:x="42652173519" fg:w="851558319"/><text x="66.1978%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (851,558,319 samples, 1.32%)</title><rect x="65.9478%" y="629" width="1.3167%" height="15" fill="rgb(222,107,31)" fg:x="42652173519" fg:w="851558319"/><text x="66.1978%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (851,558,319 samples, 1.32%)</title><rect x="65.9478%" y="613" width="1.3167%" height="15" fill="rgb(216,127,34)" fg:x="42652173519" fg:w="851558319"/><text x="66.1978%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (851,558,319 samples, 1.32%)</title><rect x="65.9478%" y="597" width="1.3167%" height="15" fill="rgb(234,116,52)" fg:x="42652173519" fg:w="851558319"/><text x="66.1978%" y="607.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (64,392,460 samples, 0.10%)</title><rect x="67.1649%" y="581" width="0.0996%" height="15" fill="rgb(222,124,15)" fg:x="43439339378" fg:w="64392460"/><text x="67.4149%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (64,392,460 samples, 0.10%)</title><rect x="67.1649%" y="565" width="0.0996%" height="15" fill="rgb(231,179,28)" fg:x="43439339378" fg:w="64392460"/><text x="67.4149%" y="575.50"></text></g><g><title>[libc.so.6] (60,415,940 samples, 0.09%)</title><rect x="67.1710%" y="549" width="0.0934%" height="15" fill="rgb(226,93,45)" fg:x="43443315898" fg:w="60415940"/><text x="67.4210%" y="559.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (382,035,524 samples, 0.59%)</title><rect x="67.2644%" y="661" width="0.5907%" height="15" fill="rgb(215,8,51)" fg:x="43503731838" fg:w="382035524"/><text x="67.5144%" y="671.50"></text></g><g><title>core::cmp::PartialEq::ne (30,211,991 samples, 0.05%)</title><rect x="67.8629%" y="661" width="0.0467%" height="15" fill="rgb(223,106,5)" fg:x="43890785588" fg:w="30211991"/><text x="68.1129%" y="671.50"></text></g><g><title>&lt;json_parser::Token as core::cmp::PartialEq&gt;::eq (30,211,991 samples, 0.05%)</title><rect x="67.8629%" y="645" width="0.0467%" height="15" fill="rgb(250,191,5)" fg:x="43890785588" fg:w="30211991"/><text x="68.1129%" y="655.50"></text></g><g><title>malloc (58,803,987 samples, 0.09%)</title><rect x="67.9096%" y="661" width="0.0909%" height="15" fill="rgb(242,132,44)" fg:x="43920997579" fg:w="58803987"/><text x="68.1596%" y="671.50"></text></g><g><title>[libc.so.6] (58,803,987 samples, 0.09%)</title><rect x="67.9096%" y="645" width="0.0909%" height="15" fill="rgb(251,152,29)" fg:x="43920997579" fg:w="58803987"/><text x="68.1596%" y="655.50"></text></g><g><title>[unknown] (58,803,987 samples, 0.09%)</title><rect x="67.9096%" y="629" width="0.0909%" height="15" fill="rgb(218,179,5)" fg:x="43920997579" fg:w="58803987"/><text x="68.1596%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (7,834,845 samples, 0.01%)</title><rect x="68.0455%" y="597" width="0.0121%" height="15" fill="rgb(227,67,19)" fg:x="44008932666" fg:w="7834845"/><text x="68.2955%" y="607.50"></text></g><g><title>core::intrinsics::unlikely (7,834,845 samples, 0.01%)</title><rect x="68.0455%" y="581" width="0.0121%" height="15" fill="rgb(233,119,31)" fg:x="44008932666" fg:w="7834845"/><text x="68.2955%" y="591.50"></text></g><g><title>&lt;hashbrown::control::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (87,602,844 samples, 0.14%)</title><rect x="68.0577%" y="581" width="0.1354%" height="15" fill="rgb(241,120,22)" fg:x="44016767511" fg:w="87602844"/><text x="68.3077%" y="591.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (87,602,844 samples, 0.14%)</title><rect x="68.0577%" y="565" width="0.1354%" height="15" fill="rgb(224,102,30)" fg:x="44016767511" fg:w="87602844"/><text x="68.3077%" y="575.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_tag (78,283,025 samples, 0.12%)</title><rect x="68.2031%" y="581" width="0.1210%" height="15" fill="rgb(210,164,37)" fg:x="44110805841" fg:w="78283025"/><text x="68.4531%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (78,283,025 samples, 0.12%)</title><rect x="68.2031%" y="565" width="0.1210%" height="15" fill="rgb(226,191,16)" fg:x="44110805841" fg:w="78283025"/><text x="68.4531%" y="575.50"></text></g><g><title>hashbrown::control::tag::Tag::full (29,519,897 samples, 0.05%)</title><rect x="68.3241%" y="581" width="0.0456%" height="15" fill="rgb(214,40,45)" fg:x="44189088866" fg:w="29519897"/><text x="68.5741%" y="591.50"></text></g><g><title>core::intrinsics::likely (17,480,281 samples, 0.03%)</title><rect x="68.3804%" y="565" width="0.0270%" height="15" fill="rgb(244,29,26)" fg:x="44225510792" fg:w="17480281"/><text x="68.6304%" y="575.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot_in_group (25,752,788 samples, 0.04%)</title><rect x="68.3740%" y="581" width="0.0398%" height="15" fill="rgb(216,16,5)" fg:x="44221378587" fg:w="25752788"/><text x="68.6240%" y="591.50"></text></g><g><title>core::intrinsics::unlikely (17,034,840 samples, 0.03%)</title><rect x="68.4138%" y="565" width="0.0263%" height="15" fill="rgb(249,76,35)" fg:x="44247131375" fg:w="17034840"/><text x="68.6638%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (338,522,927 samples, 0.52%)</title><rect x="68.0455%" y="629" width="0.5234%" height="15" fill="rgb(207,11,44)" fg:x="44008932666" fg:w="338522927"/><text x="68.2955%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (338,522,927 samples, 0.52%)</title><rect x="68.0455%" y="613" width="0.5234%" height="15" fill="rgb(228,190,49)" fg:x="44008932666" fg:w="338522927"/><text x="68.2955%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (330,688,082 samples, 0.51%)</title><rect x="68.0577%" y="597" width="0.5113%" height="15" fill="rgb(214,173,12)" fg:x="44016767511" fg:w="330688082"/><text x="68.3077%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner::fix_insert_slot (100,324,218 samples, 0.16%)</title><rect x="68.4138%" y="581" width="0.1551%" height="15" fill="rgb(218,26,35)" fg:x="44247131375" fg:w="100324218"/><text x="68.6638%" y="591.50"></text></g><g><title>hashbrown::raw::RawTableInner::is_bucket_full (83,289,378 samples, 0.13%)</title><rect x="68.4402%" y="565" width="0.1288%" height="15" fill="rgb(220,200,19)" fg:x="44264166215" fg:w="83289378"/><text x="68.6902%" y="575.50"></text></g><g><title>hashbrown::control::tag::Tag::is_full (83,289,378 samples, 0.13%)</title><rect x="68.4402%" y="549" width="0.1288%" height="15" fill="rgb(239,95,49)" fg:x="44264166215" fg:w="83289378"/><text x="68.6902%" y="559.50"></text></g><g><title>hashbrown::map::make_hash (28,660,087 samples, 0.04%)</title><rect x="68.5690%" y="629" width="0.0443%" height="15" fill="rgb(235,85,53)" fg:x="44347455593" fg:w="28660087"/><text x="68.8190%" y="639.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (74,350,360 samples, 0.11%)</title><rect x="68.6133%" y="613" width="0.1150%" height="15" fill="rgb(233,133,31)" fg:x="44376115680" fg:w="74350360"/><text x="68.8633%" y="623.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (74,350,360 samples, 0.11%)</title><rect x="68.6133%" y="597" width="0.1150%" height="15" fill="rgb(218,25,20)" fg:x="44376115680" fg:w="74350360"/><text x="68.8633%" y="607.50"></text></g><g><title>core::ptr::write (74,350,360 samples, 0.11%)</title><rect x="68.6133%" y="581" width="0.1150%" height="15" fill="rgb(252,210,38)" fg:x="44376115680" fg:w="74350360"/><text x="68.8633%" y="591.50"></text></g><g><title>core::convert::num::&lt;impl core::convert::From&lt;bool&gt; for usize&gt;::from (7,945,196 samples, 0.01%)</title><rect x="68.7662%" y="597" width="0.0123%" height="15" fill="rgb(242,134,21)" fg:x="44474996646" fg:w="7945196"/><text x="69.0162%" y="607.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (506,797,033 samples, 0.78%)</title><rect x="68.0005%" y="661" width="0.7836%" height="15" fill="rgb(213,28,48)" fg:x="43979801566" fg:w="506797033"/><text x="68.2505%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (506,797,033 samples, 0.78%)</title><rect x="68.0005%" y="645" width="0.7836%" height="15" fill="rgb(250,196,2)" fg:x="43979801566" fg:w="506797033"/><text x="68.2505%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (110,482,919 samples, 0.17%)</title><rect x="68.6133%" y="629" width="0.1708%" height="15" fill="rgb(227,5,17)" fg:x="44376115680" fg:w="110482919"/><text x="68.8633%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner::record_item_insert_at (31,265,124 samples, 0.05%)</title><rect x="68.7358%" y="613" width="0.0483%" height="15" fill="rgb(221,226,24)" fg:x="44455333475" fg:w="31265124"/><text x="68.9858%" y="623.50"></text></g><g><title>json_parser::Parser::parse (2,977,786,512 samples, 4.60%)</title><rect x="64.1905%" y="693" width="4.6042%" height="15" fill="rgb(211,5,48)" fg:x="41515636145" fg:w="2977786512"/><text x="64.4405%" y="703.50">json_..</text></g><g><title>json_parser::Parser::parse_object (2,139,533,712 samples, 3.31%)</title><rect x="65.4866%" y="677" width="3.3081%" height="15" fill="rgb(219,150,6)" fg:x="42353888945" fg:w="2139533712"/><text x="65.7366%" y="687.50">jso..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V&gt;::new (6,824,058 samples, 0.01%)</title><rect x="68.7841%" y="661" width="0.0106%" height="15" fill="rgb(251,46,16)" fg:x="44486598599" fg:w="6824058"/><text x="69.0341%" y="671.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (6,824,058 samples, 0.01%)</title><rect x="68.7841%" y="645" width="0.0106%" height="15" fill="rgb(220,204,40)" fg:x="44486598599" fg:w="6824058"/><text x="69.0341%" y="655.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::with_hasher (6,824,058 samples, 0.01%)</title><rect x="68.7841%" y="629" width="0.0106%" height="15" fill="rgb(211,85,2)" fg:x="44486598599" fg:w="6824058"/><text x="69.0341%" y="639.50"></text></g><g><title>[libc.so.6] (50,968,228 samples, 0.08%)</title><rect x="68.7947%" y="677" width="0.0788%" height="15" fill="rgb(229,17,7)" fg:x="44493422657" fg:w="50968228"/><text x="69.0447%" y="687.50"></text></g><g><title>[unknown] (29,845,998 samples, 0.05%)</title><rect x="68.8273%" y="661" width="0.0461%" height="15" fill="rgb(239,72,28)" fg:x="44514544887" fg:w="29845998"/><text x="69.0773%" y="671.50"></text></g><g><title>core::hash::BuildHasher::hash_one (38,131,721 samples, 0.06%)</title><rect x="68.8735%" y="677" width="0.0590%" height="15" fill="rgb(230,47,54)" fg:x="44544390885" fg:w="38131721"/><text x="69.1235%" y="687.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (25,381,659 samples, 0.04%)</title><rect x="68.8932%" y="661" width="0.0392%" height="15" fill="rgb(214,50,8)" fg:x="44557140947" fg:w="25381659"/><text x="69.1432%" y="671.50"></text></g><g><title>malloc (91,453,902 samples, 0.14%)</title><rect x="68.7947%" y="693" width="0.1414%" height="15" fill="rgb(216,198,43)" fg:x="44493422657" fg:w="91453902"/><text x="69.0447%" y="703.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (13,053,277 samples, 0.02%)</title><rect x="68.9390%" y="677" width="0.0202%" height="15" fill="rgb(234,20,35)" fg:x="44586759926" fg:w="13053277"/><text x="69.1890%" y="687.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (715,611,043 samples, 1.11%)</title><rect x="69.1774%" y="517" width="1.1065%" height="15" fill="rgb(254,45,19)" fg:x="44740970452" fg:w="715611043"/><text x="69.4274%" y="527.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (20,483,866 samples, 0.03%)</title><rect x="70.2839%" y="485" width="0.0317%" height="15" fill="rgb(219,14,44)" fg:x="45456581495" fg:w="20483866"/><text x="70.5339%" y="495.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (94,014,582 samples, 0.15%)</title><rect x="70.3804%" y="85" width="0.1454%" height="15" fill="rgb(217,220,26)" fg:x="45518995238" fg:w="94014582"/><text x="70.6304%" y="95.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (94,014,582 samples, 0.15%)</title><rect x="70.3804%" y="69" width="0.1454%" height="15" fill="rgb(213,158,28)" fg:x="45518995238" fg:w="94014582"/><text x="70.6304%" y="79.50"></text></g><g><title>exp (94,014,582 samples, 0.15%)</title><rect x="70.3804%" y="53" width="0.1454%" height="15" fill="rgb(252,51,52)" fg:x="45518995238" fg:w="94014582"/><text x="70.6304%" y="63.50"></text></g><g><title>[libm.so.6] (60,144,610 samples, 0.09%)</title><rect x="70.4327%" y="37" width="0.0930%" height="15" fill="rgb(246,89,16)" fg:x="45552865210" fg:w="60144610"/><text x="70.6827%" y="47.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (115,401,649 samples, 0.18%)</title><rect x="70.3804%" y="101" width="0.1784%" height="15" fill="rgb(216,158,49)" fg:x="45518995238" fg:w="115401649"/><text x="70.6304%" y="111.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::sqrt (21,387,067 samples, 0.03%)</title><rect x="70.5257%" y="85" width="0.0331%" height="15" fill="rgb(236,107,19)" fg:x="45613009820" fg:w="21387067"/><text x="70.7757%" y="95.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::sqrt (21,387,067 samples, 0.03%)</title><rect x="70.5257%" y="69" width="0.0331%" height="15" fill="rgb(228,185,30)" fg:x="45613009820" fg:w="21387067"/><text x="70.7757%" y="79.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (156,662,680 samples, 0.24%)</title><rect x="70.3804%" y="453" width="0.2422%" height="15" fill="rgb(246,134,8)" fg:x="45518995238" fg:w="156662680"/><text x="70.6304%" y="463.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (156,662,680 samples, 0.24%)</title><rect x="70.3804%" y="437" width="0.2422%" height="15" fill="rgb(214,143,50)" fg:x="45518995238" fg:w="156662680"/><text x="70.6304%" y="447.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (156,662,680 samples, 0.24%)</title><rect x="70.3804%" y="421" width="0.2422%" height="15" fill="rgb(228,75,8)" fg:x="45518995238" fg:w="156662680"/><text x="70.6304%" y="431.50"></text></g><g><title>std::panic::catch_unwind (156,662,680 samples, 0.24%)</title><rect x="70.3804%" y="405" width="0.2422%" height="15" fill="rgb(207,175,4)" fg:x="45518995238" fg:w="156662680"/><text x="70.6304%" y="415.50"></text></g><g><title>std::panicking::try (156,662,680 samples, 0.24%)</title><rect x="70.3804%" y="389" width="0.2422%" height="15" fill="rgb(205,108,24)" fg:x="45518995238" fg:w="156662680"/><text x="70.6304%" y="399.50"></text></g><g><title>std::panicking::try::do_call (156,662,680 samples, 0.24%)</title><rect x="70.3804%" y="373" width="0.2422%" height="15" fill="rgb(244,120,49)" fg:x="45518995238" fg:w="156662680"/><text x="70.6304%" y="383.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (156,662,680 samples, 0.24%)</title><rect x="70.3804%" y="357" width="0.2422%" height="15" fill="rgb(223,47,38)" fg:x="45518995238" fg:w="156662680"/><text x="70.6304%" y="367.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::_{{closure}} (156,662,680 samples, 0.24%)</title><rect x="70.3804%" y="341" width="0.2422%" height="15" fill="rgb(229,179,11)" fg:x="45518995238" fg:w="156662680"/><text x="70.6304%" y="351.50"></text></g><g><title>rayon_core::join::join_context::call_b::_{{closure}} (156,662,680 samples, 0.24%)</title><rect x="70.3804%" y="325" width="0.2422%" height="15" fill="rgb(231,122,1)" fg:x="45518995238" fg:w="156662680"/><text x="70.6304%" y="335.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (156,662,680 samples, 0.24%)</title><rect x="70.3804%" y="309" width="0.2422%" height="15" fill="rgb(245,119,9)" fg:x="45518995238" fg:w="156662680"/><text x="70.6304%" y="319.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (156,662,680 samples, 0.24%)</title><rect x="70.3804%" y="293" width="0.2422%" height="15" fill="rgb(241,163,25)" fg:x="45518995238" fg:w="156662680"/><text x="70.6304%" y="303.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (156,662,680 samples, 0.24%)</title><rect x="70.3804%" y="277" width="0.2422%" height="15" fill="rgb(217,214,3)" fg:x="45518995238" fg:w="156662680"/><text x="70.6304%" y="287.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (156,662,680 samples, 0.24%)</title><rect x="70.3804%" y="261" width="0.2422%" height="15" fill="rgb(240,86,28)" fg:x="45518995238" fg:w="156662680"/><text x="70.6304%" y="271.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (156,662,680 samples, 0.24%)</title><rect x="70.3804%" y="245" width="0.2422%" height="15" fill="rgb(215,47,9)" fg:x="45518995238" fg:w="156662680"/><text x="70.6304%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (156,662,680 samples, 0.24%)</title><rect x="70.3804%" y="229" width="0.2422%" height="15" fill="rgb(252,25,45)" fg:x="45518995238" fg:w="156662680"/><text x="70.6304%" y="239.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (156,662,680 samples, 0.24%)</title><rect x="70.3804%" y="213" width="0.2422%" height="15" fill="rgb(251,164,9)" fg:x="45518995238" fg:w="156662680"/><text x="70.6304%" y="223.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (156,662,680 samples, 0.24%)</title><rect x="70.3804%" y="197" width="0.2422%" height="15" fill="rgb(233,194,0)" fg:x="45518995238" fg:w="156662680"/><text x="70.6304%" y="207.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (156,662,680 samples, 0.24%)</title><rect x="70.3804%" y="181" width="0.2422%" height="15" fill="rgb(249,111,24)" fg:x="45518995238" fg:w="156662680"/><text x="70.6304%" y="191.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::_{{closure}} (156,662,680 samples, 0.24%)</title><rect x="70.3804%" y="165" width="0.2422%" height="15" fill="rgb(250,223,3)" fg:x="45518995238" fg:w="156662680"/><text x="70.6304%" y="175.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (156,662,680 samples, 0.24%)</title><rect x="70.3804%" y="149" width="0.2422%" height="15" fill="rgb(236,178,37)" fg:x="45518995238" fg:w="156662680"/><text x="70.6304%" y="159.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (156,662,680 samples, 0.24%)</title><rect x="70.3804%" y="133" width="0.2422%" height="15" fill="rgb(241,158,50)" fg:x="45518995238" fg:w="156662680"/><text x="70.6304%" y="143.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::_{{closure}} (156,662,680 samples, 0.24%)</title><rect x="70.3804%" y="117" width="0.2422%" height="15" fill="rgb(213,121,41)" fg:x="45518995238" fg:w="156662680"/><text x="70.6304%" y="127.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (41,261,031 samples, 0.06%)</title><rect x="70.5588%" y="101" width="0.0638%" height="15" fill="rgb(240,92,3)" fg:x="45634396887" fg:w="41261031"/><text x="70.8088%" y="111.50"></text></g><g><title>[libm.so.6] (6,931,341,773 samples, 10.72%)</title><rect x="76.3418%" y="437" width="10.7171%" height="15" fill="rgb(205,123,3)" fg:x="49374620376" fg:w="6931341773"/><text x="76.5918%" y="447.50">[libm.so.6]</text></g><g><title>[unknown] (16,400,224 samples, 0.03%)</title><rect x="87.0336%" y="421" width="0.0254%" height="15" fill="rgb(205,97,47)" fg:x="56289561925" fg:w="16400224"/><text x="87.2836%" y="431.50"></text></g><g><title>exp (10,634,648,915 samples, 16.44%)</title><rect x="70.6226%" y="453" width="16.4430%" height="15" fill="rgb(247,152,14)" fg:x="45675657918" fg:w="10634648915"/><text x="70.8726%" y="463.50">exp</text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (8,681,528 samples, 0.01%)</title><rect x="87.0656%" y="277" width="0.0134%" height="15" fill="rgb(248,195,53)" fg:x="56310306833" fg:w="8681528"/><text x="87.3156%" y="287.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (60,242,628 samples, 0.09%)</title><rect x="87.0791%" y="245" width="0.0931%" height="15" fill="rgb(226,201,16)" fg:x="56318988361" fg:w="60242628"/><text x="87.3291%" y="255.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (60,242,628 samples, 0.09%)</title><rect x="87.0791%" y="229" width="0.0931%" height="15" fill="rgb(205,98,0)" fg:x="56318988361" fg:w="60242628"/><text x="87.3291%" y="239.50"></text></g><g><title>exp (60,242,628 samples, 0.09%)</title><rect x="87.0791%" y="213" width="0.0931%" height="15" fill="rgb(214,191,48)" fg:x="56318988361" fg:w="60242628"/><text x="87.3291%" y="223.50"></text></g><g><title>[libm.so.6] (47,185,552 samples, 0.07%)</title><rect x="87.0992%" y="197" width="0.0730%" height="15" fill="rgb(237,112,39)" fg:x="56332045437" fg:w="47185552"/><text x="87.3492%" y="207.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (10,910,802,651 samples, 16.87%)</title><rect x="70.3155%" y="485" width="16.8700%" height="15" fill="rgb(247,203,27)" fg:x="45477065361" fg:w="10910802651"/><text x="70.5655%" y="495.50">&lt;f64 as num_traits::float:..</text></g><g><title>std::f64::&lt;impl f64&gt;::exp (10,910,802,651 samples, 16.87%)</title><rect x="70.3155%" y="469" width="16.8700%" height="15" fill="rgb(235,124,28)" fg:x="45477065361" fg:w="10910802651"/><text x="70.5655%" y="479.50">std::f64::&lt;impl f64&gt;::exp</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (77,561,179 samples, 0.12%)</title><rect x="87.0656%" y="453" width="0.1199%" height="15" fill="rgb(208,207,46)" fg:x="56310306833" fg:w="77561179"/><text x="87.3156%" y="463.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (77,561,179 samples, 0.12%)</title><rect x="87.0656%" y="437" width="0.1199%" height="15" fill="rgb(234,176,4)" fg:x="56310306833" fg:w="77561179"/><text x="87.3156%" y="447.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (77,561,179 samples, 0.12%)</title><rect x="87.0656%" y="421" width="0.1199%" height="15" fill="rgb(230,133,28)" fg:x="56310306833" fg:w="77561179"/><text x="87.3156%" y="431.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (77,561,179 samples, 0.12%)</title><rect x="87.0656%" y="405" width="0.1199%" height="15" fill="rgb(211,137,40)" fg:x="56310306833" fg:w="77561179"/><text x="87.3156%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (77,561,179 samples, 0.12%)</title><rect x="87.0656%" y="389" width="0.1199%" height="15" fill="rgb(254,35,13)" fg:x="56310306833" fg:w="77561179"/><text x="87.3156%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (77,561,179 samples, 0.12%)</title><rect x="87.0656%" y="373" width="0.1199%" height="15" fill="rgb(225,49,51)" fg:x="56310306833" fg:w="77561179"/><text x="87.3156%" y="383.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (77,561,179 samples, 0.12%)</title><rect x="87.0656%" y="357" width="0.1199%" height="15" fill="rgb(251,10,15)" fg:x="56310306833" fg:w="77561179"/><text x="87.3156%" y="367.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (77,561,179 samples, 0.12%)</title><rect x="87.0656%" y="341" width="0.1199%" height="15" fill="rgb(228,207,15)" fg:x="56310306833" fg:w="77561179"/><text x="87.3156%" y="351.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::_{{closure}} (77,561,179 samples, 0.12%)</title><rect x="87.0656%" y="325" width="0.1199%" height="15" fill="rgb(241,99,19)" fg:x="56310306833" fg:w="77561179"/><text x="87.3156%" y="335.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (77,561,179 samples, 0.12%)</title><rect x="87.0656%" y="309" width="0.1199%" height="15" fill="rgb(207,104,49)" fg:x="56310306833" fg:w="77561179"/><text x="87.3156%" y="319.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (77,561,179 samples, 0.12%)</title><rect x="87.0656%" y="293" width="0.1199%" height="15" fill="rgb(234,99,18)" fg:x="56310306833" fg:w="77561179"/><text x="87.3156%" y="303.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::_{{closure}} (68,879,651 samples, 0.11%)</title><rect x="87.0791%" y="277" width="0.1065%" height="15" fill="rgb(213,191,49)" fg:x="56318988361" fg:w="68879651"/><text x="87.3291%" y="287.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (68,879,651 samples, 0.11%)</title><rect x="87.0791%" y="261" width="0.1065%" height="15" fill="rgb(210,226,19)" fg:x="56318988361" fg:w="68879651"/><text x="87.3291%" y="271.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::powi (152,859,112 samples, 0.24%)</title><rect x="87.1856%" y="485" width="0.2363%" height="15" fill="rgb(229,97,18)" fg:x="56387868012" fg:w="152859112"/><text x="87.4356%" y="495.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::powi (152,859,112 samples, 0.24%)</title><rect x="87.1856%" y="469" width="0.2363%" height="15" fill="rgb(211,167,15)" fg:x="56387868012" fg:w="152859112"/><text x="87.4356%" y="479.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (15,520,045,574 samples, 24.00%)</title><rect x="70.2839%" y="501" width="23.9967%" height="15" fill="rgb(210,169,34)" fg:x="45456581495" fg:w="15520045574"/><text x="70.5339%" y="511.50">&lt;criterion::stats::univariate::kde::ke..</text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::sqrt (4,435,899,945 samples, 6.86%)</title><rect x="87.4219%" y="485" width="6.8587%" height="15" fill="rgb(241,121,31)" fg:x="56540727124" fg:w="4435899945"/><text x="87.6719%" y="495.50">&lt;f64 as n..</text></g><g><title>std::f64::&lt;impl f64&gt;::sqrt (4,435,899,945 samples, 6.86%)</title><rect x="87.4219%" y="469" width="6.8587%" height="15" fill="rgb(232,40,11)" fg:x="56540727124" fg:w="4435899945"/><text x="87.6719%" y="479.50">std::f64:..</text></g><g><title>[unknown] (8,631,319 samples, 0.01%)</title><rect x="94.2672%" y="453" width="0.0133%" height="15" fill="rgb(205,86,26)" fg:x="60967995750" fg:w="8631319"/><text x="94.5172%" y="463.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (3,243,853,412 samples, 5.02%)</title><rect x="94.2806%" y="501" width="5.0156%" height="15" fill="rgb(231,126,28)" fg:x="60976627069" fg:w="3243853412"/><text x="94.5306%" y="511.50">&lt;f64 a..</text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (19,625,000,368 samples, 30.34%)</title><rect x="68.9592%" y="661" width="30.3437%" height="15" fill="rgb(219,221,18)" fg:x="44599813203" fg:w="19625000368"/><text x="69.2092%" y="671.50">&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter:..</text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (19,625,000,368 samples, 30.34%)</title><rect x="68.9592%" y="645" width="30.3437%" height="15" fill="rgb(211,40,0)" fg:x="44599813203" fg:w="19625000368"/><text x="69.2092%" y="655.50">rayon::iter::plumbing::Folder::consume_iter</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (19,625,000,368 samples, 30.34%)</title><rect x="68.9592%" y="629" width="30.3437%" height="15" fill="rgb(239,85,43)" fg:x="44599813203" fg:w="19625000368"/><text x="69.2092%" y="639.50">&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::ite..</text></g><g><title>core::option::Option&lt;T&gt;::map (19,625,000,368 samples, 30.34%)</title><rect x="68.9592%" y="613" width="30.3437%" height="15" fill="rgb(231,55,21)" fg:x="44599813203" fg:w="19625000368"/><text x="69.2092%" y="623.50">core::option::Option&lt;T&gt;::map</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (19,625,000,368 samples, 30.34%)</title><rect x="68.9592%" y="597" width="30.3437%" height="15" fill="rgb(225,184,43)" fg:x="44599813203" fg:w="19625000368"/><text x="69.2092%" y="607.50">core::ops::function::impls::&lt;impl core::ops::func..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (19,625,000,368 samples, 30.34%)</title><rect x="68.9592%" y="581" width="30.3437%" height="15" fill="rgb(251,158,41)" fg:x="44599813203" fg:w="19625000368"/><text x="69.2092%" y="591.50">core::ops::function::impls::&lt;impl core::ops::func..</text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::_{{closure}} (19,625,000,368 samples, 30.34%)</title><rect x="68.9592%" y="565" width="30.3437%" height="15" fill="rgb(234,159,37)" fg:x="44599813203" fg:w="19625000368"/><text x="69.2092%" y="575.50">criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map:..</text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (19,625,000,368 samples, 30.34%)</title><rect x="68.9592%" y="549" width="30.3437%" height="15" fill="rgb(216,204,22)" fg:x="44599813203" fg:w="19625000368"/><text x="69.2092%" y="559.50">criterion::stats::univariate::kde::Kde&lt;A,K&gt;::esti..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (19,621,226,099 samples, 30.34%)</title><rect x="68.9650%" y="533" width="30.3379%" height="15" fill="rgb(214,17,3)" fg:x="44603587472" fg:w="19621226099"/><text x="69.2150%" y="543.50">&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits..</text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::_{{closure}} (18,768,232,076 samples, 29.02%)</title><rect x="70.2839%" y="517" width="29.0190%" height="15" fill="rgb(212,111,17)" fg:x="45456581495" fg:w="18768232076"/><text x="70.5339%" y="527.50">criterion::stats::univariate::kde::Kde&lt;A,K&gt;::es..</text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (37,062,191 samples, 0.06%)</title><rect x="99.3096%" y="373" width="0.0573%" height="15" fill="rgb(221,157,24)" fg:x="64229159364" fg:w="37062191"/><text x="99.5596%" y="383.50"></text></g><g><title>core::ops::function::FnMut::call_mut (37,062,191 samples, 0.06%)</title><rect x="99.3096%" y="357" width="0.0573%" height="15" fill="rgb(252,16,13)" fg:x="64229159364" fg:w="37062191"/><text x="99.5596%" y="367.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (37,062,191 samples, 0.06%)</title><rect x="99.3096%" y="341" width="0.0573%" height="15" fill="rgb(221,62,2)" fg:x="64229159364" fg:w="37062191"/><text x="99.5596%" y="351.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::mean (48,562,991 samples, 0.08%)</title><rect x="99.3029%" y="469" width="0.0751%" height="15" fill="rgb(247,87,22)" fg:x="64224813571" fg:w="48562991"/><text x="99.5529%" y="479.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::sum (48,562,991 samples, 0.08%)</title><rect x="99.3029%" y="453" width="0.0751%" height="15" fill="rgb(215,73,9)" fg:x="64224813571" fg:w="48562991"/><text x="99.5529%" y="463.50"></text></g><g><title>criterion::stats::sum (48,562,991 samples, 0.08%)</title><rect x="99.3029%" y="437" width="0.0751%" height="15" fill="rgb(207,175,33)" fg:x="64224813571" fg:w="48562991"/><text x="99.5529%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (48,562,991 samples, 0.08%)</title><rect x="99.3029%" y="421" width="0.0751%" height="15" fill="rgb(243,129,54)" fg:x="64224813571" fg:w="48562991"/><text x="99.5529%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (48,562,991 samples, 0.08%)</title><rect x="99.3029%" y="405" width="0.0751%" height="15" fill="rgb(227,119,45)" fg:x="64224813571" fg:w="48562991"/><text x="99.5529%" y="415.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (48,562,991 samples, 0.08%)</title><rect x="99.3029%" y="389" width="0.0751%" height="15" fill="rgb(205,109,36)" fg:x="64224813571" fg:w="48562991"/><text x="99.5529%" y="399.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (7,155,007 samples, 0.01%)</title><rect x="99.3669%" y="373" width="0.0111%" height="15" fill="rgb(205,6,39)" fg:x="64266221555" fg:w="7155007"/><text x="99.6169%" y="383.50"></text></g><g><title>core::ops::function::FnMut::call_mut (13,282,154 samples, 0.02%)</title><rect x="99.3779%" y="405" width="0.0205%" height="15" fill="rgb(221,32,16)" fg:x="64273376562" fg:w="13282154"/><text x="99.6279%" y="415.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (13,282,154 samples, 0.02%)</title><rect x="99.3779%" y="389" width="0.0205%" height="15" fill="rgb(228,144,50)" fg:x="64273376562" fg:w="13282154"/><text x="99.6279%" y="399.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (17,122,758 samples, 0.03%)</title><rect x="99.3779%" y="421" width="0.0265%" height="15" fill="rgb(229,201,53)" fg:x="64273376562" fg:w="17122758"/><text x="99.6279%" y="431.50"></text></g><g><title>criterion::analysis::compare::t_test::_{{closure}} (76,522,813 samples, 0.12%)</title><rect x="99.3029%" y="501" width="0.1183%" height="15" fill="rgb(249,153,27)" fg:x="64224813571" fg:w="76522813"/><text x="99.5529%" y="511.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::t (76,522,813 samples, 0.12%)</title><rect x="99.3029%" y="485" width="0.1183%" height="15" fill="rgb(227,106,25)" fg:x="64224813571" fg:w="76522813"/><text x="99.5529%" y="495.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::var (27,959,822 samples, 0.04%)</title><rect x="99.3779%" y="469" width="0.0432%" height="15" fill="rgb(230,65,29)" fg:x="64273376562" fg:w="27959822"/><text x="99.6279%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (27,959,822 samples, 0.04%)</title><rect x="99.3779%" y="453" width="0.0432%" height="15" fill="rgb(221,57,46)" fg:x="64273376562" fg:w="27959822"/><text x="99.6279%" y="463.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (27,959,822 samples, 0.04%)</title><rect x="99.3779%" y="437" width="0.0432%" height="15" fill="rgb(229,161,17)" fg:x="64273376562" fg:w="27959822"/><text x="99.6279%" y="447.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (10,837,064 samples, 0.02%)</title><rect x="99.4044%" y="421" width="0.0168%" height="15" fill="rgb(222,213,11)" fg:x="64290499320" fg:w="10837064"/><text x="99.6544%" y="431.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (19,078,974 samples, 0.03%)</title><rect x="99.5408%" y="485" width="0.0295%" height="15" fill="rgb(235,35,13)" fg:x="64378682339" fg:w="19078974"/><text x="99.7908%" y="495.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (19,078,974 samples, 0.03%)</title><rect x="99.5408%" y="469" width="0.0295%" height="15" fill="rgb(233,158,34)" fg:x="64378682339" fg:w="19078974"/><text x="99.7908%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (8,271,697 samples, 0.01%)</title><rect x="99.5703%" y="485" width="0.0128%" height="15" fill="rgb(215,151,48)" fg:x="64397761313" fg:w="8271697"/><text x="99.8203%" y="495.50"></text></g><g><title>core::ptr::write (8,271,697 samples, 0.01%)</title><rect x="99.5703%" y="469" width="0.0128%" height="15" fill="rgb(229,84,14)" fg:x="64397761313" fg:w="8271697"/><text x="99.8203%" y="479.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (112,827,075 samples, 0.17%)</title><rect x="99.4212%" y="501" width="0.1745%" height="15" fill="rgb(229,68,14)" fg:x="64301336384" fg:w="112827075"/><text x="99.6712%" y="511.50"></text></g><g><title>oorandom::Rand64::rand_range (8,130,449 samples, 0.01%)</title><rect x="99.5831%" y="485" width="0.0126%" height="15" fill="rgb(243,106,26)" fg:x="64406033010" fg:w="8130449"/><text x="99.8331%" y="495.50"></text></g><g><title>oorandom::Rand64::rand_u64 (8,130,449 samples, 0.01%)</title><rect x="99.5831%" y="469" width="0.0126%" height="15" fill="rgb(206,45,38)" fg:x="64406033010" fg:w="8130449"/><text x="99.8331%" y="479.50"></text></g><g><title>criterion::stats::univariate::mixed::bootstrap::_{{closure}} (222,325,306 samples, 0.34%)</title><rect x="99.3029%" y="517" width="0.3438%" height="15" fill="rgb(226,6,15)" fg:x="64224813571" fg:w="222325306"/><text x="99.5529%" y="527.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::new (32,975,418 samples, 0.05%)</title><rect x="99.5956%" y="501" width="0.0510%" height="15" fill="rgb(232,22,54)" fg:x="64414163459" fg:w="32975418"/><text x="99.8456%" y="511.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::all (32,975,418 samples, 0.05%)</title><rect x="99.5956%" y="485" width="0.0510%" height="15" fill="rgb(229,222,32)" fg:x="64414163459" fg:w="32975418"/><text x="99.8456%" y="495.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (32,975,418 samples, 0.05%)</title><rect x="99.5956%" y="469" width="0.0510%" height="15" fill="rgb(228,62,29)" fg:x="64414163459" fg:w="32975418"/><text x="99.8456%" y="479.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (32,975,418 samples, 0.05%)</title><rect x="99.5956%" y="453" width="0.0510%" height="15" fill="rgb(251,103,34)" fg:x="64414163459" fg:w="32975418"/><text x="99.8456%" y="463.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (19,851,320,803 samples, 30.69%)</title><rect x="68.9592%" y="677" width="30.6936%" height="15" fill="rgb(233,12,30)" fg:x="44599813203" fg:w="19851320803"/><text x="69.2092%" y="687.50">rayon::iter::plumbing::Producer::fold_with</text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (226,320,435 samples, 0.35%)</title><rect x="99.3029%" y="661" width="0.3499%" height="15" fill="rgb(238,52,0)" fg:x="64224813571" fg:w="226320435"/><text x="99.5529%" y="671.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (226,320,435 samples, 0.35%)</title><rect x="99.3029%" y="645" width="0.3499%" height="15" fill="rgb(223,98,5)" fg:x="64224813571" fg:w="226320435"/><text x="99.5529%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (226,320,435 samples, 0.35%)</title><rect x="99.3029%" y="629" width="0.3499%" height="15" fill="rgb(228,75,37)" fg:x="64224813571" fg:w="226320435"/><text x="99.5529%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (226,320,435 samples, 0.35%)</title><rect x="99.3029%" y="613" width="0.3499%" height="15" fill="rgb(205,115,49)" fg:x="64224813571" fg:w="226320435"/><text x="99.5529%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (226,320,435 samples, 0.35%)</title><rect x="99.3029%" y="597" width="0.3499%" height="15" fill="rgb(250,154,43)" fg:x="64224813571" fg:w="226320435"/><text x="99.5529%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (226,320,435 samples, 0.35%)</title><rect x="99.3029%" y="581" width="0.3499%" height="15" fill="rgb(226,43,29)" fg:x="64224813571" fg:w="226320435"/><text x="99.5529%" y="591.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::_{{closure}} (226,320,435 samples, 0.35%)</title><rect x="99.3029%" y="565" width="0.3499%" height="15" fill="rgb(249,228,39)" fg:x="64224813571" fg:w="226320435"/><text x="99.5529%" y="575.50"></text></g><g><title>&lt;rayon::iter::map_with::MapWithFolder&lt;C,U,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter::with::_{{closure}} (226,320,435 samples, 0.35%)</title><rect x="99.3029%" y="549" width="0.3499%" height="15" fill="rgb(216,79,43)" fg:x="64224813571" fg:w="226320435"/><text x="99.5529%" y="559.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (226,320,435 samples, 0.35%)</title><rect x="99.3029%" y="533" width="0.3499%" height="15" fill="rgb(228,95,12)" fg:x="64224813571" fg:w="226320435"/><text x="99.5529%" y="543.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (8,116,962 samples, 0.01%)</title><rect x="99.6590%" y="437" width="0.0126%" height="15" fill="rgb(249,221,15)" fg:x="64455140947" fg:w="8116962"/><text x="99.9090%" y="447.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (8,116,962 samples, 0.01%)</title><rect x="99.6590%" y="421" width="0.0126%" height="15" fill="rgb(233,34,13)" fg:x="64455140947" fg:w="8116962"/><text x="99.9090%" y="431.50"></text></g><g><title>exp (8,116,962 samples, 0.01%)</title><rect x="99.6590%" y="405" width="0.0126%" height="15" fill="rgb(214,103,39)" fg:x="64455140947" fg:w="8116962"/><text x="99.9090%" y="415.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (19,883,865,661 samples, 30.74%)</title><rect x="68.9390%" y="693" width="30.7440%" height="15" fill="rgb(251,126,39)" fg:x="44586759925" fg:w="19883865661"/><text x="69.1890%" y="703.50">rayon::iter::plumbing::bridge_producer_consumer::h..</text></g><g><title>rayon_core::join::join_context (19,491,580 samples, 0.03%)</title><rect x="99.6528%" y="677" width="0.0301%" height="15" fill="rgb(214,216,36)" fg:x="64451134006" fg:w="19491580"/><text x="99.9028%" y="687.50"></text></g><g><title>rayon_core::registry::in_worker (19,491,560 samples, 0.03%)</title><rect x="99.6528%" y="661" width="0.0301%" height="15" fill="rgb(220,221,8)" fg:x="64451134026" fg:w="19491560"/><text x="99.9028%" y="671.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (15,484,639 samples, 0.02%)</title><rect x="99.6590%" y="645" width="0.0239%" height="15" fill="rgb(240,216,3)" fg:x="64455140947" fg:w="15484639"/><text x="99.9090%" y="655.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (15,484,639 samples, 0.02%)</title><rect x="99.6590%" y="629" width="0.0239%" height="15" fill="rgb(232,218,17)" fg:x="64455140947" fg:w="15484639"/><text x="99.9090%" y="639.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (15,484,639 samples, 0.02%)</title><rect x="99.6590%" y="613" width="0.0239%" height="15" fill="rgb(229,163,45)" fg:x="64455140947" fg:w="15484639"/><text x="99.9090%" y="623.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (15,484,639 samples, 0.02%)</title><rect x="99.6590%" y="597" width="0.0239%" height="15" fill="rgb(231,110,42)" fg:x="64455140947" fg:w="15484639"/><text x="99.9090%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (15,484,639 samples, 0.02%)</title><rect x="99.6590%" y="581" width="0.0239%" height="15" fill="rgb(208,170,48)" fg:x="64455140947" fg:w="15484639"/><text x="99.9090%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (15,484,639 samples, 0.02%)</title><rect x="99.6590%" y="565" width="0.0239%" height="15" fill="rgb(239,116,25)" fg:x="64455140947" fg:w="15484639"/><text x="99.9090%" y="575.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (15,484,639 samples, 0.02%)</title><rect x="99.6590%" y="549" width="0.0239%" height="15" fill="rgb(219,200,50)" fg:x="64455140947" fg:w="15484639"/><text x="99.9090%" y="559.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (15,484,639 samples, 0.02%)</title><rect x="99.6590%" y="533" width="0.0239%" height="15" fill="rgb(245,200,0)" fg:x="64455140947" fg:w="15484639"/><text x="99.9090%" y="543.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::_{{closure}} (15,484,639 samples, 0.02%)</title><rect x="99.6590%" y="517" width="0.0239%" height="15" fill="rgb(245,119,33)" fg:x="64455140947" fg:w="15484639"/><text x="99.9090%" y="527.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (15,484,639 samples, 0.02%)</title><rect x="99.6590%" y="501" width="0.0239%" height="15" fill="rgb(231,125,12)" fg:x="64455140947" fg:w="15484639"/><text x="99.9090%" y="511.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (15,484,639 samples, 0.02%)</title><rect x="99.6590%" y="485" width="0.0239%" height="15" fill="rgb(216,96,41)" fg:x="64455140947" fg:w="15484639"/><text x="99.9090%" y="495.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::_{{closure}} (15,484,639 samples, 0.02%)</title><rect x="99.6590%" y="469" width="0.0239%" height="15" fill="rgb(248,43,45)" fg:x="64455140947" fg:w="15484639"/><text x="99.9090%" y="479.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (15,484,639 samples, 0.02%)</title><rect x="99.6590%" y="453" width="0.0239%" height="15" fill="rgb(217,222,7)" fg:x="64455140947" fg:w="15484639"/><text x="99.9090%" y="463.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::sqrt (7,367,677 samples, 0.01%)</title><rect x="99.6715%" y="437" width="0.0114%" height="15" fill="rgb(233,28,6)" fg:x="64463257909" fg:w="7367677"/><text x="99.9215%" y="447.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::sqrt (7,367,677 samples, 0.01%)</title><rect x="99.6715%" y="421" width="0.0114%" height="15" fill="rgb(231,218,15)" fg:x="64463257909" fg:w="7367677"/><text x="99.9215%" y="431.50"></text></g><g><title>rayon::slice::quicksort::recurse (29,939,493 samples, 0.05%)</title><rect x="99.6829%" y="693" width="0.0463%" height="15" fill="rgb(226,171,48)" fg:x="64470625586" fg:w="29939493"/><text x="99.9329%" y="703.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (22,470,709 samples, 0.03%)</title><rect x="99.7292%" y="453" width="0.0347%" height="15" fill="rgb(235,201,9)" fg:x="64500565079" fg:w="22470709"/><text x="99.9792%" y="463.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (22,470,709 samples, 0.03%)</title><rect x="99.7292%" y="437" width="0.0347%" height="15" fill="rgb(217,80,15)" fg:x="64500565079" fg:w="22470709"/><text x="99.9792%" y="447.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (22,470,709 samples, 0.03%)</title><rect x="99.7292%" y="421" width="0.0347%" height="15" fill="rgb(219,152,8)" fg:x="64500565079" fg:w="22470709"/><text x="99.9792%" y="431.50"></text></g><g><title>exp (14,151,513 samples, 0.02%)</title><rect x="99.7421%" y="405" width="0.0219%" height="15" fill="rgb(243,107,38)" fg:x="64508884275" fg:w="14151513"/><text x="99.9921%" y="415.50"></text></g><g><title>[libm.so.6] (9,810,826 samples, 0.02%)</title><rect x="99.7488%" y="389" width="0.0152%" height="15" fill="rgb(231,17,5)" fg:x="64513224962" fg:w="9810826"/><text x="99.9988%" y="399.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (26,816,277 samples, 0.04%)</title><rect x="99.7292%" y="693" width="0.0415%" height="15" fill="rgb(209,25,54)" fg:x="64500565079" fg:w="26816277"/><text x="99.9792%" y="703.50"></text></g><g><title>rayon_core::join::join_context::call_b::_{{closure}} (26,816,277 samples, 0.04%)</title><rect x="99.7292%" y="677" width="0.0415%" height="15" fill="rgb(219,0,2)" fg:x="64500565079" fg:w="26816277"/><text x="99.9792%" y="687.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (26,816,277 samples, 0.04%)</title><rect x="99.7292%" y="661" width="0.0415%" height="15" fill="rgb(246,9,5)" fg:x="64500565079" fg:w="26816277"/><text x="99.9792%" y="671.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (26,816,277 samples, 0.04%)</title><rect x="99.7292%" y="645" width="0.0415%" height="15" fill="rgb(226,159,4)" fg:x="64500565079" fg:w="26816277"/><text x="99.9792%" y="655.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (26,816,277 samples, 0.04%)</title><rect x="99.7292%" y="629" width="0.0415%" height="15" fill="rgb(219,175,34)" fg:x="64500565079" fg:w="26816277"/><text x="99.9792%" y="639.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (26,816,277 samples, 0.04%)</title><rect x="99.7292%" y="613" width="0.0415%" height="15" fill="rgb(236,10,46)" fg:x="64500565079" fg:w="26816277"/><text x="99.9792%" y="623.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (26,816,277 samples, 0.04%)</title><rect x="99.7292%" y="597" width="0.0415%" height="15" fill="rgb(240,211,16)" fg:x="64500565079" fg:w="26816277"/><text x="99.9792%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (26,816,277 samples, 0.04%)</title><rect x="99.7292%" y="581" width="0.0415%" height="15" fill="rgb(205,3,43)" fg:x="64500565079" fg:w="26816277"/><text x="99.9792%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (26,816,277 samples, 0.04%)</title><rect x="99.7292%" y="565" width="0.0415%" height="15" fill="rgb(245,7,22)" fg:x="64500565079" fg:w="26816277"/><text x="99.9792%" y="575.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (26,816,277 samples, 0.04%)</title><rect x="99.7292%" y="549" width="0.0415%" height="15" fill="rgb(239,132,32)" fg:x="64500565079" fg:w="26816277"/><text x="99.9792%" y="559.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (26,816,277 samples, 0.04%)</title><rect x="99.7292%" y="533" width="0.0415%" height="15" fill="rgb(228,202,34)" fg:x="64500565079" fg:w="26816277"/><text x="99.9792%" y="543.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::_{{closure}} (26,816,277 samples, 0.04%)</title><rect x="99.7292%" y="517" width="0.0415%" height="15" fill="rgb(254,200,22)" fg:x="64500565079" fg:w="26816277"/><text x="99.9792%" y="527.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (26,816,277 samples, 0.04%)</title><rect x="99.7292%" y="501" width="0.0415%" height="15" fill="rgb(219,10,39)" fg:x="64500565079" fg:w="26816277"/><text x="99.9792%" y="511.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (26,816,277 samples, 0.04%)</title><rect x="99.7292%" y="485" width="0.0415%" height="15" fill="rgb(226,210,39)" fg:x="64500565079" fg:w="26816277"/><text x="99.9792%" y="495.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::_{{closure}} (26,816,277 samples, 0.04%)</title><rect x="99.7292%" y="469" width="0.0415%" height="15" fill="rgb(208,219,16)" fg:x="64500565079" fg:w="26816277"/><text x="99.9792%" y="479.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (12,575,965 samples, 0.02%)</title><rect x="99.7776%" y="405" width="0.0194%" height="15" fill="rgb(216,158,51)" fg:x="64531884484" fg:w="12575965"/><text x="100.0276%" y="415.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (12,575,965 samples, 0.02%)</title><rect x="99.7776%" y="389" width="0.0194%" height="15" fill="rgb(233,14,44)" fg:x="64531884484" fg:w="12575965"/><text x="100.0276%" y="399.50"></text></g><g><title>exp (12,575,965 samples, 0.02%)</title><rect x="99.7776%" y="373" width="0.0194%" height="15" fill="rgb(237,97,39)" fg:x="64531884484" fg:w="12575965"/><text x="100.0276%" y="383.50"></text></g><g><title>[libm.so.6] (8,487,331 samples, 0.01%)</title><rect x="99.7840%" y="357" width="0.0131%" height="15" fill="rgb(218,198,43)" fg:x="64535973118" fg:w="8487331"/><text x="100.0340%" y="367.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (17,425,230 samples, 0.03%)</title><rect x="99.7776%" y="645" width="0.0269%" height="15" fill="rgb(231,104,20)" fg:x="64531884484" fg:w="17425230"/><text x="100.0276%" y="655.50"></text></g><g><title>rayon_core::job::JobRef::execute (17,425,230 samples, 0.03%)</title><rect x="99.7776%" y="629" width="0.0269%" height="15" fill="rgb(254,36,13)" fg:x="64531884484" fg:w="17425230"/><text x="100.0276%" y="639.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (17,425,230 samples, 0.03%)</title><rect x="99.7776%" y="613" width="0.0269%" height="15" fill="rgb(248,14,50)" fg:x="64531884484" fg:w="17425230"/><text x="100.0276%" y="623.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (17,425,230 samples, 0.03%)</title><rect x="99.7776%" y="597" width="0.0269%" height="15" fill="rgb(217,107,29)" fg:x="64531884484" fg:w="17425230"/><text x="100.0276%" y="607.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (17,425,230 samples, 0.03%)</title><rect x="99.7776%" y="581" width="0.0269%" height="15" fill="rgb(251,169,33)" fg:x="64531884484" fg:w="17425230"/><text x="100.0276%" y="591.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (17,425,230 samples, 0.03%)</title><rect x="99.7776%" y="565" width="0.0269%" height="15" fill="rgb(217,108,32)" fg:x="64531884484" fg:w="17425230"/><text x="100.0276%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (17,425,230 samples, 0.03%)</title><rect x="99.7776%" y="549" width="0.0269%" height="15" fill="rgb(219,66,42)" fg:x="64531884484" fg:w="17425230"/><text x="100.0276%" y="559.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (17,425,230 samples, 0.03%)</title><rect x="99.7776%" y="533" width="0.0269%" height="15" fill="rgb(206,180,7)" fg:x="64531884484" fg:w="17425230"/><text x="100.0276%" y="543.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (17,425,230 samples, 0.03%)</title><rect x="99.7776%" y="517" width="0.0269%" height="15" fill="rgb(208,226,31)" fg:x="64531884484" fg:w="17425230"/><text x="100.0276%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (17,425,230 samples, 0.03%)</title><rect x="99.7776%" y="501" width="0.0269%" height="15" fill="rgb(218,26,49)" fg:x="64531884484" fg:w="17425230"/><text x="100.0276%" y="511.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::_{{closure}} (17,425,230 samples, 0.03%)</title><rect x="99.7776%" y="485" width="0.0269%" height="15" fill="rgb(233,197,48)" fg:x="64531884484" fg:w="17425230"/><text x="100.0276%" y="495.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (17,425,230 samples, 0.03%)</title><rect x="99.7776%" y="469" width="0.0269%" height="15" fill="rgb(252,181,51)" fg:x="64531884484" fg:w="17425230"/><text x="100.0276%" y="479.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (17,425,230 samples, 0.03%)</title><rect x="99.7776%" y="453" width="0.0269%" height="15" fill="rgb(253,90,19)" fg:x="64531884484" fg:w="17425230"/><text x="100.0276%" y="463.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::_{{closure}} (17,425,230 samples, 0.03%)</title><rect x="99.7776%" y="437" width="0.0269%" height="15" fill="rgb(215,171,30)" fg:x="64531884484" fg:w="17425230"/><text x="100.0276%" y="447.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (17,425,230 samples, 0.03%)</title><rect x="99.7776%" y="421" width="0.0269%" height="15" fill="rgb(214,222,9)" fg:x="64531884484" fg:w="17425230"/><text x="100.0276%" y="431.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (17,425,606 samples, 0.03%)</title><rect x="99.7776%" y="677" width="0.0269%" height="15" fill="rgb(223,3,22)" fg:x="64531884484" fg:w="17425606"/><text x="100.0276%" y="687.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (17,425,606 samples, 0.03%)</title><rect x="99.7776%" y="661" width="0.0269%" height="15" fill="rgb(225,196,46)" fg:x="64531884484" fg:w="17425606"/><text x="100.0276%" y="671.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (14,738,459 samples, 0.02%)</title><rect x="99.8046%" y="421" width="0.0228%" height="15" fill="rgb(209,110,37)" fg:x="64549310090" fg:w="14738459"/><text x="100.0546%" y="431.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (14,738,459 samples, 0.02%)</title><rect x="99.8046%" y="405" width="0.0228%" height="15" fill="rgb(249,89,12)" fg:x="64549310090" fg:w="14738459"/><text x="100.0546%" y="415.50"></text></g><g><title>exp (14,738,459 samples, 0.02%)</title><rect x="99.8046%" y="389" width="0.0228%" height="15" fill="rgb(226,27,33)" fg:x="64549310090" fg:w="14738459"/><text x="100.0546%" y="399.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (28,507,062 samples, 0.04%)</title><rect x="99.8046%" y="661" width="0.0441%" height="15" fill="rgb(213,82,22)" fg:x="64549310090" fg:w="28507062"/><text x="100.0546%" y="671.50"></text></g><g><title>rayon_core::job::JobRef::execute (28,507,062 samples, 0.04%)</title><rect x="99.8046%" y="645" width="0.0441%" height="15" fill="rgb(248,140,0)" fg:x="64549310090" fg:w="28507062"/><text x="100.0546%" y="655.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (28,507,062 samples, 0.04%)</title><rect x="99.8046%" y="629" width="0.0441%" height="15" fill="rgb(228,106,3)" fg:x="64549310090" fg:w="28507062"/><text x="100.0546%" y="639.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (28,507,062 samples, 0.04%)</title><rect x="99.8046%" y="613" width="0.0441%" height="15" fill="rgb(209,23,37)" fg:x="64549310090" fg:w="28507062"/><text x="100.0546%" y="623.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (28,507,062 samples, 0.04%)</title><rect x="99.8046%" y="597" width="0.0441%" height="15" fill="rgb(241,93,50)" fg:x="64549310090" fg:w="28507062"/><text x="100.0546%" y="607.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (28,507,062 samples, 0.04%)</title><rect x="99.8046%" y="581" width="0.0441%" height="15" fill="rgb(253,46,43)" fg:x="64549310090" fg:w="28507062"/><text x="100.0546%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (28,507,062 samples, 0.04%)</title><rect x="99.8046%" y="565" width="0.0441%" height="15" fill="rgb(226,206,43)" fg:x="64549310090" fg:w="28507062"/><text x="100.0546%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (28,507,062 samples, 0.04%)</title><rect x="99.8046%" y="549" width="0.0441%" height="15" fill="rgb(217,54,7)" fg:x="64549310090" fg:w="28507062"/><text x="100.0546%" y="559.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (28,507,062 samples, 0.04%)</title><rect x="99.8046%" y="533" width="0.0441%" height="15" fill="rgb(223,5,52)" fg:x="64549310090" fg:w="28507062"/><text x="100.0546%" y="543.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (28,507,062 samples, 0.04%)</title><rect x="99.8046%" y="517" width="0.0441%" height="15" fill="rgb(206,52,46)" fg:x="64549310090" fg:w="28507062"/><text x="100.0546%" y="527.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::_{{closure}} (28,507,062 samples, 0.04%)</title><rect x="99.8046%" y="501" width="0.0441%" height="15" fill="rgb(253,136,11)" fg:x="64549310090" fg:w="28507062"/><text x="100.0546%" y="511.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (28,507,062 samples, 0.04%)</title><rect x="99.8046%" y="485" width="0.0441%" height="15" fill="rgb(208,106,33)" fg:x="64549310090" fg:w="28507062"/><text x="100.0546%" y="495.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (28,507,062 samples, 0.04%)</title><rect x="99.8046%" y="469" width="0.0441%" height="15" fill="rgb(206,54,4)" fg:x="64549310090" fg:w="28507062"/><text x="100.0546%" y="479.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::_{{closure}} (28,507,062 samples, 0.04%)</title><rect x="99.8046%" y="453" width="0.0441%" height="15" fill="rgb(213,3,15)" fg:x="64549310090" fg:w="28507062"/><text x="100.0546%" y="463.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (28,507,062 samples, 0.04%)</title><rect x="99.8046%" y="437" width="0.0441%" height="15" fill="rgb(252,211,39)" fg:x="64549310090" fg:w="28507062"/><text x="100.0546%" y="447.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::sqrt (13,768,603 samples, 0.02%)</title><rect x="99.8274%" y="421" width="0.0213%" height="15" fill="rgb(223,6,36)" fg:x="64564048549" fg:w="13768603"/><text x="100.0774%" y="431.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::sqrt (13,768,603 samples, 0.02%)</title><rect x="99.8274%" y="405" width="0.0213%" height="15" fill="rgb(252,169,45)" fg:x="64564048549" fg:w="13768603"/><text x="100.0774%" y="415.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (8,097,166 samples, 0.01%)</title><rect x="99.8487%" y="469" width="0.0125%" height="15" fill="rgb(212,48,26)" fg:x="64577817152" fg:w="8097166"/><text x="100.0987%" y="479.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (12,666,538 samples, 0.02%)</title><rect x="99.8612%" y="437" width="0.0196%" height="15" fill="rgb(251,102,48)" fg:x="64585914318" fg:w="12666538"/><text x="100.1112%" y="447.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (12,666,538 samples, 0.02%)</title><rect x="99.8612%" y="421" width="0.0196%" height="15" fill="rgb(243,208,16)" fg:x="64585914318" fg:w="12666538"/><text x="100.1112%" y="431.50"></text></g><g><title>exp (12,666,538 samples, 0.02%)</title><rect x="99.8612%" y="405" width="0.0196%" height="15" fill="rgb(219,96,24)" fg:x="64585914318" fg:w="12666538"/><text x="100.1112%" y="415.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (16,951,343 samples, 0.03%)</title><rect x="99.8612%" y="453" width="0.0262%" height="15" fill="rgb(219,33,29)" fg:x="64585914318" fg:w="16951343"/><text x="100.1112%" y="463.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (57,898,086 samples, 0.09%)</title><rect x="99.8046%" y="677" width="0.0895%" height="15" fill="rgb(223,176,5)" fg:x="64549310090" fg:w="57898086"/><text x="100.0546%" y="687.50"></text></g><g><title>rayon_core::sleep::Sleep::work_found (29,391,024 samples, 0.05%)</title><rect x="99.8487%" y="661" width="0.0454%" height="15" fill="rgb(228,140,14)" fg:x="64577817152" fg:w="29391024"/><text x="100.0987%" y="671.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (29,391,024 samples, 0.05%)</title><rect x="99.8487%" y="645" width="0.0454%" height="15" fill="rgb(217,179,31)" fg:x="64577817152" fg:w="29391024"/><text x="100.0987%" y="655.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (29,391,024 samples, 0.05%)</title><rect x="99.8487%" y="629" width="0.0454%" height="15" fill="rgb(230,9,30)" fg:x="64577817152" fg:w="29391024"/><text x="100.0987%" y="639.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (29,391,024 samples, 0.05%)</title><rect x="99.8487%" y="613" width="0.0454%" height="15" fill="rgb(230,136,20)" fg:x="64577817152" fg:w="29391024"/><text x="100.0987%" y="623.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (29,391,024 samples, 0.05%)</title><rect x="99.8487%" y="597" width="0.0454%" height="15" fill="rgb(215,210,22)" fg:x="64577817152" fg:w="29391024"/><text x="100.0987%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (29,391,024 samples, 0.05%)</title><rect x="99.8487%" y="581" width="0.0454%" height="15" fill="rgb(218,43,5)" fg:x="64577817152" fg:w="29391024"/><text x="100.0987%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (29,391,024 samples, 0.05%)</title><rect x="99.8487%" y="565" width="0.0454%" height="15" fill="rgb(216,11,5)" fg:x="64577817152" fg:w="29391024"/><text x="100.0987%" y="575.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (29,391,024 samples, 0.05%)</title><rect x="99.8487%" y="549" width="0.0454%" height="15" fill="rgb(209,82,29)" fg:x="64577817152" fg:w="29391024"/><text x="100.0987%" y="559.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (29,391,024 samples, 0.05%)</title><rect x="99.8487%" y="533" width="0.0454%" height="15" fill="rgb(244,115,12)" fg:x="64577817152" fg:w="29391024"/><text x="100.0987%" y="543.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::_{{closure}} (29,391,024 samples, 0.05%)</title><rect x="99.8487%" y="517" width="0.0454%" height="15" fill="rgb(222,82,18)" fg:x="64577817152" fg:w="29391024"/><text x="100.0987%" y="527.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (29,391,024 samples, 0.05%)</title><rect x="99.8487%" y="501" width="0.0454%" height="15" fill="rgb(249,227,8)" fg:x="64577817152" fg:w="29391024"/><text x="100.0987%" y="511.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (29,391,024 samples, 0.05%)</title><rect x="99.8487%" y="485" width="0.0454%" height="15" fill="rgb(253,141,45)" fg:x="64577817152" fg:w="29391024"/><text x="100.0987%" y="495.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::_{{closure}} (21,293,858 samples, 0.03%)</title><rect x="99.8612%" y="469" width="0.0329%" height="15" fill="rgb(234,184,4)" fg:x="64585914318" fg:w="21293858"/><text x="100.1112%" y="479.50"></text></g><g><title>rayon_core::join::join_context::_{{closure}} (84,162,567 samples, 0.13%)</title><rect x="99.7707%" y="693" width="0.1301%" height="15" fill="rgb(218,194,23)" fg:x="64527381356" fg:w="84162567"/><text x="100.0207%" y="703.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (8,586,665 samples, 0.01%)</title><rect x="99.9058%" y="677" width="0.0133%" height="15" fill="rgb(235,66,41)" fg:x="64614787908" fg:w="8586665"/><text x="100.1558%" y="687.50"></text></g><g><title>rayon_core::job::JobRef::execute (8,586,665 samples, 0.01%)</title><rect x="99.9058%" y="661" width="0.0133%" height="15" fill="rgb(245,217,1)" fg:x="64614787908" fg:w="8586665"/><text x="100.1558%" y="671.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (8,586,665 samples, 0.01%)</title><rect x="99.9058%" y="645" width="0.0133%" height="15" fill="rgb(229,91,1)" fg:x="64614787908" fg:w="8586665"/><text x="100.1558%" y="655.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (8,586,665 samples, 0.01%)</title><rect x="99.9058%" y="629" width="0.0133%" height="15" fill="rgb(207,101,30)" fg:x="64614787908" fg:w="8586665"/><text x="100.1558%" y="639.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (8,586,665 samples, 0.01%)</title><rect x="99.9058%" y="613" width="0.0133%" height="15" fill="rgb(223,82,49)" fg:x="64614787908" fg:w="8586665"/><text x="100.1558%" y="623.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (8,586,665 samples, 0.01%)</title><rect x="99.9058%" y="597" width="0.0133%" height="15" fill="rgb(218,167,17)" fg:x="64614787908" fg:w="8586665"/><text x="100.1558%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (8,586,665 samples, 0.01%)</title><rect x="99.9058%" y="581" width="0.0133%" height="15" fill="rgb(208,103,14)" fg:x="64614787908" fg:w="8586665"/><text x="100.1558%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (8,586,665 samples, 0.01%)</title><rect x="99.9058%" y="565" width="0.0133%" height="15" fill="rgb(238,20,8)" fg:x="64614787908" fg:w="8586665"/><text x="100.1558%" y="575.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (8,586,665 samples, 0.01%)</title><rect x="99.9058%" y="549" width="0.0133%" height="15" fill="rgb(218,80,54)" fg:x="64614787908" fg:w="8586665"/><text x="100.1558%" y="559.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (8,586,665 samples, 0.01%)</title><rect x="99.9058%" y="533" width="0.0133%" height="15" fill="rgb(240,144,17)" fg:x="64614787908" fg:w="8586665"/><text x="100.1558%" y="543.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::_{{closure}} (8,586,665 samples, 0.01%)</title><rect x="99.9058%" y="517" width="0.0133%" height="15" fill="rgb(245,27,50)" fg:x="64614787908" fg:w="8586665"/><text x="100.1558%" y="527.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (8,586,665 samples, 0.01%)</title><rect x="99.9058%" y="501" width="0.0133%" height="15" fill="rgb(251,51,7)" fg:x="64614787908" fg:w="8586665"/><text x="100.1558%" y="511.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8,586,665 samples, 0.01%)</title><rect x="99.9058%" y="485" width="0.0133%" height="15" fill="rgb(245,217,29)" fg:x="64614787908" fg:w="8586665"/><text x="100.1558%" y="495.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::_{{closure}} (8,586,665 samples, 0.01%)</title><rect x="99.9058%" y="469" width="0.0133%" height="15" fill="rgb(221,176,29)" fg:x="64614787908" fg:w="8586665"/><text x="100.1558%" y="479.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (8,586,665 samples, 0.01%)</title><rect x="99.9058%" y="453" width="0.0133%" height="15" fill="rgb(212,180,24)" fg:x="64614787908" fg:w="8586665"/><text x="100.1558%" y="463.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::sqrt (8,586,665 samples, 0.01%)</title><rect x="99.9058%" y="437" width="0.0133%" height="15" fill="rgb(254,24,2)" fg:x="64614787908" fg:w="8586665"/><text x="100.1558%" y="447.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::sqrt (8,586,665 samples, 0.01%)</title><rect x="99.9058%" y="421" width="0.0133%" height="15" fill="rgb(230,100,2)" fg:x="64614787908" fg:w="8586665"/><text x="100.1558%" y="431.50"></text></g><g><title>rayon_core::sleep::Sleep::no_work_found (17,714,435 samples, 0.03%)</title><rect x="99.9191%" y="677" width="0.0274%" height="15" fill="rgb(219,142,25)" fg:x="64623374614" fg:w="17714435"/><text x="100.1691%" y="687.50"></text></g><g><title>std::thread::yield_now (15,217,713 samples, 0.02%)</title><rect x="99.9230%" y="661" width="0.0235%" height="15" fill="rgb(240,73,43)" fg:x="64625871336" fg:w="15217713"/><text x="100.1730%" y="671.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::yield_now (15,217,713 samples, 0.02%)</title><rect x="99.9230%" y="645" width="0.0235%" height="15" fill="rgb(214,114,15)" fg:x="64625871336" fg:w="15217713"/><text x="100.1730%" y="655.50"></text></g><g><title>__sched_yield (15,217,713 samples, 0.02%)</title><rect x="99.9230%" y="629" width="0.0235%" height="15" fill="rgb(207,130,4)" fg:x="64625871336" fg:w="15217713"/><text x="100.1730%" y="639.50"></text></g><g><title>[unknown] (13,305,889 samples, 0.02%)</title><rect x="99.9259%" y="613" width="0.0206%" height="15" fill="rgb(221,25,40)" fg:x="64627783160" fg:w="13305889"/><text x="100.1759%" y="623.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (8,724,610 samples, 0.01%)</title><rect x="99.9465%" y="661" width="0.0135%" height="15" fill="rgb(241,184,7)" fg:x="64641089049" fg:w="8724610"/><text x="100.1965%" y="671.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (8,724,610 samples, 0.01%)</title><rect x="99.9465%" y="645" width="0.0135%" height="15" fill="rgb(235,159,4)" fg:x="64641089049" fg:w="8724610"/><text x="100.1965%" y="655.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (8,724,610 samples, 0.01%)</title><rect x="99.9465%" y="629" width="0.0135%" height="15" fill="rgb(214,87,48)" fg:x="64641089049" fg:w="8724610"/><text x="100.1965%" y="639.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (8,724,610 samples, 0.01%)</title><rect x="99.9465%" y="613" width="0.0135%" height="15" fill="rgb(246,198,24)" fg:x="64641089049" fg:w="8724610"/><text x="100.1965%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (8,724,610 samples, 0.01%)</title><rect x="99.9465%" y="597" width="0.0135%" height="15" fill="rgb(209,66,40)" fg:x="64641089049" fg:w="8724610"/><text x="100.1965%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (8,724,610 samples, 0.01%)</title><rect x="99.9465%" y="581" width="0.0135%" height="15" fill="rgb(233,147,39)" fg:x="64641089049" fg:w="8724610"/><text x="100.1965%" y="591.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (8,724,610 samples, 0.01%)</title><rect x="99.9465%" y="565" width="0.0135%" height="15" fill="rgb(231,145,52)" fg:x="64641089049" fg:w="8724610"/><text x="100.1965%" y="575.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (8,724,610 samples, 0.01%)</title><rect x="99.9465%" y="549" width="0.0135%" height="15" fill="rgb(206,20,26)" fg:x="64641089049" fg:w="8724610"/><text x="100.1965%" y="559.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::_{{closure}} (8,724,610 samples, 0.01%)</title><rect x="99.9465%" y="533" width="0.0135%" height="15" fill="rgb(238,220,4)" fg:x="64641089049" fg:w="8724610"/><text x="100.1965%" y="543.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (8,724,610 samples, 0.01%)</title><rect x="99.9465%" y="517" width="0.0135%" height="15" fill="rgb(252,195,42)" fg:x="64641089049" fg:w="8724610"/><text x="100.1965%" y="527.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8,724,610 samples, 0.01%)</title><rect x="99.9465%" y="501" width="0.0135%" height="15" fill="rgb(209,10,6)" fg:x="64641089049" fg:w="8724610"/><text x="100.1965%" y="511.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::_{{closure}} (8,724,610 samples, 0.01%)</title><rect x="99.9465%" y="485" width="0.0135%" height="15" fill="rgb(229,3,52)" fg:x="64641089049" fg:w="8724610"/><text x="100.1965%" y="495.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (8,672,604 samples, 0.01%)</title><rect x="99.9600%" y="389" width="0.0134%" height="15" fill="rgb(253,49,37)" fg:x="64649813659" fg:w="8672604"/><text x="100.2100%" y="399.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (51,284,627 samples, 0.08%)</title><rect x="99.9008%" y="693" width="0.0793%" height="15" fill="rgb(240,103,49)" fg:x="64611543923" fg:w="51284627"/><text x="100.1508%" y="703.50"></text></g><g><title>rayon_core::sleep::Sleep::work_found (21,739,501 samples, 0.03%)</title><rect x="99.9465%" y="677" width="0.0336%" height="15" fill="rgb(250,182,30)" fg:x="64641089049" fg:w="21739501"/><text x="100.1965%" y="687.50"></text></g><g><title>rayon_core::join::join_context::_{{closure}} (13,014,891 samples, 0.02%)</title><rect x="99.9600%" y="661" width="0.0201%" height="15" fill="rgb(248,8,30)" fg:x="64649813659" fg:w="13014891"/><text x="100.2100%" y="671.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (13,014,891 samples, 0.02%)</title><rect x="99.9600%" y="645" width="0.0201%" height="15" fill="rgb(237,120,30)" fg:x="64649813659" fg:w="13014891"/><text x="100.2100%" y="655.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (13,014,891 samples, 0.02%)</title><rect x="99.9600%" y="629" width="0.0201%" height="15" fill="rgb(221,146,34)" fg:x="64649813659" fg:w="13014891"/><text x="100.2100%" y="639.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (13,014,891 samples, 0.02%)</title><rect x="99.9600%" y="613" width="0.0201%" height="15" fill="rgb(242,55,13)" fg:x="64649813659" fg:w="13014891"/><text x="100.2100%" y="623.50"></text></g><g><title>rayon_core::job::JobRef::execute (13,014,891 samples, 0.02%)</title><rect x="99.9600%" y="597" width="0.0201%" height="15" fill="rgb(242,112,31)" fg:x="64649813659" fg:w="13014891"/><text x="100.2100%" y="607.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (13,014,891 samples, 0.02%)</title><rect x="99.9600%" y="581" width="0.0201%" height="15" fill="rgb(249,192,27)" fg:x="64649813659" fg:w="13014891"/><text x="100.2100%" y="591.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (13,014,891 samples, 0.02%)</title><rect x="99.9600%" y="565" width="0.0201%" height="15" fill="rgb(208,204,44)" fg:x="64649813659" fg:w="13014891"/><text x="100.2100%" y="575.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (13,014,891 samples, 0.02%)</title><rect x="99.9600%" y="549" width="0.0201%" height="15" fill="rgb(208,93,54)" fg:x="64649813659" fg:w="13014891"/><text x="100.2100%" y="559.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (13,014,891 samples, 0.02%)</title><rect x="99.9600%" y="533" width="0.0201%" height="15" fill="rgb(242,1,31)" fg:x="64649813659" fg:w="13014891"/><text x="100.2100%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (13,014,891 samples, 0.02%)</title><rect x="99.9600%" y="517" width="0.0201%" height="15" fill="rgb(241,83,25)" fg:x="64649813659" fg:w="13014891"/><text x="100.2100%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (13,014,891 samples, 0.02%)</title><rect x="99.9600%" y="501" width="0.0201%" height="15" fill="rgb(205,169,50)" fg:x="64649813659" fg:w="13014891"/><text x="100.2100%" y="511.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (13,014,891 samples, 0.02%)</title><rect x="99.9600%" y="485" width="0.0201%" height="15" fill="rgb(239,186,37)" fg:x="64649813659" fg:w="13014891"/><text x="100.2100%" y="495.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (13,014,891 samples, 0.02%)</title><rect x="99.9600%" y="469" width="0.0201%" height="15" fill="rgb(205,221,10)" fg:x="64649813659" fg:w="13014891"/><text x="100.2100%" y="479.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::_{{closure}} (13,014,891 samples, 0.02%)</title><rect x="99.9600%" y="453" width="0.0201%" height="15" fill="rgb(218,196,15)" fg:x="64649813659" fg:w="13014891"/><text x="100.2100%" y="463.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (13,014,891 samples, 0.02%)</title><rect x="99.9600%" y="437" width="0.0201%" height="15" fill="rgb(218,196,35)" fg:x="64649813659" fg:w="13014891"/><text x="100.2100%" y="447.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (13,014,891 samples, 0.02%)</title><rect x="99.9600%" y="421" width="0.0201%" height="15" fill="rgb(233,63,24)" fg:x="64649813659" fg:w="13014891"/><text x="100.2100%" y="431.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::_{{closure}} (13,014,891 samples, 0.02%)</title><rect x="99.9600%" y="405" width="0.0201%" height="15" fill="rgb(225,8,4)" fg:x="64649813659" fg:w="13014891"/><text x="100.2100%" y="415.50"></text></g><g><title>rayon_core::sleep::Sleep::wake_any_threads (8,557,617 samples, 0.01%)</title><rect x="99.9866%" y="693" width="0.0132%" height="15" fill="rgb(234,105,35)" fg:x="64667044183" fg:w="8557617"/><text x="100.2366%" y="703.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (8,557,617 samples, 0.01%)</title><rect x="99.9866%" y="677" width="0.0132%" height="15" fill="rgb(236,21,32)" fg:x="64667044183" fg:w="8557617"/><text x="100.2366%" y="687.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (8,557,617 samples, 0.01%)</title><rect x="99.9866%" y="661" width="0.0132%" height="15" fill="rgb(228,109,6)" fg:x="64667044183" fg:w="8557617"/><text x="100.2366%" y="671.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (8,557,617 samples, 0.01%)</title><rect x="99.9866%" y="645" width="0.0132%" height="15" fill="rgb(229,215,31)" fg:x="64667044183" fg:w="8557617"/><text x="100.2366%" y="655.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (8,557,617 samples, 0.01%)</title><rect x="99.9866%" y="629" width="0.0132%" height="15" fill="rgb(221,52,54)" fg:x="64667044183" fg:w="8557617"/><text x="100.2366%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (8,557,617 samples, 0.01%)</title><rect x="99.9866%" y="613" width="0.0132%" height="15" fill="rgb(252,129,43)" fg:x="64667044183" fg:w="8557617"/><text x="100.2366%" y="623.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (8,557,617 samples, 0.01%)</title><rect x="99.9866%" y="597" width="0.0132%" height="15" fill="rgb(248,183,27)" fg:x="64667044183" fg:w="8557617"/><text x="100.2366%" y="607.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (8,557,617 samples, 0.01%)</title><rect x="99.9866%" y="581" width="0.0132%" height="15" fill="rgb(250,0,22)" fg:x="64667044183" fg:w="8557617"/><text x="100.2366%" y="591.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (8,557,617 samples, 0.01%)</title><rect x="99.9866%" y="565" width="0.0132%" height="15" fill="rgb(213,166,10)" fg:x="64667044183" fg:w="8557617"/><text x="100.2366%" y="575.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::map::_{{closure}} (8,557,617 samples, 0.01%)</title><rect x="99.9866%" y="549" width="0.0132%" height="15" fill="rgb(207,163,36)" fg:x="64667044183" fg:w="8557617"/><text x="100.2366%" y="559.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate (8,557,617 samples, 0.01%)</title><rect x="99.9866%" y="533" width="0.0132%" height="15" fill="rgb(208,122,22)" fg:x="64667044183" fg:w="8557617"/><text x="100.2366%" y="543.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8,557,617 samples, 0.01%)</title><rect x="99.9866%" y="517" width="0.0132%" height="15" fill="rgb(207,104,49)" fg:x="64667044183" fg:w="8557617"/><text x="100.2366%" y="527.50"></text></g><g><title>criterion::stats::univariate::kde::Kde&lt;A,K&gt;::estimate::_{{closure}} (8,557,617 samples, 0.01%)</title><rect x="99.9866%" y="501" width="0.0132%" height="15" fill="rgb(248,211,50)" fg:x="64667044183" fg:w="8557617"/><text x="100.2366%" y="511.50"></text></g><g><title>&lt;criterion::stats::univariate::kde::kernel::Gaussian as criterion::stats::univariate::kde::kernel::Kernel&lt;A&gt;&gt;::evaluate (8,557,617 samples, 0.01%)</title><rect x="99.9866%" y="485" width="0.0132%" height="15" fill="rgb(217,13,45)" fg:x="64667044183" fg:w="8557617"/><text x="100.2366%" y="495.50"></text></g><g><title>&lt;f64 as num_traits::float::Float&gt;::exp (8,557,617 samples, 0.01%)</title><rect x="99.9866%" y="469" width="0.0132%" height="15" fill="rgb(211,216,49)" fg:x="64667044183" fg:w="8557617"/><text x="100.2366%" y="479.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::exp (8,557,617 samples, 0.01%)</title><rect x="99.9866%" y="453" width="0.0132%" height="15" fill="rgb(221,58,53)" fg:x="64667044183" fg:w="8557617"/><text x="100.2366%" y="463.50"></text></g><g><title>exp (8,557,617 samples, 0.01%)</title><rect x="99.9866%" y="437" width="0.0132%" height="15" fill="rgb(220,112,41)" fg:x="64667044183" fg:w="8557617"/><text x="100.2366%" y="447.50"></text></g><g><title>all (64,675,697,449 samples, 100%)</title><rect x="0.0000%" y="725" width="100.0000%" height="15" fill="rgb(236,38,28)" fg:x="0" fg:w="64675697449"/><text x="0.2500%" y="735.50"></text></g><g><title>my_benchmark-37 (62,187,058,007 samples, 96.15%)</title><rect x="3.8479%" y="709" width="96.1521%" height="15" fill="rgb(227,195,22)" fg:x="2488639442" fg:w="62187058007"/><text x="4.0979%" y="719.50">my_benchmark-37</text></g></svg></svg>